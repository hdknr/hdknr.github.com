=================
Entity Framework
=================


.. contents:: Entity Framework

インストール
============

- "ツール">"Library Package Manager" > "Package Manager Console" でPackage Manager Console を開く
- プロンプトにコマンドを投入してインストール。

::

    PM> Install-Package EntityFramework


    'EntityFramework 4.3.1' already installed.
    Successfully added 'EntityFramework 4.3.1' to AdConnectUnit.


- プロジェクトにパッケージが追加されます(package.config)。


.. code-block:: xml

    <?xml version="1.0" encoding="utf-8"?>
    <packages>
      <package id="EntityFramework" version="4.3.1" />
    </packages>


- データベースにアクセスするための設定ファイルが追加されます(App.config/Web.config )

.. code-block:: xml

    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
      <configSections>
        <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
        <section name="entityFramework" 
            type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      </configSections>
      <entityFramework>
        <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework">
          <parameters>
            <parameter value="Data Source=.\SQLEXPRESS; Integrated Security=True; MultipleActiveResultSets=True" />
          </parameters>
        </defaultConnectionFactory>
      </entityFramework>
    </configuration>
    

マイグレーション
==================

マイグレーションの有効化
---------------------------

::

    PM> Enable-Migrations


無効にするには
^^^^^^^^^^^^^^^^^

- Migrationsフォルダーごと削除
- App.config からDB接続を削除
- 不要であれば、package.config からEntityFramework を削除
- 不要であれば、EntityFramework のアセンブリ参照を削除


マイグレーション追加
------------------------------

::

    PM> Add-Migration session-move-to-connect-lib

マイグレーション反映 
------------------------------

::

    PM> Update-Database

One-To-One Relation
======================

One-To-Oneリレーションでは １方が **プリンシパルエンド** (principal)、もう一方が **依存エンド** (dependent)となります。
プリンシパルエンドは最初にINSERTされるモデルで、依存エンドがなくても存在可能です。
依存エンドはプリンシパルがINSERTされてからINSERTされます。依存エンドはプリンシパルエンドの外部キーを持っているからです。

.. code-block:: csharp

    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Web;
    
    using System.Data.Entity;
    
    using System.ComponentModel.DataAnnotations;        
    // for KeyAttribute,ForeignKeyAttribte
        
    namespace AdConnect.Models
    {
    
        public class Husband
        {
            public int Id { get; set; }
            public Wife Wife { get; set; }
        }
    
        public class Wife
        {
            [Key,ForeignKey("Husband" )]
            public int Id { get; set; }
            public Husband Husband { get; set; }
        }

        public class ConnectContext : DbContext
        {
            public DbSet<Husband> Husbands { get; set; }
            public DbSet<Wife> Wives { get; set; }
        }
    }

プリンシパル

.. code-block:: mysql

    USE [AdConnect.Models.ConnectContext]
    GO
    
    SET ANSI_NULLS ON
    GO
    
    SET QUOTED_IDENTIFIER ON
    GO
    
    CREATE TABLE [dbo].[Husbands](
        [Id] [int] IDENTITY(1,1) NOT NULL,
     CONSTRAINT [PK_Husbands] PRIMARY KEY CLUSTERED 
    (
        [Id] ASC
    )WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, 
           IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
    ) ON [PRIMARY]
    
    GO

依存

.. code-block:: mysql

    USE [AdConnect.Models.ConnectContext]
    GO

    SET ANSI_NULLS ON
    GO
    
    SET QUOTED_IDENTIFIER ON
    GO
    
    CREATE TABLE [dbo].[Wives](
        [Id] [int] NOT NULL,
     CONSTRAINT [PK_Wives] PRIMARY KEY CLUSTERED 
    (
        [Id] ASC
    )WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, 
            IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
    ) ON [PRIMARY]
    
    GO
    
    ALTER TABLE [dbo].[Wives]  WITH CHECK ADD  CONSTRAINT [FK_Wives_Husbands_Id] FOREIGN KEY([Id])
    REFERENCES [dbo].[Husbands] ([Id])
    GO
    
    ALTER TABLE [dbo].[Wives] CHECK CONSTRAINT [FK_Wives_Husbands_Id]
    GO


    
How To
===================

- `Entity Framework を Visual Studio C# Expressに入れてみる <http://note.harajuku-tech.org/entityframework-visual-studio-c-express>`_
- `My first "LINQ to Entities" <http://note.harajuku-tech.org/linq-to-entities-my-first-linq-to-entities>`_
- `abstratクラスの定義は継承できます <http://note.harajuku-tech.org/aspnet-mvc-entity-framework-abstrat>`_ 
- `NUnitからもテスト可能 <http://note.harajuku-tech.org/nunit-entity-framework-431-code-first-model>`_
- `コンテキスト1 <http://note.harajuku-tech.org/aspnet-mvc-1>`_
- `コンテキスト2 <http://note.harajuku-tech.org/aspnet-mvc-2-db>`_

その他
======

- `単純なテスト <http://note.harajuku-tech.org/nunit>`_
- `aspnet_regiis.exe -i 実行すること <http://note.harajuku-tech.org/aspnet-40-aspnetregiisexe-i>`_ 
- `ASP.NET 4.0 を有効にする  <http://note.harajuku-tech.org/iis70-aspnet-20-40>`_
- `JSONを返す <http://note.harajuku-tech.org/aspnet-mvc-json>`_
- `Control/View <http://note.harajuku-tech.org/aspnet-controller-and-view>`_
- `DirectoryサービスでActive Directoryにアクセス <http://note.harajuku-tech.org/systemdirectoryservices>`_


