======
X.509
======

.. contents:: Table of Contents

RFC5280
=======

:rfc:`5280` について

.. _x509.keyusage:

4.2.1.3.  Key Usage
-----------------------

The key usage extension defines the purpose 
(e.g., encipherment, signature, certificate signing) of the key contained 
in the certificate.  

The usage restriction might be employed 
when a key that could be used for more than one operation is to be restricted.  
For example, 
when an RSA key should be used only to verify signatures on objects other than 
public key certificates and CRLs, 
the digitalSignature and/or nonRepudiation bits would be asserted.

Likewise, 
when an RSA key should be used only for key management, 
the keyEncipherment bit would be asserted.

Conforming CAs MUST include this extension in certificates 
that contain public keys that are used to validate digital signatures 
on other public key certificates or CRLs.  
When present, conforming CAs SHOULD mark this extension as critical.

::

      id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }

      KeyUsage ::= BIT STRING {
           digitalSignature        (0),
           nonRepudiation          (1), -- recent editions of X.509 have
                                -- renamed this bit to contentCommitment
           keyEncipherment         (2),
           dataEncipherment        (3),
           keyAgreement            (4),
           keyCertSign             (5),
           cRLSign                 (6),
           encipherOnly            (7),
           decipherOnly            (8) }

Bits in the KeyUsage type are used as follows:

.. glossary::

    digitalSignature

        The digitalSignature bit is asserted 
        when the subject public key is used for verifying digital signatures, 
        other than signatures on certificates (bit 5) and CRLs (bit 6), 
        such as those used in an entity authentication service, 
        a data origin authentication service, and/or an integrity service.

    nonRepudiation

        The nonRepudiation bit is asserted 
        when the subject public key is used to verify digital signatures, 
        other than signatures on certificates (bit 5) and CRLs (bit 6), 
        used to provide a non-repudiation service that protects 
        against the signing entity falsely denying some action.  

        In the case of later conflict, 
        a reliable third party may determine 
        the authenticity of the signed data.  
        (Note that recent editions of X.509 have renamed the
        nonRepudiation bit to contentCommitment.)

    keyEncipherment

        The keyEncipherment bit is asserted 
        when the subject public key is used for enciphering private or secret keys, 
        i.e., for key transport.  
    
        For example, 
        this bit shall be set when an RSA public key is to be used 
        for encrypting a symmetric content-decryption key 
        or an asymmetric private key.

    dataEncipherment
      
        The dataEncipherment bit is asserted 
        when the subject public key is used for directly enciphering 
        raw user data without the use of an intermediate symmetric cipher.  
    
        Note that the use of this bit is extremely uncommon; 
        almost all applications use key transport or key agreement 
        to establish a symmetric key.

    keyAgreement
      
        The keyAgreement bit is asserted 
        when the subject public key is used for key agreement.  

        For example, when a Diffie-Hellman key is
        to be used for key management, 
        then this bit is set.

    keyCertSign

        The keyCertSign bit is asserted 
        when the subject public key is used for verifying signatures 
        on public key certificates.  
        If the keyCertSign bit is asserted, 
        then the cA bit in the basic constraints extension (Section 4.2.1.9) MUST also be asserted.

    cRLSign

        The cRLSign bit is asserted 
        when the subject public key is used for verifying signatures 
        on certificate revocation lists 
        (e.g., CRLs, delta CRLs, or ARLs).

    encipherOnly

        The meaning of the encipherOnly bit is undefined 
        in the absence of the keyAgreement bit.  
        When the encipherOnly bit is asserted and the keyAgreement bit is also set, 
        the subject public key may be used only for enciphering data 
        while performing key agreement.

    decipherOnly 

        The meaning of the decipherOnly bit is undefined 
        in the absence of the keyAgreement bit.  
        When the decipherOnly bit is asserted and the keyAgreement bit is also set, 
        the subject public key may be used only for deciphering data 
        while performing key agreement.

If the keyUsage extension is present, 
then the subject public key MUST NOT be used to verify signatures 
on certificates or CRLs unless the corresponding keyCertSign or cRLSign bit is set.  

If the subject public key is only to be used for verifying signatures on
certificates and/or CRLs, 
then the digitalSignature and nonRepudiation bits SHOULD NOT be set.  

keyUsageでkeyCertSign cRLSignがある時だけ
サブジュエクトのパブリックキーを証明書やCRLにに対して使用可能です。
その場合、digitalSignature とnonRepudiation をセットしては行けません。

However, 
the digitalSignature and/or nonRepudiation bits MAY be set 
in addition to the keyCertSign and/or cRLSign bits 
if the subject public key is to be used 
to verify signatures on certificates and/or CRLs 
as well as other objects.

Combining the nonRepudiation bit in the keyUsage certificate
extension with other keyUsage bits may have security implications
depending on the context in which the certificate is to be used.
Further distinctions between the digitalSignature and nonRepudiation
bits may be provided in specific certificate policies.

This profile does not restrict the combinations of bits that may be
set in an instantiation of the keyUsage extension.  However,
appropriate values for keyUsage extensions for particular algorithms
are specified in [RFC3279], [RFC4055], and [RFC4491].  When the
keyUsage extension appears in a certificate, at least one of the bits
MUST be set to 1.



4.2.1.12.  Extended Key Usage
------------------------------------------

This extension indicates one or more purposes for which the certified
public key may be used, in addition to or in place of the basic
purposes indicated in the key usage extension.  In general, this
extension will appear only in end entity certificates.  This
extension is defined as follows:

::

   id-ce-extKeyUsage OBJECT IDENTIFIER ::= { id-ce 37 }

   ExtKeyUsageSyntax ::= SEQUENCE SIZE (1..MAX) OF KeyPurposeId

   KeyPurposeId ::= OBJECT IDENTIFIER


Key purposes may be defined by any organization with a need.  
Object identifiers used to identify key purposes MUST be assigned 
in accordance with IANA or ITU-T Recommendation X.660 [X.660].

This extension MAY, at the option of the certificate issuer, be
either critical or non-critical.

If the extension is present, then the certificate MUST only be used
for one of the purposes indicated.  If multiple purposes are
indicated the application need not recognize all purposes indicated,
as long as the intended purpose is present.  Certificate using
applications MAY require that the extended key usage extension be
present and that a particular purpose be indicated in order for the
certificate to be acceptable to that application.

If a CA includes extended key usages to satisfy such applications,
but does not wish to restrict usages of the key, the CA can include
the special KeyPurposeId anyExtendedKeyUsage in addition to the
particular key purposes required by the applications.  Conforming CAs
SHOULD NOT mark this extension as critical if the anyExtendedKeyUsage
KeyPurposeId is present.  Applications that require the presence of a
particular purpose MAY reject certificates that include the
anyExtendedKeyUsage OID but not the particular OID expected for the
application.


If a certificate contains both a key usage extension and an extended
key usage extension, then both extensions MUST be processed
independently and the certificate MUST only be used for a purpose
consistent with both extensions.  If there is no purpose consistent
with both extensions, then the certificate MUST NOT be used for any
purpose.

The following key usage purposes are defined:

::

   anyExtendedKeyUsage OBJECT IDENTIFIER ::= { id-ce-extKeyUsage 0 }

   id-kp OBJECT IDENTIFIER ::= { id-pkix 3 }

   id-kp-serverAuth             OBJECT IDENTIFIER ::= { id-kp 1 }
   -- TLS WWW server authentication
   -- Key usage bits that may be consistent: digitalSignature,
   -- keyEncipherment or keyAgreement

   id-kp-clientAuth             OBJECT IDENTIFIER ::= { id-kp 2 }
   -- TLS WWW client authentication
   -- Key usage bits that may be consistent: digitalSignature
   -- and/or keyAgreement

   id-kp-codeSigning             OBJECT IDENTIFIER ::= { id-kp 3 }
   -- Signing of downloadable executable code
   -- Key usage bits that may be consistent: digitalSignature

   id-kp-emailProtection         OBJECT IDENTIFIER ::= { id-kp 4 }
   -- Email protection
   -- Key usage bits that may be consistent: digitalSignature,
   -- nonRepudiation, and/or (keyEncipherment or keyAgreement)

   id-kp-timeStamping            OBJECT IDENTIFIER ::= { id-kp 8 }
   -- Binding the hash of an object to a time
   -- Key usage bits that may be consistent: digitalSignature
   -- and/or nonRepudiation

   id-kp-OCSPSigning            OBJECT IDENTIFIER ::= { id-kp 9 }
   -- Signing OCSP responses
   -- Key usage bits that may be consistent: digitalSignature
   -- and/or nonRepudiation

