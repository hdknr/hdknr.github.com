<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head profile="http://dublincore.org/documents/2008/08/04/dc-html/">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="robots" content="index,follow" />
    <meta name="creator" content="rfcmarkup version 1.101" />
    <link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />
<meta name="DC.Identifier" content="urn:ietf:id:jones-json-web-encryption-json-serialization" />
<meta name="DC.Description.Abstract" content="The JSON Web Encryption JSON Serialization (JWE-JS) is a means of" />
<meta name="DC.Creator" content="Michael Jones &lt;mbj@microsoft.com&gt;" />
<meta name="DC.Date.Issued" content="2012-07-06" />
<meta name="DC.Title" content="JSON Web Encryption JSON Serialization (JWE-JS)" />

    <link rel="icon" href="/images/id.png" type="image/png" />
    <link rel="shortcut icon" href="/images/id.png" type="image/png" />
    <title>draft-jones-json-web-encryption-json-serialization-02 - JSON Web Encryption JSON Serialization (JWE-JS)</title>
    
    
    <style type="text/css">
	body {
	    margin: 0px 8px;
            font-size: 1em;
	}
        h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
	    font-weight: bold;
            line-height: 0pt;
            display: inline;
            white-space: pre;
            font-family: monospace;
            font-size: 1em;
	    font-weight: bold;
        }
        pre {
            font-size: 1em;
            margin-top: 0px;
            margin-bottom: 0px;
        }
	.pre {
	    white-space: pre;
	    font-family: monospace;
	}
	.header{
	    font-weight: bold;
	}
        .newpage {
            page-break-before: always;
        }
        .invisible {
            text-decoration: none;
            color: white;
        }
        a.selflink {
          color: black;
          text-decoration: none;
        }
        @media print {
            body {
                font-family: monospace;
                font-size: 10.5pt;
            }
            h1, h2, h3, h4, h5, h6 {
                font-size: 1em;
            }
        
            a:link, a:visited {
                color: inherit;
                text-decoration: none;
            }
            .noprint {
                display: none;
            }
        }
	@media screen {
	    .grey, .grey a:link, .grey a:visited {
		color: #777;
	    }
            .docinfo {
                background-color: #EEE;
            }
            .top {
                border-top: 7px solid #EEE;
            }
            .bgwhite  { background-color: white; }
            .bgred    { background-color: #F44; }
            .bggrey   { background-color: #666; }
            .bgbrown  { background-color: #840; }            
            .bgorange { background-color: #FA0; }
            .bgyellow { background-color: #EE0; }
            .bgmagenta{ background-color: #F4F; }
            .bgblue   { background-color: #66F; }
            .bgcyan   { background-color: #4DD; }
            .bggreen  { background-color: #4F4; }

            .legend   { font-size: 90%; }
            .cplate   { font-size: 70%; border: solid grey 1px; }
	}
    </style>
    <!--[if IE]>
    <style>
    body {
       font-size: 13px;
       margin: 10px 10px;
    }
    </style>
    <![endif]-->

    <script type="text/javascript"><!--
    function addHeaderTags() {
	var spans = document.getElementsByTagName("span");
	for (var i=0; i < spans.length; i++) {
	    var elem = spans[i];
	    if (elem) {
		var level = elem.getAttribute("class");
                if (level == "h1" || level == "h2" || level == "h3" || level == "h4" || level == "h5" || level == "h6") {
                    elem.innerHTML = "<"+level+">"+elem.innerHTML+"</"+level+">";		
                }
	    }
	}
    }
    var legend_html = "Colour legend:<br />      <table>         <tr><td>Unknown:</td>          <td><span class='cplate bgwhite'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Draft:</td>            <td><span class='cplate bgred'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Informational:</td>    <td><span class='cplate bgorange'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Experimental:</td>     <td><span class='cplate bgyellow'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Best Common Practice:</td><td><span class='cplate bgmagenta'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Proposed Standard:</td><td><span class='cplate bgblue'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Draft Standard:</td>   <td><span class='cplate bgcyan'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Standard:</td>         <td><span class='cplate bggreen'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Historic:</td>         <td><span class='cplate bggrey'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Obsolete:</td>         <td><span class='cplate bgbrown'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>     </table>";
    function showElem(id) {
        var elem = document.getElementById(id);
        elem.innerHTML = eval(id+"_html");
        elem.style.visibility='visible';
    }
    function hideElem(id) {
        var elem = document.getElementById(id);
        elem.style.visibility='hidden';        
        elem.innerHTML = "";
    }
    // -->
    </script>
</head>
<body onload="addHeaderTags()">
   <div style="height: 13px;">
      <div onmouseover="this.style.cursor='pointer';"
         onclick="showElem('legend');"
         onmouseout="hideElem('legend')"
	 style="height: 6px; position: absolute;"
         class="pre noprint docinfo bgred"
         title="Click for colour legend." >                                                                        </div>
      <div id="legend"
           class="docinfo noprint pre legend"
           style="position:absolute; top: 4px; left: 4ex; visibility:hidden; background-color: white; padding: 4px 9px 5px 7px; border: solid #345 1px; "
           onmouseover="showElem('legend');"
           onmouseout="hideElem('legend');">
      </div>
   </div>
<span class="pre noprint docinfo top">[<a href="../html/" title="Document search and retrieval page">Docs</a>] [<a href="http://tools.ietf.org/id/draft-jones-json-web-encryption-json-serialization-02.txt" title="Plaintext version of this document">txt</a>|<a href="/pdf/draft-jones-json-web-encryption-json-serialization-02.txt" title="PDF version of this document">pdf</a>|<a href="/id/draft-jones-json-web-encryption-json-serialization-02.xml" title="XML source for this document">xml</a>|<a href="/id/draft-jones-json-web-encryption-json-serialization-02.html" title="HTML version of this document, from XML2RFC">html</a>] [<a href='https://datatracker.ietf.org/doc/draft-jones-json-web-encryption-json-serialization' title='IESG Datatracker information for this document'>Tracker</a>] [<a href="mailto:draft-jones-json-web-encryption-json-serialization@tools.ietf.org?subject=draft-jones-json-web-encryption-json-serialization%20" title="Send email to the document authors">Email</a>] [<a href="/rfcdiff?difftype=--hwdiff&amp;url2=draft-jones-json-web-encryption-json-serialization-02.txt" title="Inline diff (wdiff)">Diff1</a>] [<a href="/rfcdiff?url2=draft-jones-json-web-encryption-json-serialization-02.txt" title="Side-by-side diff">Diff2</a>] [<a href="/idnits?url=http://tools.ietf.org/id/draft-jones-json-web-encryption-json-serialization-02.txt" title="Run an idnits check of this document">Nits</a>]      </span><br />
<span class="pre noprint docinfo">                                                                        </span><br />
<span class="pre noprint docinfo">Versions: <a href="./draft-jones-json-web-encryption-json-serialization-00">00</a> <a href="./draft-jones-json-web-encryption-json-serialization-01">01</a> <a href="./draft-jones-json-web-encryption-json-serialization-02">02</a>                                                      </span><br />
<span class="pre noprint docinfo">                                                                        </span><br />
<pre>
JOSE Working Group                                              M. Jones
Internet-Draft                                                 Microsoft
Intended status: Standards Track                            July 6, 2012
Expires: January 7, 2013


            <span class="h1">JSON Web Encryption JSON Serialization (JWE-JS)</span>
         <span class="h1">draft-jones-json-web-encryption-json-serialization-02</span>

Abstract

   The JSON Web Encryption JSON Serialization (JWE-JS) is a means of
   representing encrypted content using JavaScript Object Notation
   (JSON) data structures.  This specification describes a means of
   representing secured content as a JSON data object (as opposed to the
   JWE specification, which uses a compact serialization with a URL-safe
   representation).  It enables the same content to be encrypted to
   multiple parties (unlike JWE).  Cryptographic algorithms and
   identifiers used with this specification are described in the
   separate JSON Web Algorithms (JWA) specification.  The JSON
   Serialization for related digital signature and HMAC functionality is
   described in the separate JSON Web Signature JSON Serialization
   (JWS-JS) specification.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of <a href="./bcp78">BCP 78</a> and <a href="./bcp79">BCP 79</a>.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at <a href="http://datatracker.ietf.org/drafts/current/">http://datatracker.ietf.org/drafts/current/</a>.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on January 7, 2013.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to <a href="./bcp78">BCP 78</a> and the IETF Trust's Legal
   Provisions Relating to IETF Documents



<span class="grey">Jones                    Expires January 7, 2013                [Page 1]</span>
</pre><!--NewPage--><pre class='newpage'><a name="page-2" id="page-2" href="#page-2" class="invisible"> </a>
<span class="grey">Internet-Draft       JWE JSON Serialization (JWE-JS)           July 2012</span>


   (<a href="http://trustee.ietf.org/license-info">http://trustee.ietf.org/license-info</a>) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in <a href="#section-4">Section 4</a>.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   <a href="#section-1">1</a>.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . <a href="#page-3">3</a>
     <a href="#section-1.1">1.1</a>.  Notational Conventions  . . . . . . . . . . . . . . . . . . <a href="#page-3">3</a>
   <a href="#section-2">2</a>.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . . . <a href="#page-3">3</a>
   <a href="#section-3">3</a>.  JSON Serialization  . . . . . . . . . . . . . . . . . . . . . . <a href="#page-3">3</a>
   <a href="#section-4">4</a>.  Example JWE-JS  . . . . . . . . . . . . . . . . . . . . . . . . <a href="#page-4">4</a>
   <a href="#section-5">5</a>.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . <a href="#page-5">5</a>
   <a href="#section-6">6</a>.  Security Considerations . . . . . . . . . . . . . . . . . . . . <a href="#page-6">6</a>
   <a href="#section-7">7</a>.  Open Issues . . . . . . . . . . . . . . . . . . . . . . . . . . <a href="#page-6">6</a>
   <a href="#section-8">8</a>.  References  . . . . . . . . . . . . . . . . . . . . . . . . . . <a href="#page-6">6</a>
     <a href="#section-8.1">8.1</a>.  Normative References  . . . . . . . . . . . . . . . . . . . <a href="#page-6">6</a>
     <a href="#section-8.2">8.2</a>.  Informative References  . . . . . . . . . . . . . . . . . . <a href="#page-6">6</a>
   <a href="#appendix-A">Appendix A</a>.  Acknowledgements . . . . . . . . . . . . . . . . . . . <a href="#page-7">7</a>
   <a href="#appendix-B">Appendix B</a>.  Document History . . . . . . . . . . . . . . . . . . . <a href="#page-7">7</a>
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . . . <a href="#page-7">7</a>


























<span class="grey">Jones                    Expires January 7, 2013                [Page 2]</span>
</pre><!--NewPage--><pre class='newpage'><a name="page-3" id="page-3" href="#page-3" class="invisible"> </a>
<span class="grey">Internet-Draft       JWE JSON Serialization (JWE-JS)           July 2012</span>


<span class="h2"><a class="selflink" name="section-1" href="#section-1">1</a>.  Introduction</span>

   The JSON Web Encryption JSON Serialization (JWE-JS) is a format for
   representing encrypted content as a JavaScript Object Notation (JSON)
   [<a href="./rfc4627" title="&quot;The application/json Media Type for JavaScript Object Notation (JSON)&quot;">RFC4627</a>] object.  It enables the same content to be encrypted to
   multiple parties (unlike JWE [<a href="#ref-JWE" title="&quot;JSON Web Encryption (JWE)&quot;">JWE</a>].)  The encryption mechanisms are
   independent of the type of content being encrypted.  Cryptographic
   algorithms and identifiers used with this specification are described
   in the separate JSON Web Algorithms (JWA) [<a href="#ref-JWA" title="&quot;JSON Web Algorithms (JWA)&quot;">JWA</a>] specification.  The
   JSON Serialization for related digital signature and HMAC
   functionality is described in the separate JSON Web Signature JSON
   Serialization (JWS-JS) [<a href="#ref-JWS-JS" title="&quot;JSON Web Signature JSON Serialization (JWS-JS)&quot;">JWS-JS</a>] specification.

<span class="h3"><a class="selflink" name="section-1.1" href="#section-1.1">1.1</a>.  Notational Conventions</span>

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in Key words for use in
   RFCs to Indicate Requirement Levels [<a href="./rfc2119" title="&quot;Key words for use in RFCs to Indicate Requirement Levels&quot;">RFC2119</a>].


<span class="h2"><a class="selflink" name="section-2" href="#section-2">2</a>.  Terminology</span>

   This specification uses the same terminology as the JSON Web
   Encryption (JWE) [<a href="#ref-JWE" title="&quot;JSON Web Encryption (JWE)&quot;">JWE</a>] specification.


<span class="h2"><a class="selflink" name="section-3" href="#section-3">3</a>.  JSON Serialization</span>

   The JSON Serialization represents encrypted content as a JSON object
   with members for each of four constituent parts: a "headers" member
   whose value is a non-empty array of Encoded JWE Header values, an
   "encrypted_keys" member whose value is a non-empty array of Encoded
   JWE Encrypted Key values, a "ciphertext" member whose value is an
   Encoded JWE Ciphertext value, and an "integrity_values" member whose
   value is a non-empty array of Encoded JWE Integrity Value values.
   The number of elements in each of the arrays MUST be the same.

   Unlike the compact serialization used by JWEs, content using the JSON
   Serialization MAY be encrypted to more than one recipient.  Each
   recipient requires:

   o  a JWE Header value specifying the cryptographic parameters used to
      encrypt the JWE Encrypted Key to that recipient and the parameters
      used to encrypt the plaintext to produce the JWE Ciphertext; these
      values are represented as Encoded JWE Header values that are
      elements of the non-empty array contained in the "headers" member.




<span class="grey">Jones                    Expires January 7, 2013                [Page 3]</span>
</pre><!--NewPage--><pre class='newpage'><a name="page-4" id="page-4" href="#page-4" class="invisible"> </a>
<span class="grey">Internet-Draft       JWE JSON Serialization (JWE-JS)           July 2012</span>


   o  a JWE Encrypted Key value; these values are represented as Encoded
      JWE Encrypted Key values that are corresponding elements of the
      non-empty array contained in the "encrypted_keys" member.

   o  a JWE Integrity Value that ensures the integrity of the Ciphertext
      and the parameters used to create it; these values are represented
      as Encoded JWE Integrity Value values that are corresponding
      elements of the non-empty array contained in the
      "integrity_values" member.

   Therefore, the syntax is:
   {"headers":["&lt;header 1 contents&gt;",...,"&lt;header N contents&gt;"],
    "encrypted_keys":["&lt;key 1 contents&gt;",...,"&lt;key N contents&gt;"],
    "ciphertext":"&lt;ciphertext contents&gt;",
    "integrity_values":["&lt;value 1 contents&gt;",...,"&lt;value N contents&gt;"]
   }

   The contents of the Encoded JWE Header, Encoded JWE Encrypted Key,
   Encoded JWE Ciphertext, and Encoded JWE Integrity Value values are
   exactly as specified in JSON Web Encryption (JWE) [<a href="#ref-JWE" title="&quot;JSON Web Encryption (JWE)&quot;">JWE</a>].  They are
   interpreted and validated in the same manner, with each corresponding
   "headers", "encrypted_keys", and "integrity_values" value being
   created or validated together.  The arrays MUST have the same number
   of elements.

   The i'th JWE Encrypted Key value and the i'th JWE Integrity Value are
   computed using the parameters of i'th JWE Header value in the same
   manner described in the JWE specification.  This has the desirable
   result that each Encoded JWE Encrypted Key value in the
   "encrypted_keys" array and each Encoded JWE Integrity Value in the
   "integrity_values" array are identical to the values that would have
   been computed for the same header and payload in a JWE, as is the JWE
   Ciphertext value.

   All recipients use the same JWE Ciphertext value, resulting in
   potentially significant space savings if the message is large.
   Therefore, all header parameters that specify the treatment of the
   JWE Ciphertext value MUST be the same for all recipients.  In
   particular, this means that the "enc" (encryption method) header
   parameter value in the JWE Header for each recipient MUST be the
   same, as MUST be the "iv" (initialization vector) value (when
   required for the algorithm).


<span class="h2"><a class="selflink" name="section-4" href="#section-4">4</a>.  Example JWE-JS</span>

   This section contains an example using the JWE JSON Serialization.
   This example demonstrates the capability for encrypting the same



<span class="grey">Jones                    Expires January 7, 2013                [Page 4]</span>
</pre><!--NewPage--><pre class='newpage'><a name="page-5" id="page-5" href="#page-5" class="invisible"> </a>
<span class="grey">Internet-Draft       JWE JSON Serialization (JWE-JS)           July 2012</span>


   plaintext to multiple recipients.

   Two recipients are present in this example: the first using the
   RSAES-PKCS1-V1_5 algorithm to encrypt the Content Master Key (CMK)
   and the second using the AES Key Wrap algorithm to encrypt the CMK.
   The Plaintext is encrypted using the AES CBC algorithm to produce the
   JWE Ciphertext.  The two Decoded JWE Header Segments used are:
   {"alg":"RSA1_5",
    "x5t":"7noOPq-hJ1_hCnvWh6IeYI2w9Q0",
    "enc":"A128CBC",
    "iv":"__79_Pv6-fj39vX08_Lx8A",
    "int":"HS256"}

   and:
   {"alg":"A128KW",
    "enc":"A128CBC",
    "iv":"__79_Pv6-fj39vX08_Lx8A",
    "int":"HS256"}

   The complete JSON Web Encryption JSON Serialization (JWE-JS) for
   these values is as follows (with line breaks for display purposes
   only):
   {"headers":[
     "eyJhbGciOiJSU0ExXzUiLA0KICJlbmMiOiJBMjU2Q0JDIiwNCiAiaW50IjoiS
   FMyNTYiLA0KICJpdiI6Ik16LW1XXzRKSGZnIiwNCiAieDV0IjoiN25vT1BxLWhKM
   V9oQ252V2g2SWVZSTJ3OVEwIn0",
     "eyJhbGciOiJFQ0RILUVTIiwNCiAiZW5jIjoiQTI1NkNCQyIsDQogImVwayI6e
   w0KICAiYWxnIjoiRUMiLA0KICAiY3J2IjoiUC0yNTYiLA0KICAieCI6IjIzNVJUN
   2lLVEkzS1d2UzRfbUl3VWhYNk9DX1gySS1ic09wUzV3N01HQTQiLA0KICAieSI6I
   lpTdjBkdHZYczRvMlhzSVZoRnpnaU1UU2c5dVNzeXRhT3ZDLVhSdGZvSU0ifSwNC
   iAiamt1IjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9wdWJsaWNfa2V5Lmp3ayJ9"],
    "encrypted_keys":[
     "TBD_encrypted_key_1_value_TBD",
     "TBD_encrypted_key_2_value_TBD"],
    "ciphertext":"TBD_ciphertext_value_TBD",
    "integrity_values":[
     "TBD_integrity_1_value_TBD",
     "TBD_integrity_2_value_TBD"]
   }

   TBD: Finish this example.


<span class="h2"><a class="selflink" name="section-5" href="#section-5">5</a>.  IANA Considerations</span>

   This specification makes no requests of IANA.





<span class="grey">Jones                    Expires January 7, 2013                [Page 5]</span>
</pre><!--NewPage--><pre class='newpage'><a name="page-6" id="page-6" href="#page-6" class="invisible"> </a>
<span class="grey">Internet-Draft       JWE JSON Serialization (JWE-JS)           July 2012</span>


<span class="h2"><a class="selflink" name="section-6" href="#section-6">6</a>.  Security Considerations</span>

   The security considerations for this specification are the same as
   those for the JSON Web Encryption (JWE) [<a href="#ref-JWE" title="&quot;JSON Web Encryption (JWE)&quot;">JWE</a>] specification.


<span class="h2"><a class="selflink" name="section-7" href="#section-7">7</a>.  Open Issues</span>

   [[ to be removed by the RFC editor before publication as an RFC ]]

   The following items remain to be considered or done in this draft:

   o  Complete the example.

   o  Track changes that occur in the JWE spec.


<span class="h2"><a class="selflink" name="section-8" href="#section-8">8</a>.  References</span>

<span class="h3"><a class="selflink" name="section-8.1" href="#section-8.1">8.1</a>.  Normative References</span>

   [<a name="ref-JWA" id="ref-JWA">JWA</a>]      Jones, M., "JSON Web Algorithms (JWA)", July 2012.

   [<a name="ref-JWE" id="ref-JWE">JWE</a>]      Jones, M., Rescorla, E., and J. Hildebrand, "JSON Web
              Encryption (JWE)", July 2012.

   [<a name="ref-RFC2119" id="ref-RFC2119">RFC2119</a>]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", <a href="./bcp14">BCP 14</a>, <a href="./rfc2119">RFC 2119</a>, March 1997.

   [<a name="ref-RFC4627" id="ref-RFC4627">RFC4627</a>]  Crockford, D., "The application/json Media Type for
              JavaScript Object Notation (JSON)", <a href="./rfc4627">RFC 4627</a>, July 2006.

<span class="h3"><a class="selflink" name="section-8.2" href="#section-8.2">8.2</a>.  Informative References</span>

   [<a name="ref-I-D.rescorla-jsms" id="ref-I-D.rescorla-jsms">I-D.rescorla-jsms</a>]
              Rescorla, E. and J. Hildebrand, "JavaScript Message
              Security Format", <a href="./draft-rescorla-jsms-00">draft-rescorla-jsms-00</a> (work in
              progress), March 2011.

   [<a name="ref-JSE" id="ref-JSE">JSE</a>]      Bradley, J. and N. Sakimura (editor), "JSON Simple
              Encryption", September 2010.

   [<a name="ref-JWS-JS" id="ref-JWS-JS">JWS-JS</a>]   Jones, M., Bradley, J., and N. Sakimura, "JSON Web
              Signature JSON Serialization (JWS-JS)", July 2012.







<span class="grey">Jones                    Expires January 7, 2013                [Page 6]</span>
</pre><!--NewPage--><pre class='newpage'><a name="page-7" id="page-7" href="#page-7" class="invisible"> </a>
<span class="grey">Internet-Draft       JWE JSON Serialization (JWE-JS)           July 2012</span>


<span class="h2"><a class="selflink" name="appendix-A" href="#appendix-A">Appendix A</a>.  Acknowledgements</span>

   JSON serializations for encrypted content were previously explored by
   JSON Simple Encryption [<a href="#ref-JSE" title="&quot;JSON Simple Encryption&quot;">JSE</a>] and JavaScript Message Security Format
   [<a href="#ref-I-D.rescorla-jsms">I-D.rescorla-jsms</a>].


<span class="h2"><a class="selflink" name="appendix-B" href="#appendix-B">Appendix B</a>.  Document History</span>

   [[ to be removed by the RFC editor before publication as an RFC ]]

   -02

   o  Updated examples to track updated algorithm properties in the JWA
      spec.

   o  Tracked editorial changes made to the JWE spec.

   -01

   o  Tracked changes between JOSE JWE draft -00 and -01, which added an
      integrity check for non-AEAD algorithms.

   -00

   o  Created the initial version incorporating JOSE working group input
      and drawing from the JSON Serialization previously proposed in
      <a href="./draft-jones-json-web-token-01">draft-jones-json-web-token-01</a>.


Author's Address

   Michael B. Jones
   Microsoft

   Email: mbj@microsoft.com
   URI:   <a href="http://self-issued.info/">http://self-issued.info/</a>














Jones                    Expires January 7, 2013                [Page 7]

</pre><br />
<span class="noprint"><small><small>Html markup produced by rfcmarkup 1.101, available from
<a href="http://tools.ietf.org/tools/rfcmarkup/">http://tools.ietf.org/tools/rfcmarkup/</a>
</small></small></span>
</body></html>
