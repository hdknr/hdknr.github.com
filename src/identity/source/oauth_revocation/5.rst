5.  Security Considerations
==========================================

If the authorization server does not support access token revocation,
access tokens will not be immediately invalidated when the
corresponding refresh token is revoked.  Deployments must take this
into account when conducting their security risk analysis.

Cleaning up tokens using revocation contributes to overall security
and privacy since it reduces the likelihood for abuse of abandoned
tokens.  This specification in general does not intend to provide
countermeasures against token theft and abuse.  For a discussion of
respective threats and countermeasures, consult the security
considerations given in Section 10 of the OAuth core specification
[RFC6749] and the OAuth threat model document [RFC6819].

Malicious clients could attempt to use the new endpoint to launch
denial-of-service attacks on the authorization server.  Appropriate
countermeasures, which should be in place for the token endpoint as
well, MUST be applied to the revocation endpoint (see [RFC6819],
Section 4.4.1.11).  Specifically, invalid token type hints may
misguide the authorization server and cause additional database
lookups.  Care MUST be taken to prevent malicious clients from
exploiting this feature to launch denial-of-service attacks.

A malicious client may attempt to guess valid tokens on this endpoint
by making revocation requests against potential token strings.
According to this specification, a client's request must contain a
valid client_id, in the case of a public client, or valid client
credentials, in the case of a confidential client.  The token being
revoked must also belong to the requesting client.  If an attacker is
able to successfully guess a public client's client_id and one of
their tokens, or a private client's credentials and one of their
tokens, they could do much worse damage by using the token elsewhere
than by revoking it.  If they chose to revoke the token, the
legitimate client will lose its authorization grant and will need to
prompt the user again.  No further damage is done and the guessed
token is now worthless.

Since the revocation endpoint is handling security credentials,
clients need to obtain its location from a trustworthy source only.
Otherwise, an attacker could capture valid security tokens by
utilizing a counterfeit revocation endpoint.  Moreover, in order to
detect counterfeit revocation endpoints, clients MUST authenticate
the revocation endpoint (certificate validation, etc.).
