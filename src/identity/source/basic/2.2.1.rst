.. _connect.basic.authreq:

2.2.1.  Client Prepares an Authorization Request
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

When the Client wishes to access a Protected Resource, 
and the End-User Authorization has not yet been obtained, 
the Client prepares an Authorization Request to the Authorization Endpoint.

The scheme used in the Authorization Endpoint URL MUST be HTTPS.

Clients MAY construct the request using the HTTP GET 
or the HTTP POST method as defined in RFC 2616 :term:`[RFC2616]`.

If using the HTTP GET method, 
the parameters are serialized using :term:`Query String Serialization`. 
If using the HTTP POST method, 
the request parameters are added to the HTTP request entity-body 
using the **application/x-www-form-urlencoded** format 
as defined by :term:`[W3C.REC‑html401‑19991224]`.

This profile further constrains the following request parameters:

.. glossary::

    response_type
        It MUST be **code**. 

        This requests that both an :term:`Access Token` 
        and an :term:`ID Token` be returned 
        from the :term:`Token Endpoint` in exchange to :term:`code`. 

Other REQUIRED parameters in the request include the following:

.. glossary::

    client_id
        The OAuth 2.0 Client Identifier. 

    scope
        It MUST include :term:`openid` as one of the space delimited ASCII strings. 
        OPTIONAL :term:`scope` strings of :term:`profile`, :term:`email`, :term:`address`, 
        and :term:`phone` are also supported. 

    redirect_uri
        A redirection URI where the response will be sent. 
        This MUST be pre-registered with the provider. 

The request MAY contain the following OPTIONAL parameters:

.. glossary::

    state
        RECOMMENDED. 

        An opaque value used to maintain state 
        between the request and the callback; serves as a protection against :term:`XSRF` attacks. 

    display
        An ASCII string value that specifies 
        how the Authorization Server displays the authentication 
        and consent user interface pages to the End-User. 

        The following values are supported:

        .. glossary::

            page
                The Authorization Server SHOULD display authentication and consent UI consistent 
                with a full user-agent page view. 
                If the display parameter is not specified this is the **default display mode**. 

            popup
                The Authorization Server SHOULD display authentication and consent UI consistent 
                with a popup user-agent window. 
                The popup user-agent window SHOULD be 450 pixels wide and 500 pixels tall. 

            touch
                The Authorization Server SHOULD display authentication and consent UI consistent 
                with a device that leverages a touch interface. 

                The Authorization Server MAY attempt to detect the touch device and 
                further customize the interface. 

            wap
                The Authorization Server SHOULD display authentication and consent UI consistent 
                with a "feature phone" type display. 

    prompt
        A space delimited, 
        case sensitive list of ASCII string values that specifies 
        whether the Authorization Server prompts the End-User 
        for reauthentication and consent. 


        The possible values are:

        .. glossary::

            none
                This value informs the Authorization Server that 
                it **MUST NOT** display any authentication or consent user interface pages. 

                An error is returned if the End-User is not already authenticated 
                or the Client does not have pre-configured consent for the requested scopes. 

                This can be used as a method to check for existing authentication and/or consent. 

            login
                The Authorization Server MUST prompt the End-User for reauthentication. 

            consent
                The Authorization Server MUST prompt the End-User for consent 
                before returning information to the Client. 

            select_account
                The Authorization Server MUST prompt the End-User to select a user account. 
                This allows a user who has multiple accounts at the Authorization Server 
                to select amongst the multiple accounts that they may have current sessions for. 

        The prompt parameter can be used by the Client 
        to make sure that the End-User is still present 
        for the current session or 
        to bring attention to the request. 

        If this parameter contains :term:`none` with any other value, 
        an error is returned. 

    nonce
        A string value used to associate a Client session with an ID Token, 
        and to mitigate replay attacks. 

        The value is passed through unmodified from the Authorization Request 
        to the ID Token. 

        Use of the :term:`nonce` is OPTIONAL when using the code flow. 


        .. note::
            Basic is code flow, so "nonce is OPTIONAL for this profile".

The following is a non-normative example of an Authorization Request URL (with line wraps for display purposes only):

::

    https://server.example.com/authorize?
    response_type=code
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid%20profile
    &state=af0ifjsldkj

(draft 20)
