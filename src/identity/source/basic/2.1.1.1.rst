.. _basic.authreq:

2.1.1.1.  Request Parameters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. note::
    - :ref:`OAuth Auth <oauth_auth.authreq>`

This profile of OpenID Connect uses the following OAuth 2.0 request parameters:

.. glossary::

    response_type
        REQUIRED. 
        This value MUST be **code**. 
        This requests that both an Access Token and an ID Token be returned from the Token Endpoint in exchange to code.

    client_id
        REQUIRED. 
        OAuth 2.0 Client Identifier.

    scope
        REQUIRED. 

        Space delimited, case sensitive list of ASCII OAuth 2.0 scope values. 
        OpenID Connect requests MUST contain the **openid** scope value. 

        OPTIONAL scope values of **profile**, **email**, **address**, **phone**, and **offline_access** are also defined. 

        See :ref:`Section 2.4 <basic.2.4>` for more about the scope values defined by this specification.

    redirect_uri
        REQUIRED. 

        Redirection URI to which the response will be sent. 
        This MUST be **pre-registered** with the OpenID Provider. 

        This URI MUST exactly match one of the :term:`redirect_uris` registered for the Client, 
        with the matching performed as described in Section 6.2.1 of [RFC3986] (Simple String Comparison). 

        If the Client only uses the OAuth :term:`authorization_code` grant type, 
        the redirection URI MAY use the http scheme, provided that the Client Type is :term:`confidential`, as defined in :ref:`Section 2.1 of OAuth 2.0 <oauth.2.1>`.

    state
        RECOMMENDED. 

        Opaque value used to maintain state between the request and the callback. 
        Typically, Cross-Site Request Forgery (CSRF, XSRF) mitigation is done 
        by cryptographically binding the value of this parameter with the browser cookie.

.. note::
    - code フローの場合も :term:`redirect_uri` はチェックすべき、ということ
    - CSRFは :term:`state` で対策

This specification also defines the following request parameters:
    
.. glossary::

    nonce
        OPTIONAL. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authorization Request to the ID Token. Sufficient entropy MUST be present in the nonce values used to prevent attackers from guessing values. Use of the nonce is OPTIONAL when using the code flow.

    display
        OPTIONAL. ASCII string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User. The defined values are:

        page
            The Authorization Server SHOULD display authentication and consent UI consistent with a full User-Agent page view. If the display parameter is not specified this is the default display mode.

        popup
            The Authorization Server SHOULD display authentication and consent UI consistent with a popup User-Agent window. The popup User-Agent window SHOULD be 450 pixels wide and 500 pixels tall.

        touch
            The Authorization Server SHOULD display authentication and consent UI consistent with a device that leverages a touch interface. The Authorization Server MAY attempt to detect the touch device and further customize the interface.

        wap
            The Authorization Server SHOULD display authentication and consent UI consistent with a "feature phone" type display.

    prompt
        OPTIONAL. Space delimited, case sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for reauthentication and consent. The defined values are:

        none
            The Authorization Server MUST NOT display any authentication or consent user interface pages. An error is returned if the End-User is not already authenticated or the Client does not have pre-configured consent for the requested Claims or does not fulfill other conditions for processing. This can be used as a method to check for existing authentication and/or consent.

        login
            The Authorization Server SHOULD prompt the End-User for reauthentication. If it cannot prompt the End-User, it MUST return an error.

        consent
            The Authorization Server SHOULD prompt the End-User for consent before returning information to the Client.

        select_account
            The Authorization Server SHOULD prompt the End-User to select a user account. This allows an End-User who has multiple accounts at the Authorization Server to select amongst the multiple accounts that they might have current sessions for. If it cannot prompt the End-User, it MUST return an error.

        The prompt parameter can be used by the Client to make sure that the End-User is still present for the current session or to bring attention to the request. If this parameter contains none with any other value, an error is returned.
    
    max_age
        OPTIONAL. Maximum Authentication Age. Specifies the allowable elapsed time in seconds since the last time the End-User was actively authenticated. If the elapsed time is greater than this value, the OP MUST attempt to actively re-authenticate the End-User. When max_age is used, the ID Token returned MUST include an auth_time Claim Value.

    ui_locales
        OPTIONAL. End-User's preferred languages and scripts for the user interface, represented as a space-separated list of BCP47 [RFC5646] language tag values, ordered by preference. For instance, the value "fr-CA fr en" represents a preference for French as spoken in Canada, then French (without a region designation), followed by English (without a region designation). An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.
    claims_locales
        OPTIONAL. End-User's preferred languages and scripts for Claims being returned, represented as a space-separated list of BCP47 [RFC5646] language tag values, ordered by preference. An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.

    id_token_hint
        OPTIONAL. Previously issued ID Token passed to the Authorization Server as a hint about the End-User's current or past authenticated session with the Client. This SHOULD be present when prompt=none is used. If the End-User identified by the ID Token is logged in or is logged in by the request, then the Authorization Server returns a positive response; otherwise, it SHOULD return a negative response. The Authorization Server need not be listed as an audience of the ID Token when it is used as an id_token_hint value.

    login_hint
        OPTIONAL. Hint to the Authorization Server about the login identifier the End-User might use to log in (if necessary). This hint can be used by an RP if it first asks the End-User for their e-mail address (or other identifier) and then wants to pass that value as a hint to the discovered authorization service. It is RECOMMENDED that the hint value match the value used for discovery. This value MAY also be a phone number in the format specified for the phone_number Claim. The use of this parameter is left to the OP's discretion.

    acr_values
        OPTIONAL. Requested Authentication Context Class Reference values. Space-separated string that specifies the acr values that the Authorization Server is being requested to use for processing this authentication request, with the values appearing in order of preference. The Authentication Context Class satisfied by the authentication performed is returned as the acr Claim Value, as specified in Section 2.2. The acr Claim is requested as a Voluntary Claim by this parameter.
    
( draft 28 )  
