3.2.1.  Client Prepares an Authorization Request
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

When the End-User wishes to access a Protected Resource, 
and the End-User Authorization has not yet been obtained, 
the Client prepares an :term:`Authorization Request` to the :term:`Authorization Endpoint`. 

The scheme used in the Authorization Endpoint URL MUST be **HTTPS**.

Clients MAY construct the request using the HTTP GET 
or the HTTP POST method as defined in RFC 2616 [:rfc:`2616`].

If using the HTTP GET method, the parameters are serialized using :term:`Query String Serialization`. 
If using the HTTP POST method, the request parameters are added to the HTTP request entity-body 
using the application/x-www-form-urlencoded format as defined by [W3C.REC‑html401‑19991224]. 

This profile further constrains the following request parameters:

.. glossary::

    response_type
        It MUST include **token** and **id_token**, as a space separated list. 
        This requests both an :term:`access token` and :term:`id_token` to be returned in the URL fragment of the response. 

.. note::
    - "token id_token" is MUST for Basic.

Other REQUIRED parameters in the request include the following:

.. glossary::

    client_id
        The OAuth client identifier. 

    scope
        It MUST include **openid** as one of the space separated strings. 
        Optional scope strings of **profile**, **email**, and **address** are also :ref:`supported <basic_3_1>`. 

    redirect_uri
        A redirection URI where the response will be sent. 
        This MUST be pre-registered with the provider. 

    nonce
        A random, unique string value used to mitigate the replay attack this value is returned from the Check ID Endpoint. 

.. note::

    nonce is REQUIRED from Draft 13.

The request MAY contain the following optional parameters:

.. glossary::

    state
        RECOMENDED. 
        An opaque value used to maintain state 
        between the request and the callback, used to protect against :term:`XSRF` attacks. 

    display
        A string value that specifies how the :term:`Authorization Server` displays the authentication page to the user. 
        The following values are supported:

        page
            The Authorization Server SHOULD display authentication and consent UI consistent 
            with a full browser page view. 
            If the display parameter is not specified this is the default display mode. 

        popup
            The Authorization Server SHOULD display authentication and consent UI consistent 
            with a popup browser window. 
            The popup browser window SHOULD be 450 pixels wide and 500 pixels tall. 

        touch
            The Authorization Server SHOULD display authentication and consent UI consistent 
            with a device that leverages a touch interface. 
            The Authorization Server MAY attempt to detect the touch device and further customize the interface. 

        wap
            The Authorization Server SHOULD display authentication and consent UI consistent 
            with a "feature phone" type display. 

        embedded
            The Authorization Server SHOULD display authentication and consent UI consistent 
            with the limitations of an embedded browser. 

    prompt
        A space delimited, 
        case sensitive list of string values that specifies 
        whether the Authorization Server prompts the End-User for reauthentication and reapproval. 
        The possible values are:

        none
            This value informs the Authorization Server that 
            it MUST NOT display any authentication or consent user interface pages. 
            An error is returned if either the End-User is not already authenticated or 
            the client does not have pre-configured approval for the requested scopes. 
            This can be used as a method to check for existing authentication and/or approval. 

        login
            The Authorization Server MUST prompt the End-User for reauthentication. 

        consent
            The Authorization Server MUST prompt the End-User for reapproval 
            before returning information to the client. 

        select_account
            The Authorization Server MUST prompt the End-User to select a user account 
            if the account has multiple accounts associated with it. 

        This can be used by the client to make sure that 
        the End-User is still present for the current session or to bring attention to the request. 
        If this parameter contains "none" with any other value, an error is returned.. 

The following is a non-normative example of an Authorization Request URL. 
Note that the line wraps within the values are for display purpose only::


    https://server.example.com/authorize?
    response_type=token%20id_token
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb
    &scope=openid%20profile
    &state=af0ifjsldkj

(Draft 15)
