4.1. Locating a User's Blog
------------------------------------------------

Assume you receive an email from Bob 
and he refers to something he posted on his blog, 
but you do not know where Bob's blog is located.

It would be simple to discover the address of Bob's blog 
if he makes that information available via WebFinger.

Let's assume your email client discovers that blog automatically for you.  
After receiving the message from Bob (bob@example.com), 
your email client performs the following steps behind the scenes.

.. note::
   1. Request the hostmeta or example.com and get XRD

First, 
it tries to get the :term:`host metadata` [10] information for the domain example.com.  
It does this by issuing the following HTTPS query to example.com:

::

     GET /.well-known/host-meta HTTP/1.1
     Host: example.com

The server replies with an XRD [9] document:

::

     HTTP/1.1 200 OK
     Access-Control-Allow-Origin: *
     Content-Type: application/xrd+xml; charset=UTF-8

     <?xml version="1.0" encoding="UTF-8"?>
     <XRD xmlns="http://docs.oasis-open.org/ns/xri/xrd-1.0">
       <Link rel="lrdd"
             type="application/xrd+xml"
             template="https://example.com/lrdd/?uri={uri}"/>
     </XRD>

.. note::
    2. Read the XRD
    3. Find LRDD Link.  
    4. Request the URI 

The client then processes the received XRD 
in accordance with the :term:`Web Host Metadata` [10] procedures.  
The client will see the :term:`LRDD` :term:`link relation` and 
issue a query with the user's :term:`account URI` [6] or 
other URI that serves as an alias for the account.  
(The account URI is discussed in :term:`Section 4.2. <webfinger.4.2>` )  

The query might look like this:

::

     GET /lrdd/?uri=acct%3Abob%40example.com HTTP/1.1
     Host: example.com

The server might then respond with a message like this:

::

     HTTP/1.1 200 OK
     Access-Control-Allow-Origin: *
     Content-Type: application/xrd+xml; charset=UTF-8

     <?xml version="1.0" encoding="UTF-8"?>
     <XRD xmlns="http://docs.oasis-open.org/ns/xri/xrd-1.0">
       <Expires>2012-03-13T20:56:11Z</Expires>
       <Subject>acct:bob@example.com</Subject>
       <Alias>http://www.example.com/~bob/</Alias>
       <Link rel="http://webfinger.net/rel/avatar"
             href="http://www.example.com/~bob/bob.jpg"/>
       <Link rel="http://webfinger.net/rel/profile-page"
             href="http://www.example.com/~bob/"/>
       <Link rel="http://packetizer.com/rel/blog"
             href="http://blogs.example.com/bob/"/>
     </XRD>

The email client might take note of the "blog" :term:`link relation` 
in the above XRD document that refers to Bob's blog.  
This URL would then be presented to you 
so that you could then visit his blog.

The email client might also note that 
Bob has published an avatar :term:`link relation` and 
use that picture to represent Bob inside the email client.

Note in the above example that 
an alias is provided that can also be used to return information 
about the user's account.  
Had the "http:" URI been used to query for information about Bob, 
the query would have appeared as:

::

     GET /lrdd/?uri= http%3A%2F%2Fwww.example.com%2F~bob%2F HTTP/1.1
     Host: example.com

The response would have been **substantially the same**, 
with the subject and alias information changed as necessary.  
Other information, 
such as the expiration time might also change, 
but the set of :term:`link relations` and properties would be the same with either response.

Let's assume, though, that for the above query 
the client requested a :term:`JRD` representation for the resource 
rather than an XRD representation.  
In that case, the response would have been:

::

     HTTP/1.1 200 OK
     Access-Control-Allow-Origin: *
     Content-Type: application/json; charset=UTF-8

     {
       "expires" : "2012-03-13T20:56:11Z",
       "subject" : "http://www.example.com/~bob/",
       "aliases" :
       [
         "acct:bob@example.com"
       ],
       "links" :
       [
         {
           "rel" : "http://webfinger.net/rel/avatar",
           "href" : "http://www.example.com/~bob/bob.jpg"
         },
         {
           "rel" : "http://webfinger.net/rel/profile-page",
           "href" : "http://www.example.com/~bob/"
         },
         {
           "rel" : "http://packetizer.com/rel/blog",
           "href" : "http://blogs.example.com/bob/"
         }
       ]
     }

(Internet Draft 06)

