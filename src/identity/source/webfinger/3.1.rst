3.1. Locating a User's Blog
------------------------------------

Assume you receive an email from Bob and 
he refers to something he posted on his blog, 
but you do not know where Bob's blog is located.

It would be simple to discover the address of Bob's blog 
if he made that information available via WebFinger.

Assume your email client can discover the blog for you.  
After receiving the message from Bob (bob@example.com), 
your email client performs a WebFinger query 
either automatically or at your command.  

It does so by issuing the following HTTPS :term:`[14]` query to example.com:

::
     GET /.well-known/webfinger?
                           resource=acct%3Abob%40example.com HTTP/1.1
     Host: example.com

The server might then respond with a message like this:

::

     HTTP/1.1 200 OK
     Access-Control-Allow-Origin: *
     Content-Type: application/jrd+json

     {
       "subject" : "acct:bob@example.com",
       "aliases" :
       [
         "http://www.example.com/~bob/"
       ],
       "properties" :
       {
           "http://example.com/ns/role/" : "employee"
       },
       "links" :
       [
         {
           "rel" : "http://webfinger.example/rel/avatar",
           "type" : "image/jpeg",
           "href" : "http://www.example.com/~bob/bob.jpg"
         },
         {
           "rel" : "http://webfinger.example/rel/profile-page",
           "href" : "http://www.example.com/~bob/"
         },
         {
           "rel" : "http://webfinger.example/rel/blog",
           "type" : "text/html",
           "href" : "http://blogs.example.com/bob/",
           "titles" :
           {
               "en-us" : "The Magical World of Bob",
               "fr" : "Le Monde Magique de Bob"
           }
         },
         {
           "rel" : "http://webfinger.example/rel/businesscard",
           "href" : "https://www.example.com/~bob/bob.vcf"
         }
       ]
     }

Note the assumption made in the above example is that 
there is an ":term:`acct`" URI for the given ":term:`mailto`" URI.  

This may not always be the case.

The email client would take note of the link relation 
in the above :term:`JRD` that refers to Bob's blog.  
The blog's URI would then be presented to you 
so that you could then visit his blog.  
The email client might also note that 
Bob has published an **avatar link relation**
and use that picture to represent Bob inside the email client.

Lastly, 
the client might automatically retrieve the data located at
the URI specified by the "**businesscard**" link relation 
(which might be a :term:`vcard` :term:`[16]`) 
to update the information about Bob in its internal address book.

In the above example, 
an "acct" URI :term:`[8]` is used in the query, 
though any valid alias for the user might also be used.  
See :ref:`Section 4.5 <webfinger.4.5>` for more information on WebFinger and URIs.

An **alias** is a URI that is different from the "subject" URI, 
yet identifies the same entity.  
In the above example, 
there is one "http" alias returned, 
though there might have been more than one.  
Had the "http:" URI shown as an alias been used to query for
information about Bob, 
the query would have appeared as:

::

     GET /.well-known/webfinger?
              resource=http%3A%2F%2Fwww.example.com%2F~bob%2F HTTP/1.1
     Host: www.example.com

Note that the host queried in this example is different than for the acct URI example, 
since the URI refers to a different host.  
Either this host would provide a response, 
or it would redirect the client to another host 
(e.g., redirect back to example.com).  
Either way, 
the response would have been substantially the same, 
with the subject and alias information changed as necessary.

( draft 12, http://tools.ietf.org/html/draft-ietf-appsawg-webfinger-12#section-3.1 )
