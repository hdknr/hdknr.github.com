4.3. Simplifying the Login Process
---------------------------------------------

OpenID (http://www.openid.net) is great for allowing users 
to log into a web site, 
though one criticism is that it is challenging for users 
to remember the URI they are assigned.  

WebFinger can help address this issue 
by allowing users to use user@domain-style addresses.  
Using a user's :term:`account URI`, 
a web site can perform a query to discover the associated OpenID identifier for a user.

Let's assume Carol is trying to use OpenID to log into a blog.  
The blog server might issue the following query to get the host metadata information:

::

     GET /.well-known/host-meta.json HTTP/1.1
     Host: example.com

The response that comes back is similar to the previous example:

::

     HTTP/1.1 200 OK
     Access-Control-Allow-Origin: *
     Content-Type: application/json; charset=UTF-8
     {
       "expires" : "2012-03-13T20:56:11Z",
       "links" :
       [
         {
           "rel" : "lrdd",
           "type" : "application/json",
           "template" :
             "https://example.com/lrdd/?format=json&uri={uri}"
         }
       ]
     }

The blog server processes the response as described in :rfc:`6415`.  
It will process the :term:`LRDD` :term:`link relation` using Carol's :term:`account URI` 
by issuing this query:

::

     GET /lrdd/?format=json&uri=acct%3Acarol%40example.com HTTP/1.1

The server might return a response like this:

::

     HTTP/1.1 200 OK
     Access-Control-Allow-Origin: *
     Content-Type: application/json; charset=UTF-8

     {
       "subject" : "acct:carol@example.com",
       "links" :
       [
         {
           "rel" : "http://webfinger.net/rel/avatar",
           "href" : "http://example.com/~alice/alice.jpg"
         },
         {
           "rel" : "http://specs.openid.net/auth/2.0/provider",
           "href" : "https://openid.example.com/carol"
         }
       ]
     }

At this point, 
the blog server knows that Carol's OpenID identifier is https://openid.example.com/carol 
and could then proceed with the login process as usual.

(Internet Draft 06)

