6.2.2 Initiator Generates Only an Ephemeral Key Pair; Responder Has Only a Static Key Pair, C(1, 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. note::
    - :ref:`jwa.4.6.2`
    - OpenID Connnct の ID TokenだとPartyU  = OP, PartyV = RP
    
        - OPが一時キーペア作成します。 が、スタティックキーペアは無くていいです。
        - RPがだけが永続キーペアを持つ
        - :ref:`<reg.2>` の jwk_uris(もしくはjwk)を参照する。

For these schemes, 
:ref:`Party U` generates an :term:`ephemeral key pair`, 
but has no static key pair; 
:ref:`party V` has only a static key pair. 

Party U obtains party V’s :term:`static public key` in a trusted manner 
(for example, from a certificate signed by a trusted CA) 
and sends its ephemeral public key to Party V. 

.. note::
    - Connectの場合、 RPの Trusted Manner は :doc:`reg`


The parties compute a :term:`shared secret` 
using their private keys and the other party’s public key. 

.. note::
    - Connectの ID Tokenであれば、 
        
        - OP : OPの一時プライベートキー  && RPの永続パブリックキー
        - RP : OPの一時パブリックキー && RPの永続プライベートキー

Each party uses the :term:`shared secret` to derive secret keying material 
(see Figure 7).

.. note::
    どちらも計算された共有シークレットをつかって、シークレットのキーマテリアルを派生させる。


Prerequisites: The following are prerequisites for the use of all C(1, 1) schemes.


1.  Each party shall have an authentic copy of the same set of domain parameters, D. 

    These parameters shall have been generated 
    as specified in :ref:`Section 5.5.1 <nist-sp800-56a.5.5.1>`. 

    For FFC schemes, 
    D = (p, q, g{, SEED, pgenCounter}); 
    for ECC schemes, D = (q, FR, a, b{, SEED}, G, n, h). 

    Furthermore, 
    each party shall have assurance of the validity of these domain parameters 
    as specified in :ref:`Section 5.5.2 <nist-sp800-56a.5.5.2>`.


2.  The responder shall have been designated as the owner of a static key pair 
    that was generated as specified in :ref:`Section 5.6.1 <nist-sp800-56a.5.6.1>` 
    using the set of domain parameters, D. 

    For FFC schemes, 
    the static key pair is (x, y); 
    for ECC schemes, the static key pair is (ds, Qs). 

    The responder shall obtain assurance of the validity 
    of its own static public key 
    as specified in :ref:`Section 5.6.2.1 <nist-sp800-56a.5.6.2.1>`. 

    The responder shall obtain assurance of its possession of 
    the correct value of its own private key 
    as specified in :ref:`Section 5.6.3.1 <nist-sp800-56a.5.6.3.1>`.

3.  The parties shall have agreed upon an Approved key derivation function 
    (see :ref:`Section 5.8 <nist-sp800-56a.5.8>`) 
    as well as an Approved hash function appropriate 
    for use with the key derivation function and 
    associated parameters (see Section 5.5). 

    If key confirmation is used, 
    the parties shall have agreed upon an 
    Approved MAC and associated parameters (see Tables 1 and 2).


4.  Prior to or during the key agreement process, 
    each party shall obtain the :term:`identifier` associated 
    with the other party during the key agreement scheme. 

    The initiator shall obtain the static public key 
    that is bound to the responder’s identifier. 

    This static public key shall be obtained in a trusted manner 
    (e.g., from a certificate signed by a trusted CA). 

    The initiator shall obtain assurance of the validity of 
    the responder’s static public key as specified in :ref:`Section 5.6.2.2 <nist-s800-56a.5.6.2.2>`


The following is a prerequisite for 
using the derived keying material 
for purposes beyond the C(1,1) scheme itself.

    The initiator shall obtain assurance that the responder is (or was) 
    in possession of the appropriate static private key, 
    as specified in :ref:`Section 5.6.3.2 <nist-sp800-56a.5.6.3.2>`.

