5.8.1 Concatenation Key Derivation Function (Approved Alternative 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. glossary::
    Concat KDF
        - here

This section specifies an Approved key derivation function, 
based on concatenation. 

The Concatenation KDF is as follows:

Function call: 
    kdf (Z, OtherInput),

    where OtherInput is keydatalen and OtherInfo.

Fixed Values (implementation dependent):

    1.  hashlen: 
        
        an integer that indicates 
        the length (in bits) of the output of the hash function 
        used to derive blocks of secret keying material.

    2.  max_hash_inputlen: 

        an integer that indicates the maximum length 
        (in bits) of the bit string(s) input to the hash function.

Auxiliary Function:

    1.  H: 

        an Approved hash function.

Input:

    1.  Z: 

        a byte string that is the shared secret.

    2.  keydatalen: 

        An integer that indicates the length (in bits) 
        of the secret keying material to be generated; 

        keydatalen shall be less than or equal to hashlen × (232 –1).

    3.  OtherInfo: 

        A bit string equal to the following concatenation:

            ::

                AlgorithmID || PartyUInfo || PartyVInfo {|| SuppPubInfo }{|| SuppPrivInfo }

        where the subfields are defined as follows:

        3.1     AlgorithmID: 

                A bit string that indicates how the derived keying material 
                will be parsed and for which algorithm(s) 
                the derived secret keying material will be used. 

                For example, 
                AlgorithmID might indicate that 
                bits 1-80 are to be used as an 80-bit HMAC key 
                and that bits 81-208 are to be used as a 128-bit AES key.

        3.2     PartyUInfo: 

                A bit string containing public information 
                that is required by the application using this KDF to be contributed 
                by party U to the key derivation process. 

                At a minimum, 
                PartyUInfo shall include IDU, the identifier of party U. 

                See the notes below.

        3.3     PartyVInfo: 

                A bit string containing public information 
                that is required by the application using this KDF to be contributed 
                by party V to the key derivation process. 

                At a minimum, 
                PartyVInfo shall include IDV, the identifier of party V. 

                See the notes below.

        3.4     (Optional) SuppPubInfo: 

                A bit string containing additional, 
                mutually-known public information.

        3.5     (Optional) SuppPrivInfo: 

                A bit string containing additional, 
                mutually-known private information 

                (for example, a shared secret symmetric key 
                that has been communicated through a separate channel).

Each of the three subfields 
AlgorithmID, PartyUInfo, and PartyVInfo shall be the concatenation of an application-specific, 
fixed-length sequence of substrings of information. 

Each substring representing a separate unit of information shall have one of these two formats: 
Either it is a fixed-length bit string, 
or it has the form Datalen || Data, 
where Data is a variable-length string of zero or more bytes, 
and Datalen is a fixed- length, big-endian counter 
that indicates the length (in bytes) of Data. 

(In this variable- length format, 
a null string of data shall be represented by using Datalen to indicate 
that Data has length zero.) 

An application using this KDF shall specify the ordering 
and number of the separate information substrings 
used in each of the subfields AlgorithmID, PartyUInfo, and PartyVInfo, 
and shall also specify which of the two formats 
(fixed- length or variable-length) is used for each substring. 

The application shall specify the lengths for all fixed-length quantities, 
including the Datalen counters.

The subfields SuppPrivInfo and SuppPubInfo (when allowed by the application) 
shall be formed by the concatenation of an application-specific, 
fixed-length sequence of substrings of additional information 
that may be used in key derivation upon mutual agreement of parties U and V. 

Each substring representing a separate unit of information shall be of the form Datalen || Data, 
where Data is a variable-length string of zero or more (eight-bit) bytes 
and Datalen is a fixed-length, big-endian counter that indicates the length (in bytes) of Data. 

The information substrings that parties U and V choose not to contribute are set equal to Null, 
and are represented in this variable-length format by setting Datalen equal to zero. If an application allows the use of the OtherInfo subfield SuppPrivInfo and/or the subfield SuppPubInfo, then the application shall specify the ordering and the number of additional information substrings that may be used in the allowed subfield(s) and shall specify the fixed-length of the Datalen counters.

Process:
    1.  reps = ⎡ keydatalen / hashlen⎤.
    2.  If reps > (232 −1), then ABORT: output an error indicator and stop.
    3.  Initialize a 32-bit, big-endian bit string counter as 0000000116.
    4.  If counter || Z || OtherInfo is more than max_hash_inputlen bits long, then ABORT: output an error indicator and stop.
    5.  For i = 1 to reps by 1, do the following:
    5.1 Compute Hashi = H(counter || Z || OtherInfo).
    5.2 Increment counter (modulo 232), treating it as an unsigned 32-bit integer.
    6.  Let Hhash be set to Hashreps if (keydatalen / hashlen) is an integer; otherwise, let Hhash
    be set to the (keydatalen mod hashlen) leftmost bits of Hashreps.
    7.  Set DerivedKeyingMaterial = Hash1 || Hash2 || ... || Hashreps-1 || Hhash.

Output:
The bit string DerivedKeyingMaterial of length keydatalen bits (or an error indicator). Any scheme attempting to call this key derivation function with keydatalen greater than or equal to hashlen × (232 −1) shall output an error indicator and stop without outputting DerivedKeyingMaterial. Any call to the key derivation function involving an attempt to hash a bit string that is greater than max_hash_inputlen bits long shall cause the KDF to output an error indicator and stop without outputting DerivedKeyingMaterial.
Notes:
1. IDU and IDV shall be represented in OtherInfo as separate units of information, using either the fixed-length format or the variable-length format described above – according to the requirements of the application using this KDF. The rationale for including the identifiers in the KDF input is provided in Appendix B.
2. Party U shall be the initiator, and party V shall be the responder, as assigned by the protocol employing the key agreement scheme used to determine the shared secret Z.


