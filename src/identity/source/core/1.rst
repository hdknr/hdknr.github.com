1.  Introduction
================================

.. note::
    - Entity : OP,  RP, End User
    - Protocal Framework : OAuth 2.0
    - Assertion Format : JWT
    - Cryptography for Assertion : Jose
    - Token : OAuth Bearer
    - Confiuration Data : Discovery
    - Registrion : Dynamic Registration 

OpenID Connect 1.0 is a simple identity layer 
on top of the :doc:`OAuth 2.0 <oauth>` :term:`[RFC6749]` protocol. 
It enables Clients to verify the identity of the End-User 
based on the authentication performed by an Authorization Server, 
as well as to obtain basic profile information about the End-User 
in an interoperable and REST-like manner.

The OpenID Connect Core 1.0 specification defines 
the core OpenID Connect functionality: 
authentication built on top of OAuth 2.0 
and the use of Claims to communicate information about the End-User. 

It also describes the security and privacy considerations for using OpenID Connect.

As background, 
the OAuth 2.0 Authorization Framework [RFC6749] and :doc:`OAuth 2.0 Bearer Token Usage <oauth_bearer>` 
[RFC6750] specifications provide a general framework for third-party applications 
to obtain and use limited access to HTTP resources. 
They define mechanisms to obtain and use Access Tokens 
to access resources but do not define standard methods to provide identity information. 
Notably, 
without profiling OAuth 2.0, 
it is incapable of providing information about the authentication of an End-User. 
Readers are expected to be familiar with these specifications.

OpenID Connect implements authentication as an extension to the OAuth 2.0 authorization process. 
Use of this extension is requested by Clients by including the openid scope value in the Authorization Request. 
Information about the authentication performed is returned 
in a :doc:`JSON Web Token (JWT) <jwt>` :term:`[JWT]` called an :term:`ID Token` (see :ref:`Section 2 <core.2>`). 
OAuth 2.0 Authentication Servers implementing OpenID Connect are also referred to as OpenID Providers (OPs). 
OAuth 2.0 Clients using OpenID Connect are also referred to as Relying Parties (RPs).

This specification assumes that 
the Relying Party has already obtained configuration information 
about the OpenID Provider, 
including its Authorization Endpoint and Token Endpoint locations. 
This information is normally obtained via :doc:`Discovery <discovery>`, 
as described in :doc:`OpenID Connect Discovery 1.0 <discovery>` :term:`[OpenID.Discovery]`, 
or may be obtained via other mechanisms.

Likewise, 
this specification assumes that the Relying Party has already obtained sufficient credentials 
and provided information needed to use the OpenID Provider. 
This is normally done via Dynamic Registration, 
as described in :doc:`OpenID Connect Dynamic Client Registration 1.0 <reg>` 
:term:`[OpenID.Registration]`, 
or may be obtained via other mechanisms.


