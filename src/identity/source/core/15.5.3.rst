15.5.3.  Redirect URI Fragment Handling Implementation Notes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

When response parameters are returned 
in the Redirection URI fragment value, 
the Client needs to have the User Agent parse the fragment encoded values 
and pass them to on to the Client's processing logic for consumption. 

User Agents that have direct access to cryptographic APIs 
may be able to be self-contained, 
for instance, with all Client code being written in JavaScript.

However, 
if the Client does not run entirely in the User Agent, 
one way to achieve this is to post them to a Web Server Client for validation.

The following is an example of a JavaScript file 
that a Client might host at its :term:`redirect_uri`. 

This is loaded by the redirect 
from the Authorization Server. 

The fragment component is parsed and then sent 
by POST to a URI that will validate and use the information received.

Following is a non-normative example of a Redirect URI response:

::

  GET /cb HTTP/1.1
  Host: client.example.org

  HTTP/1.1 200 OK
  Content-Type: text/html

::

  <script type="text/javascript">

  // First, parse the query string
  var params = {}, postBody = location.hash.substring(1),
      regex = /([^&=]+)=([^&]*)/g, m;
  while (m = regex.exec(postBody)) {
    params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);
  }

  // And send the token over to the server
  var req = new XMLHttpRequest();
  // using POST so query isn't logged
  req.open('POST', 'https://' + window.location.host +
                   '/catch_response', true);
  req.setRequestHeader('Content-Type',
                       'application/x-www-form-urlencoded');

  req.onreadystatechange = function (e) {
    if (req.readyState == 4) {
      if (req.status == 200) {
  // If the response from the POST is 200 OK, perform a redirect
        window.location = 'https://'
          + window.location.host + '/redirect_after_login'
      }
  // if the OAuth response is invalid, generate an error message
      else if (req.status == 400) {
        alert('There was an error processing the token')
      } else {
        alert('Something other than 200 was returned')
      }
    }
  };
  req.send(postBody);

( 1.0 )
