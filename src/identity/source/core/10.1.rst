10.1.  Signing
-----------------------------------------------------------------

The signing party MUST select a signature algorithm based on the algorithms 
supported by the recipient.


.. glossary::

    Asymmetric Signatures
        When using RSA or ECDSA Signatures, 
        the alg header parameter value of the JWS header MUST be set 
        to an appropriate algorithm as defined in JSON Web Algorithms [JWA]. 

        The private key used to sign the content MUST be associated 
        with a public key used for signature verification 
        published by the sender in its JWK Set document. 

        If there are multiple keys in the referenced JWK Set document, 
        a :term:`kid` value MUST be provided in the JWS header. 

        The key usage of the respective keys MUST support signing.

    Symmetric Signatures
        When using MAC-based signatures, 
        the alg header parameter value of the JWS header MUST be set to a MAC algorithm, 
        as defined in JSON Web Algorithms [JWA]. 

        The MAC key used is the octets of the UTF-8 representation 
        of the client_secret value. 

        See Section 16.19 for a discussion of entropy requirements 
        for client_secret values. 

        Symmetric signatures MUST NOT be used by public (non-confidential) Clients 
        because of their inability to keep secrets.

        See Section 16.20 for Security Considerations about the need for signed requests

(draft17)
