8.1.  Pairwise Identifier Algorithm
----------------------------------------------------

.. note::
    - ユニーク文字列を作る

        - selector id + local acount id + salt 
        - GUID

    - さらにハッシュとか暗号化とかする

When pairwise Subject Identifiers are used, the OpenID Provider MUST calculate a unique sub (subject) value for each Sector Identifier. The Subject Identifier value MUST NOT be reversible by any party other than the OpenID Provider.

Providers that use pairwise sub values and support Dynamic Client Registration [OpenID.Registration] SHOULD use the sector_identifier_uri parameter. It provides a way for a group of websites under common administrative control to have consistent pairwise sub values independent of the individual domain names. It also provides a way for Clients to change redirect_uri domains without having to reregister all of their users.

If the Client has not provided a value for sector_identifier_uri in Dynamic Client Registration [OpenID.Registration], the Sector Identifier used for pairwise identifier calculation is the host component of the registered redirect_uri. If there are multiple hostnames in the registered redirect_uris, the Client MUST register a sector_identifier_uri.

When a sector_identifier_uri is provided, the host component of that URL is used as the Sector Identifier for the pairwise identifier calculation. The value of the sector_identifier_uri MUST be a URL using the https scheme that points to a JSON file containing an array of redirect_uri values. The values of the registered redirect_uris MUST be included in the elements of the array.

Any algorithm with the following properties can be used by OpenID Providers to calculate pairwise Subject Identifiers:

    - The Subject Identifier value MUST NOT be reversible 
      by any party other than the OpenID Provider.

    - Distinct Sector Identifier values MUST result 
      in distinct Subject Identifier values.

    - The algorithm MUST be deterministic. ( 計算で一意に決まる )

Three example methods are:

    1.  The Sector Identifier can be concatenated with a local account ID 
        and a **salt** value that is kept secret by the Provider. 

        The concatenated string is then **hashed** using an appropriate algorithm. 

        ::
        
            Calculate sub = SHA-256 ( sector_identifier || local_account_id || salt ). 

    2.  The Sector Identifier can be concatenated with a local account ID 
        and a **salt** value that is kept secret by the Provider. 

        The concatenated string is then **encrypted** using an appropriate algorithm. 


        ::
            
            Calculate sub = AES-128 ( sector_identifier || local_account_id || salt ). 


    3.  The Issuer creates a Globally Unique Identifier (GUID) 
        for the pair of Sector Identifier and local account ID 
        and stores this value.

(draft17)
