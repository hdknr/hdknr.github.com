5.5.  ALTO
----------------------

Application-Layer Traffic Optimization (ALTO) 
is a system for distributing network topology information 
to end devices, 
so that those devices can modify their behavior 
to have a lower impact on the network [RFC6708].  

The ALTO protocol distributes topology information 
in the form of JSON objects carried in HTTP
[RFC2616][I-D.ietf-alto-protocol].  

The basic version of ALTO is simply a client-server protocol, 
so simple use of HTTPS suffices for this case [RFC2818].  

However, 
there is beginning to be some discussion of use cases for ALTO 
in which these JSON objects will be distributed 
through a collection of intermediate servers 
before reaching the client, 
while still preserving the ability of the client 
to authenticate the original source of the object.  

Even the base ALTO protocol notes that 
"ALTO clients obtaining ALTO information
must be able to validate the received ALTO information 
to ensure that it was generated by an appropriate ALTO server."


In this case, 
the security requirements are straightforward.  

JOSE objects carrying :term:`ALTO payloads` will need 
to bear :term:`digital signatures` from the originating servers, 
which will be bound to certificates attesting to the identities of the servers.  

There is no requirement for confidentiality in this case, 
since ALTO information is generally public.


The more interesting questions are encoding questions.  
ALTO objects are likely to be much larger than payloads in the two cases above,
with sizes of up to several megabytes.  

Processing of such large objects can be done more quickly 
if it can be done in a single pass, 
which may be possible if JOSE objects require specific orderings of
fields within the JSON structure.


In addition, 
because ALTO objects are also encoded as JSON, 
they are already safe for inclusion in a JOSE object.  

Signed JOSE objects will likely carry the signed data 
in a string alongside the signature.  

JSON objects have the property that they can be safely encoded in JSON strings.  

All they require is that unnecessary white space be removed, 
a much simpler transformation than, 
say base64url encoding.  

This raises the question of whether it might be possible
to optimize the JOSE encoding for certain "JSON-safe" cases.

Finally, 
it may be desirable for ALTO to have a "detached signature" mechanism, 
that is, 
a way to encode signature information separate
from the protected content.  

This would allow the ALTO protocol to include the signature 
in an HTTPS header, 
with the signed content as the HTTPS entity body.

(draft06)
