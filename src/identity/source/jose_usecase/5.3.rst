5.3.  Federation
----------------------------------------------------------------

Security tokens are used in two federated identity protocols, 
which have similar requirements to the general considerations discussed above:

-   The OpenID Connect protocol [OpenID.Messages] is a simple, 
    REST/ JSON-based identity federation protocol layered on OAuth 2.0.  

    It uses the :term:`JWT` and JOSE formats both 
    to represent **security tokens** and 
    to provide security for other protocol messages 
    (performing signing and optionally encryption).  

    OpenID Connect negotiates the algorithms 
    to be used and distributes information 
    about the keys to be used using protocol elements 
    that are not part of the JWT and JOSE header parameters.

-   The Mozilla Persona [Persona] system 
    is a simple single-sign-on (SSO) protocol 
    that uses JWTs that are signed JOSE JWS objects to
    represent information about identities, 
    applications, and keys for participating entities.  

    Persona distributes the keys used as claims in JWT messages 
    and not by using JOSE header parameters.

In the OpenID Connect context, 
and in some other applications of JWT, 
it is possible for the recipient of a JWT to accept it 
without **integrity protection** in the JWT itself.  

In such cases, 
the **recipient** chooses to rely on transport security 
rather than object security.

For example, 
if the **payload** is delivered over a TLS-protected channel, 
the recipient may regard the protections provided by TLS 
as sufficient, 
so JOSE protection would not be required.

However, 
even in this case, 
it is desirable to associate some metadata 
with the JWT payload (claim set), 
such as the **content type**, or other application-specific metadata.  

In a signed or encrypted object, 
these metadata values could be carried in a header 
with other metadata required for signing or encryption.  

It would thus simplify the design of OpenID Connect and similar applications 
if there could be a JOSE object format 
that does not apply cryptographic protections to its payload, 
but allows a header to be attached to the payload in
the same way as a signed or encrypted object.

(draft06)
