2.  Overview
==============================

.. note::

    Assertions in this spec are for:

        - :term:`clent credential` ( for 3rd party **authentication** )
        - :term:`authorization grant`

    Definitions are for:

        - **abstract message flow**  ( :ref:`oauth_assertion.4` )
        - **assertion content**  ( :ref:`oauth_assertion.5` )

The :doc:`OAuth 2.0 Authorization Protocol [I-D.ietf.oauth-v2] <oauth>` provides 
a method for making authenticated HTTP requests 
to a resource using an :term:`access token`.  
Access tokens are issued to clients by an :term:`authorization server` 
with the (sometimes implicit) approval of the :term:`resource owner`.  
These access tokens are typically obtained 
by exchanging an :term:`authorization grant` 
representing authorization by the resource owner or privileged administrator.  
Several authorization :term:`grant types` are defined 
to support a wide range of :term:`client types` 
and user experiences.  
OAuth also allows for the definition of new extension grant types 
to support additional clients or to provide a bridge between OAuth and other trust frameworks.  
Finally, OAuth allows the definition of additional authentication mechanisms 
to be used by clients when interacting with the authorization server.

In scenarios where security is at a premium one wants 
to avoid sending secrets across the Internet, 
even on encrypted connections.  
Instead one wants to send values derived from the secret 
that prove to the receiver that the sender is in possession of the secret 
without actually sending the secret.  
Typically the way derived values are created is by generating an assertion 
that is then either HMAC'ed or digitally signed using an agreed upon secret.  
By validating the :term:`HMAC` or :term:`digital signature` on the :term:`assertion`, 
the receiver can prove to themselves that the entity 
that generated the assertion was in possession of the secret without actually communicating the secret directly.

This specification provides a general framework for the use of assertions 
as :term:`client credentials` and/or :term:`authorization grants` with OAuth 2.0.  
It includes a generic mechanism for transporting assertions during interactions with a token endpoint, 
as wells as rules for the content and processing of those assertions.  
The intent is to provide an enhanced security profile
by using derived values such as signatures or HMACs, 
as well as facilitate the use of OAuth 2.0 in client-server integration scenarios 
where the end-user may not be present.

This specification only defines **abstract message flow** and **assertion content**.  
Actual use requires implementation of a companion protocol binding specification.  
Additional profile documents provide standard representations in formats such as :term:`SAML` and :term:`JWT`.

