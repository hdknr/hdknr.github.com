4.2.  Using Assertions as Authorization Grants
------------------------------------------------------------

An assertion can be used to request an :term:`access token` 
when a :term:`client` wishes to utilize an existing trust relationship.  
This may be done through the semantics of 
(and a :term:`digital signature`/:term:`HMAC` calculated over) the assertion, 
and expressed to the :term:`authorization server` through an extension :term:`authorization grant type`.  
The processes by which authorization is previously granted, 
and by which the client obtains the assertion 
prior to exchanging it with the :term:`authorization server`, are out of scope.

The following defines the use of assertions as :term:`authorization grants`
as an extension of :ref:`OAuth 2.0 [I-D.ietf.oauth-v2], section 4.5 <oauth_4_5>`.  
When using assertions as authorization grants, 
the :term:`client` MUST include the assertion using the following HTTP request parameters:

.. glossary::

   client_id  
      OPTIONAL.  
      The client identifier as described in :ref:`Section 3 of OAuth 2.0 [I-D.ietf.oauth-v2] <oauth_3>`.

   grant_type  
      REQUIRED.  
      The format of the assertion as defined by the authorization server.  
      The value MUST be an absolute URI.

   assertion  
      REQUIRED.  
      The assertion being used as an authorization grant.  
      Specific serialization of the assertion is defined by profile documents.  
      The serialization MUST be encoded for transport within HTTP forms.  
      It is RECOMMENDED that base64url be used.

   scope  
      OPTIONAL.  
      The request MAY contain a "scope" parameter.  
      The scope of the access request is expressed as a list of space-delimited strings.  
      The value is defined by the authorization server.  
      If the value contains multiple space-delimited strings,
      their order does not matter, and each string adds an additional access range to the requested scope.  
      When exchanging assertions for access_tokens, 
      the authorization for the token has been previously granted through some other mechanism.  
      As such, the requested scope SHOULD be equal or lesser than the scope
      originally granted to the authorized accessor.  
      If the scope parameter and/or value is omitted, 
      the scope SHOULD be treated as equal to the scope originally granted to the authorized accessor.
      The :term:`Authorization Server` SHOULD limit the scope of the issued access token to be equal 
      or lesser than the scope originally granted to the authorized accessor.

The following non-normative example demonstrates an assertion being used as an authorization grant. 
(line breaks are for display purposes only):

::

   POST /token HTTP/1.1
   Host: server.example.com
   Content-Type: application/x-www-form-urlencoded

   client_id=s6BhdRkqt3&
   grant_type=urn%3Aoasis%3Anames%sAtc%3ASAML%3A2.0%3Aassertion&
   assertion=PHNhbWxwOl...[omitted for brevity]...ZT4


