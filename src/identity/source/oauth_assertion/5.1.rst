5.1.  Assertion Metamodel
---------------------------

The following are entities and metadata involved in the issuance,
exchange and processing of assertions in OAuth 2.0.  These are
general terms, abstract from any particular assertion format.
Mappings of these terms into specific representations are provided by
profiles of this specification.

.. glossary::

   Issuer  
      The unique identifier for the entity that issued the
      assertion.  Generally this is the entity that holds the keying
      material used to generate the assertion.  In some use-cases
      Issuers may be either OAuth Clients (when assertions are self-
      asserted ) or a Security Token Service (an entity capable of
      issuing, renewing, transforming and validating of security
      tokens).

   Principal  
      A unique identifier for the subject of the assertion.
      When using assertions for client authentication, the Principal
      SHOULD be the client_id of the OAuth client.  When using
      assertions as an authorization grant, the Principal MUST identify
      an authorized accessor for whom the access token is being
      requested (typically the resource owner, or an authorized
      delegate).

   Audience  
      A URI that identifies the party intended to process the assertion.  
      The audience SHOULD be the URL of the Token Endpoint 
      as defined in :ref:`section 2.2 of OAuth 2.0 [I-D.ietf.oauth-v2] <oauth_2_2>`.

   Issued At   
      The time at which the assertion was issued.  While the
      serialization may differ by assertion format, this is always
      expressed in UTC with no time zone component.

   Expires At   
      The time at which the assertion expires.  While the
      serialization may differ by assertion format, this is always
      expressed in UTC with no time zone component.

   Assertion ID  
      A nonce or unique identifier for the assertion.  The
      Assertion ID may be used by implementations requiring message de-
      duplication for one-time use assertions.  Any entity that assigns
      an identifier MUST ensure that there is negligible probability
      that that entity or any other entity will accidentally assign the
      same identifier to a different data object.

