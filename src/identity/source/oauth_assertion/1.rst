1.  Introduction
========================================

OAuth 2.0 :term:`[RFC6749]` is an authorization framework that enables a
third-party application to obtain limited access to a protected HTTP resource.  
In OAuth, 
those third-party applications are called :term:`clients`; 
they access :term:`protected resources` 
by presenting an :term:`access token` to the HTTP resource.  
Access tokens are issued to clients by
an :term:`authorization server` with the (sometimes implicit) approval of the
:term:`resource owner`.  
These access tokens are typically obtained by
exchanging an :term:`authorization grant`, 
which represents the authorization granted by the resource owner 
(or by a privileged administrator).
Several authorization grant types are defined to support a wide range
of :term:`client types` and :term:`user experiences`.  
OAuth also provides an extensibility mechanism 
for defining additional :term:`grant types`, 
which can serve as a bridge between OAuth and other protocol frameworks.

.. note::
    - Grant Typeを追加することで、他のプロトコルフレームワークにブリッジできる。

This specification provides a general framework 
for the use of :term:`assertions` as :term:`authorization grants` with OAuth 2.0.  
It also provides a framework for assertions to be used for :term:`client authentication`.  
It provides generic mechanisms for transporting assertions during
interactions with an authorization server's token endpoint, 
as well as general rules for the content and processing of those assertions.
The intent is to provide an alternative client authentication
mechanism (one that doesn't send client secrets), 
as well as to facilitate the use of OAuth 2.0 in client-server integration scenarios, 
where the end-user may not be present.

.. note::
    - OAuth 2.0 でアサーションを認可交付(認可証?)として使う為のフレームワーク
    - また、クライアント認証でアサーションを使う時のフレームワーク

This specification only defines abstract message flows and processing rules.  
In order to be implementable, 
companion specifications are necessary to provide the corresponding concrete instantiations.  
For instance, 
**SAML 2.0 Bearer Assertion Profiles for OAuth 2.0** :term:`[I-D.ietf-oauth-saml2-bearer]` 
defines a concrete instantiation for SAML 2.0 tokens 
and JSON Web Token (JWT) Bearer Token Profiles for OAuth 2.0 :term:`[I-D.ietf-oauth-jwt-bearer]` 
defines a concrete instantiation for JWT tokens.

Note: The use of :term:`assertions` for :term:`client authentication` is orthogonal
to and separable from using assertions as an authorization grant.
They can be used either in combination or separately.  
Client assertion authentication is nothing more than an alternative way for
a client to authenticate to the token endpoint and must be used in
conjunction with some grant type to form a complete and meaningful
protocol request.  Assertion authorization grants may be used with or
without client authentication or identification.  Whether or not
client authentication is needed in conjunction with an assertion
authorization grant, as well as the supported types of client
authentication, are policy decisions at the discretion of the
authorization server.

( http://tools.ietf.org/html/draft-ietf-oauth-assertions-09#section-1 )
