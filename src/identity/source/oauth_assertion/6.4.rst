6.4.  Client acting on behalf of an anonymous user
---------------------------------------------------------------

When a :term:`client` is accessing resources on behalf of an anonymous user,
the following format and processing rules SHOULD be applied:

   -  The :term:`client_id` HTTP parameter MUST identify the :term:`client` to the :term:`authorization server`.

   -  The :term:`grant_type` HTTP request parameter MUST indicate the **assertion format**.

   -  The :term:`assertion` HTTP parameter MUST contain the serialized assertion 
      as in a format indicated by the :term:`grant_type` parameter.

   -  The :term:`Issuer` of the assertion MUST identify the entity that issued the assertion 
      as recognized by the :term:`Authorization Server`.  
      If the assertion is self-asserted, the :term:`Issuer` SHOULD be the :term:`client_id`.
      If the assertion was issued by a Security Token Service, 
      the :term:`Issuer` SHOULD identify the :term:`STS` as recognized by the :term:`Authorization Server`.

   -  The :term:`Principal` SHOULD indicate to the :term:`Authorization Server` 
      that the :term:`client` is acting on-behalf of an anonymous user 
      as defined by the :term:`Authorization Server`.  
      It is implied that authorization is based
      upon additional criteria, such as additional attributes or claims
      provided in the assertion.  
      For example, a :term:`client` may present an assertion from a trusted issuer asserting 
      that the bearer is over 18 via an included claim.  
      In this case, no additional information about the user's identity is included yet all the data needed to
      issue an :term:`access token` is present.

   -  The :term:`Audience` of the assertion MUST identify the :term:`Authorization Server` 
      and MAY be the URL of the :term:`Token Endpoint`.

   -  The :term:`Authorization Server` MUST validate the assertion in order to
      establish a mapping between the :term:`Issuer` and the secret used to
      generate the assertion.
