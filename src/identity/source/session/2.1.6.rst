2.1.6.  Fourth Party Native Applications
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. note::
    - Serinario ?

        - Cient Servlet is also OpenID RP.
        - User has already signed up at the Client Servlet for user_id.
        - User has some data (Protected Resource)  which can be shared to a native application whith the User installed in his device.
        - ID Token to the natie appliation can be worked as and identity assertion between native application and web application.

Fourth party native applications involve four parties: 

    1) the :term:`user`, 
    2) the native (desktop) application, 
    3) the :term:`authorization server`, and 
    4) the :term:`Client servlet` web application. 

The :term:`native application` uses :term:`Protected Resources` from a :term:`Client servlet` 
but it integrates with authentication services from the :term:`authorization server` **directly**. 
The :term:`native application` directs the :term:`user` to perform authentication 
at the :term:`Authorization Server` to obtain :term:`access <access token>` and :term:`ID tokens`. 

The tokens can then be used to access :term:`Protected Resources` at the web servlet Client. 
The process of obtaining an :term:`ID Token` for the :term:`native application` is very similar to that of 
using the :term:`code` authorization (web server) flow method. 

However, 
the **target audience** of the :term:`ID Token` is not the native application, 
but that of the :term:`Client servlet`. 
The :term:`Client` needs to indicate the target audience for the :term:`ID Token` 
by setting the :term:`id_token_audience` parameter 
in the :term:`authorization request` to that of the Identifier of the :term:`Client servlet`.

.. note::
    ?

        - id_token.aud =  native apolpliation client_id
        - authz_request.id_token_audience = client servlet client_id

::
    
                                         +-----------------------------+
    +----------------+                   |                             |
    |                |                   |   Authorization             |
    |   Native App   |                   |      Server                 |
    |                |                   |                             |
    |                |                   |      +--------------------+ |
    |                |>------------------|----->| Authorization      | |
    |                |<------------------|-----<|   Endpoint         | |
    |                |                   |      |                    | |
    |                |                   |      |                    | |
    |                |                   |      +--------------------+ |
    |                |                   |      | Access Token       | |
    |                |>------------------|----->|   Endpoint         | |
    |                |<------------------|-----<|                    | |
    |                |                   |      |                    | |
    |                |                   |      +--------------------+ |
    |                |>------------------|----->| Session Mgmt       | |
    |                |<------------------|-----<|   Endpoints        | |
    |                |                   |      |                    | |
    +----------------+                   |      |                    | |
            ^                            |      |                    | |
            |                            |      +--------------------+ |
            v                            |                             |
    +----------------+                   |                             |
    | Client         |                   +-----------------------------+
    | Servlet        |
    |                |
    +----------------+



When accessing :term:`Protected Resources` at the :term:`Client servlet`, 
the native application sends the :term:`ID Token` as an :term:`Authorization HTTP header` in the request. 
The :term:`Client servlet` can check the validity of the :term:`ID Token` 
by verifying the cryptographic information or 
by sending the :term:`ID Token` to the :term:`Check ID Endpoint` OpenID Connect Messages 1.0 [:term:`OpenID.Messages`].

::

    GET /resource1
    Auth: jwt_header.jwt_part2.jwt_part3
    Host: servlet.example.com


(Draft 05)
