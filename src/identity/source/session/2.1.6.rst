2.1.6.  Fourth Party Native Applications
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Fourth party native applications involve four parties: 

    1) the user, 
    2) the native (desktop) application, 
    3) the authorization server, and 
    4) the Client servlet web application. 

The native application uses Protected Resources from a Client servlet 
but it integrates with authentication services from the authorization server directly. 
The native application directs the user to perform authentication 
at the Authorization Server to obtain access and ID tokens. 

The tokens can then be used to access Protected Resources at the web servlet Client. 
The process of obtaining an ID Token for the native application is very similar to that of 
using the code authorization (web server) flow method. 

However, 
the **target audience** of the :term:`ID Token` is not the native application, 
but that of the Client servlet. 
The Client needs to indicate the target audience for the :term:`ID Token` 
by setting the :term:`id_token_audience` parameter 
in the :term:`authorization request` to that of the Identifier of the :term:`Client servlet`.

::
    
                                         +-----------------------------+
    +----------------+                   |                             |
    |                |                   |   Authorization             |
    |   Native App   |                   |      Server                 |
    |                |                   |                             |
    |                |                   |      +--------------------+ |
    |                |>------------------|----->| Authorization      | |
    |                |<------------------|-----<|   Endpoint         | |
    |                |                   |      |                    | |
    |                |                   |      |                    | |
    |                |                   |      +--------------------+ |
    |                |                   |      | Access Token       | |
    |                |>------------------|----->|   Endpoint         | |
    |                |<------------------|-----<|                    | |
    |                |                   |      |                    | |
    |                |                   |      +--------------------+ |
    |                |>------------------|----->| Session Mgmt       | |
    |                |<------------------|-----<|   Endpoints        | |
    |                |                   |      |                    | |
    +----------------+                   |      |                    | |
            ^                            |      |                    | |
            |                            |      +--------------------+ |
            v                            |                             |
    +----------------+                   |                             |
    | Client         |                   +-----------------------------+
    | Servlet        |
    |                |
    +----------------+



When accessing Protected Resources at the :term:`Client servlet`, 
the native application sends the :term:`ID Token` as an :term:`Authorization HTTP header` in the request. 
The :term:`Client servlet` can check the validity of the :term:`ID Token` 
by verifying the cryptographic information or 
by sending the :term:`ID Token` to the :term:`Check ID Endpoint` OpenID Connect Messages 1.0 [:term:`OpenID.Messages`].

::

    GET /resource1
    Auth: jwt_header.jwt_part2.jwt_part3
    Host: servlet.example.com


(Draft 05)
