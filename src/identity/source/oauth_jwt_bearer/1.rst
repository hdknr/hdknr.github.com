1.  Introduction
=================================

JSON Web Token (JWT) [JWT] is a JavaScript Object Notation (JSON) [RFC4627] 
based security token encoding that enables identity and
security information to be shared across security domains.  
A security token is generally issued by an :term:`identity provider` and
consumed by a :term:`relying party` that relies on its content to :term:`identify`
the :term:`token`'s :term:`subject` for security related purposes.

The :doc:`OAuth 2.0 Authorization Framework <oauth>` :term:`[RFC6749]` provides 
a method for making authenticated HTTP requests to a resource using an :term:`access token`.  
Access tokens are issued to third-party clients by an
authorization server (AS) with the (sometimes implicit) approval of
the :term:`resource owner`.  

In OAuth, 
an :term:`authorization grant` is an **abstract term** used 
to describe **intermediate credentials** that represent the resource owner authorization.  
An authorization grant is used by the client to obtain an access token.  
Several authorization grant types are defined 
to support a wide range of client types and user experiences.  
OAuth also allows for the definition of new extension
grant types to support additional clients or to provide a bridge
between OAuth and other trust frameworks.  

Finally, 
OAuth allows the definition of additional authentication mechanisms to be used by
clients when interacting with the authorization server.

.. note::
    - 認可証 : 「抽象化された用語」 

        - リソース所有者の認可を意味する
        - 認可証はアクセストークンに交換できる

The :doc:`Assertion Framework for OAuth 2.0 <oauth_assertion>` :term:`[I-D.ietf-oauth-assertions]` is
an abstract extension to OAuth 2.0 that provides a general framework
for the use of Assertions (a.k.a.  Security Tokens) as client
credentials and/or authorization grants with OAuth 2.0.  This
specification profiles the Assertion Framework for OAuth 2.0
[I-D.ietf-oauth-assertions] to define an extension grant type that
uses a JSON Web Token (JWT) Bearer Token to request an OAuth 2.0
access token as well as for use as client credentials.  The format
and processing rules for the JWT defined in this specification are
intentionally similar, though not identical, to those in the closely
related SAML 2.0 Bearer Assertion Profiles for OAuth 2.0
[I-D.ietf-oauth-saml2-bearer].

This document defines how a JSON Web Token (JWT) Bearer Token 
can be used to request an access token 
when a client wishes to utilize an existing trust relationship, 
expressed through the semantics of (and digital signature calculated over) the JWT, 
without a direct user approval step at the authorization server.  

It also defines how a JWT can be used as a client authentication mechanism.  
The use of a security token for client authentication is orthogonal to and
separable from using a security token as an authorization grant.
They can be used either in combination or separately.  
Client authentication using a JWT is nothing more than an alternative way
for a client to authenticate to the token endpoint and 
must be used in conjunction with some grant type to form a complete and meaningful
protocol request.  
JWT authorization grants may be used with or
without client authentication or identification.  
Whether or not client authentication is needed in conjunction with a JWT
authorization grant, 
as well as the supported types of client authentication, 
are policy decisions at the discretion of the authorization server.

The process by which the client obtains the JWT, prior to exchanging
it with the authorization server or using it for client
authentication, is out of scope.

( http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer-04#section-1 )
