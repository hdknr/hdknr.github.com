.. _Anonymous Access Token Request:

13.1.1.  Anonymous Access Token Request
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.. glossary::

    anonymous access tokne request
        - grant_type = client_credentials
        - client_id ="anonymous"
        

If the ":term:`grant_type`" parameter is ":term:`client_credentials`" 
and the ":term:`client_id`" parameter is set to "**anonymous**", 
the request is an anonymous access token request. 
The client MUST omit the ":term:`client_secret`" parameter in this case. 
The server MUST ignore the value of the ":term:`scope`" parameter.

In response to a anonymous access token request 
the :term:`Backplane Server` allocates a new :ref:`channel (Channels) <backplane.9>` 
and issues a :ref:`regular access token (Regular Access) <backplane.5.1>` 
to the client (no message payloads) for the channel. 
New channels are generated only anonymous access token requests. 
The channel is not bound to a bus 
until the first message is posted to the channel (see :ref:`Post Messages (Post Messages) <backplane.13.4>`).

Regular access tokens issued in response to anonymous access token requests MUST expire. 
It is RECOMMENDED that such tokens expire within **1 hour** after having been issued.

As an operational note, 
this API call SHOULD NOT be implemented in a way that makes it capable of blocking 
and use of one of the mechanisms in section 7 of RFC 4086 
(Eastlake, D., Schiller, J., and S. Crocker, “Randomness Requirements for Security,” June 2005.) 
[RFC4086] is RECOMMENDED.

(draft 08)

