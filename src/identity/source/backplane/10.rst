10.  Backplane Messages
========================================

A Backplane message is a JSON object with the following fields:

.. glossary::

    messageURL
        (string)
        a URL that a client can use to retrieve the message 

    source
        (string)
        an arbitrary URL identifying the client which posted the message 
        [[[ who/how/when/where? ]]] 

    type
        (string)
        opaque to the core Backplane specification; 
        value, semantic and associated payload format is defined in application scenario specifications 

    bus 
        (string)
        the name of the Bus the message was posted to 
    channel 
        (string)
        the identifier of Channel the message was posted to 

    sticky 
        (boolean)
        sticky flag. See Sticky Messages (Sticky Messages) 

    payload 
        (object)
        arbitrary data specific to the particular message type 

The presence of certain fields in a :term:`Backplane message` depends on the context it appears in.

A **downstream** (server-to-client) Backplane message MUST contain all the fields listed above. 
If the client receiving the message has regular access, 
the server MUST omit the ":term:`payload`" field.

An **upstream** (client-to-server) Backplane message MUST only contain the following fields: 
":term:`bus`", ":term:`channel`", ":term:`payload`", ":term:`type`".

Example downstream Backplane Message:

.. code-block:: javascript

    {
        "bus": "customer.com",
        "channel": "67dc880cc265b0dbc755ea959b257118",
        "messageURL": "https://bp.example.com/v2/message/097a5cc401001f95b45d37aca32a3bd2",
        "source": "http://aboutecho.com",
        "payload": {
                "role": "administrator"
        },
        "type": "identity/ack"
    }

(draft 08)
