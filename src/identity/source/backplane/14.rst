14.  Backplane JavaScript API
==================================================

A :term:`Backplane JavaScript Library` runs in an end user's browser 
and mediates communication between Backplane-enabled Widgets 
on the page and the Backplane Server.

Only one instance of the :term:`Backplane JavaScript Library` 
on a given page is possible. 
The library has to be the first to load on the page 
to make it possible for other scripts to use its subscription functionality.

The Backplane JavaScript Library provides the following API (all methods are static):

.. code-block:: javascript

    /**
     * Initializes the backplane library
     *
     * @param {Object} Params - hash with configuration parameters.
     *   Possible hash keys:
     *     serverBaseURL (required) - Base URL of Backplane Server
     *     busName (required) - Customer's backplane bus name
     */
    Backplane.init(Params);
    
    /**
     * Subscribes to messages from Backplane server
     *
     * @param {Function} Callback - Callback function which accepts backplane messages.
     * @returns Subscription ID which can be used later for unsubscribing.
     */
    Backplane.subscribe(Callback);
    
    /**
     * Removes specified subscription
     *
     * @param {Integer} Subscription ID
     */
    Backplane.unsubscribe(SubscriptionID);
    
    /**
     * Returns channel ID (like http://backplane.customer.com/v2/bus/customer.com/channel/8ec92f459fa70b0da1a40e8fe70a0bc8)
     *
     * @returns Backplane channel ID
     */
    Backplane.getChannelID();
    
    /**
     * Notifies backplane library about the fact that subscribers are going
     * to receive backplane messages within specified time interval.
     *
     * @param {Integer} TimeInterval - Time interval in seconds
     * @param {Array} MessageTypes (optional) - a list of expected message types
     */
    Backplane.expectMessagesWithin(TimeInterval, MessageTypes);
    

(draft 08)
