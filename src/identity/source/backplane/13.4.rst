13.4.  Post Messages
--------------------------------

Publish messages to the Backplane.

    Endpoint
        /v2/messages 

    HTTP mehod
        POST 

    Security
        HTTPS 

    Authorization
        The client MUST present the access token 
        obtained from a Access Token Request (Access Token Request) 
        as described in section 2.1 
        (Jones, M., Hardt, D., and D. Recordon, “The OAuth 2.0 Protocol: Bearer Tokens,” Jun 2011.) 
        [OAuth2.token.bearer]. 

        The server MUST retrieve the Access Scopes (Access Scopes) 
        associated with the presented access token 
        and determine that it has Privileged Access Level (Privileged Access) 
        for each of the Buses referenced in the request body. 

    Request body
        The body of the request is a JSON object of the following structure:

            - messages[]: an array of messages to be posted, represented as JSON objects of the following structure:

                - source (string): an arbitrary URL identifying the client which has posted the message
                - type (string): message type (arbitrary string)
                - bus (string): the name of the bus to post the message to
                - channel (string): the name of the channel to post the message to
                - payload (object): the message payload

    Returns

            - HTTP status code 201 ("Created") upon success.
            - HTTP status code 403 ("Forbidden") 
              if the client is not authorized to post messages 
              to any of the referenced Buses. 
              The server processes the messages in the request one by one; 
              if a message can't be posted for any reason, 
              the whole request fails and none of the messages get posted.

The server MUST check that the :term:`channel` in a message was previously allocated 
as a result of a :ref:`Access Token Request (Access Token Request) <backplane.13.1>`. 

If the channel is not yet bound to a :term:`bus`, 
the server MUST bind it to the :term:`bus` specified 
in the same message object from the request. 

If the channel is already bound to a different :term:`bus` 
than the one specified in the same message object in the request, 
the entire request is considered invalid and is aborted.

Request example:

.. code-block:: javascript

    {
      "messages": [
        {
          "source": "http://aboutecho.com",
          "type": "identity/ack"
          "bus": "customer.com",
          "channel": "67dc880cc265b0dbc755ea959b257118",
          "payload": {
            "role": "administrator"
          },
        },
        {
          "source": "http://aboutecho.com",
          "type": "identity/ack"
          "bus": "organization.org",
          "channel": "d7a592b31fbbc2baf5f9476884b9acd5",
          "payload": {
            "role": "moderator"
          },
        }
      ]
    }
    

(draft 08)
