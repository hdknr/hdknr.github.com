.. _discovery.provider:

2.  OpenID Provider Discovery
==============================

OpenID Provider discovery is OPTIONAL; 
if a :term:`Relying Party` knows the OP information through an out-of-band mechanism, 
they can skip this step and proceed to :ref:`Section 4 <discovery.4>`.

Provider discovery requires the following information to make a discovery request:

.. glossary::

    resource
        Identifier of the target End-User that is the subject of the discovery request.

    host
        Server where a WebFinger service is hosted.

    rel
        URI identifying the type of service whose location is requested.

OpenID Connect uses the following discoverable :term:`rel` value in :term:`WebFinger` [I‑D.ietf‑appsawg‑webfinger]:

    =====================   ============================================= 
    Rel Type                URI
    =====================   ============================================= 
    OpenID Connect Issuer   http://openid.net/specs/connect/1.0/issuer
    =====================   ============================================= 

To start discovery of OpenID endpoints, 
the End-User supplies an Identifier to the Client or Relying Party. 

The Client applies the :ref:`normalization rules <discovery.2.1>` to the :term:`Identifier` 
to determine the Resource and Host. 

Then it makes an HTTPS GET request to the Host's :term:`WebFinger` [I‑D.ietf‑appsawg‑webfinger] endpoint 
with the :term:`resource` and :term:`rel` parameters to obtain the location of the requested service.

The :term:`Issuer` MUST be returned in the response. 

This includes a :term:`URI scheme` (which MUST be https), a :term:`Host`, and OPTIONALLY, a port.

.. note::
    1. ユーザーが識別子をRPに入力 (識別子は https://op.net/path )
    2. RPは識別子を正規化 ( -> Resource + Host )
    3. WebFingerでHTTP GET

( http://openid.bitbucket.org/openid-connect-discovery-1_0.html#ProviderDisc )
