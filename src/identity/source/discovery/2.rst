2.  Provider Discovery
============================================

OpenID Provider discovery is **optional**; 
if a :term:`Relying Party` knows the OP information through an out-of-band mechanism, 
they can skip this step and proceed to :ref:`Section 3 <discovery.3>`.

:term:`Provider discovery` requires the following information to make a discovery request:

    Principal
        Identifier of the target End-User who is the subject of the discovery request 

    Host
        Server where a Simple Web Discovery service is hosted 

    Service
        URI identifying the type of service whose location is requested 

OpenID Connect uses the following discoverable service in :term:`Simple Web Discovery` [:term:`SWD`]:

.. table:: Provider Discovery

    =======================     ================================================
    Service Type                URI

    OpenID Connect Issuer       http://openid.net/specs/connect/1.0/issuer
    =======================     ================================================

To start discovery of OpenID endpoints, 
the :term:`End-User` supplies an :term:`Identifier` [#]_  to the :term:`Client` or :term:`Relying Party`. 
The :term:`Client` applies the :term:`normalization rules` to the :term:`Identifier` 
to extract the :term:`principal` and :term:`host`. 
Then it makes a HTTPS request to the host's :term:`Simple Web Discovery` [:term:`SWD`] endpoint 
with the :term:`principal` and :term:`service` parameters to obtain the location of the requested service. 
The :term:`Client` MUST perform a :term:`TLS/SSL server certificate check`, per RFC 6125 [:term:`RFC6125`].

What MUST be returned in the response is the :term:`issuer`. 
This includes :term:`URI scheme`, :term:`HOST`, and OPTIONALLY, :term:`port`.


.. [#] What identifier ?  Must be a user identifier.


.. seqdiag:: discovery/2.diag

(Draft 07, Dec 22,2011 )
