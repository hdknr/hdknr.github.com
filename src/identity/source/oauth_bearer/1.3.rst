1.3.  Overview
------------------------

OAuth provides a method for clients 
to access a :term:`protected resource` on behalf of a :term:`resource owner`.  

In the general case, 
before a client can access a :term:`protected resource`, 
it must first obtain an :term:`authorization grant` from the :term:`resource owner` 
and then exchange the authorization grant for an :term:`access token`.  

The :term:`access token` represents the grant's :term:`scope`, :term:`duration`, 
and other attributes granted by the :term:`authorization grant`.  
The :term:`client` accesses the :term:`protected resource` 
by presenting the :term:`access token` to the :term:`resource server`.  

In some cases, 
a :term:`client` can directly present its own credentials to an :term:`authorization server` to
obtain an :term:`access token` 
without having to first obtain an :term:`authorization grant` 
from a :term:`resource owner`.

.. note::
    Clinet Credential = Grant, case .

The :term:`access token` provides an abstraction, 
replacing different authorization constructs 
(e.g. username and password, assertion) for a single token 
understood by the :term:`resource server`.  

This abstraction enables issuing :term:`access tokens` valid 
for a short time period, 
as well as removing the :term:`resource server`'s need 
to understand a wide range of authentication schemes.

::


   +--------+                               +---------------+
   |        |--(A)- Authorization Request ->|   Resource    |
   |        |                               |     Owner     |
   |        |<-(B)-- Authorization Grant ---|               |
   |        |                               +---------------+
   |        |
   |        |        Authorization Grant &  +---------------+
   |        |--(C)--- Client Credentials -->| Authorization |
   | Client |                               |     Server    |
   |        |<-(D)----- Access Token -------|               |
   |        |                               +---------------+
   |        |
   |        |                               +---------------+
   |        |--(E)----- Access Token ------>|    Resource   |
   |        |                               |     Server    |
   |        |<-(F)--- Protected Resource ---|               |
   +--------+                               +---------------+

                     Figure 1: Abstract Protocol Flow

The abstract flow illustrated in Figure 1 describes 
the overall OAuth 2.0 protocol architecture.  
The following steps are specified within this document:

      E)    The :term:`client` makes a :term:`protected resource request` 
            to the :term:`resource server` by presenting the :term:`access token`.

      F)    The :term:`resource server` validates the :term:`access token`, 
            and if valid, serves the request.


(Draft 17)
