5.1.  Message Signature or MAC Computation
----------------------------------------------------------------------

To create a JWS, one MUST perform these steps.  The order of the
steps is not significant in cases where there are no dependencies
between the inputs and outputs of the steps.

1.  Create the content to be used as the JWS Payload.

2.  Compute the encoded payload value BASE64URL(JWS Payload).

3.  Create the JSON object(s) containing the desired set of Header
    Parameters, which together comprise the JWS Header: the JWS
    Protected Header, and if the JWS JSON Serialization is being
    used, the JWS Unprotected Header.

4.  Compute the encoded header value BASE64URL(UTF8(JWS Protected
    Header)).  If the JWS Protected Header is not present (which can
    only happen when using the JWS JSON Serialization and no
    "protected" member is present), let this value be the empty
    string.

5.  Compute the JWS Signature in the manner defined for the
    particular algorithm being used over the JWS Signing Input
    ASCII(BASE64URL(UTF8(JWS Protected Header)) || '.' ||
    BASE64URL(JWS Payload)).  The "alg" (algorithm) Header Parameter
    MUST be present in the JWS Header, with the algorithm value
    accurately representing the algorithm used to construct the JWS
    Signature.

6.  Compute the encoded signature value BASE64URL(JWS Signature).

7.  These three encoded values are used in both the JWS Compact
    Serialization and the JWS JSON Serialization representations.

8.  If the JWS JSON Serialization is being used, repeat this process
    (steps 3-7) for each digital signature or MAC operation being
    performed.

9.  Create the desired serialized output.  The JWS Compact
    Serialization of this result is BASE64URL(UTF8(JWS Protected
    Header)) || '.' || BASE64URL(JWS Payload) || '.' || BASE64URL(JWS
    Signature).  The JWS JSON Serialization is described in
    Section 7.2.

(draft27)
