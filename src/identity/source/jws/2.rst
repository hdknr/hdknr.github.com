2.  Terminology
=====================

.. glossary::

    JSON Web Signature (JWS)
        A data structure cryptographically securing a JWS Header and a JWS Payload with a JWS Signature.

    JWS Header
        A string containing a JSON object that describes the signature applied to the JWS Header and the JWS Payload to create the JWS Signature.

    JWS Payload
        The bytes to be signed - a.k.a., the message.

    JWS Signature
        A byte array containing the cryptographic material that secures the contents of the JWS Header and the JWS Payload.

    Encoded JWS Header
        Base64url encoding of the bytes of the UTF-8 RFC 3629 [RFC3629] representation of the JWS Header.

    Encoded JWS Payload
        Base64url encoding of the JWS Payload.

    Encoded JWS Signature
        Base64url encoding of the JWS Signature.

    JWS Signing Input
        The concatenation of the Encoded JWS Header, a period ('.') character, and the Encoded JWS Payload.

    Header Parameter Names
        The names of the members within the JSON object represented in a JWS Header.

    Header Parameter Values
        The values of the members within the JSON object represented in a JWS Header.

    Digital Signature
        For the purposes of this specification, we use this term to encompass both Hash-based Message Authentication Codes (HMACs), which can provide authenticity but not non-repudiation, and digital signatures using public key algorithms, which can provide both. Readers should be aware of this distinction, despite the decision to use a single term for both concepts to improve readability of the specification.

    Base64url Encoding
        For the purposes of this specification, this term always refers to the he URL- and filename-safe Base64 encoding described in RFC 4648 [RFC4648], Section 5, with the (non URL-safe) '=' padding characters omitted, as permitted by Section 3.2. (See Appendix C for notes on implementing base64url encoding without padding.)

(v.03)

