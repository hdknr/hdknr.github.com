2. Terminology
============================================


.. glossary::

   JSON Web Signature (JWS)  
      A data structure representing a digitally
      signed or MACed message.  The structure represents three values:
      the JWS Header, the JWS Payload, and the JWS Signature.

   JSON Text Object  
      A UTF-8 [RFC3629] encoded text string representing
      a JSON object; the syntax of JSON objects is defined in Section
      2.2 of [RFC4627].

   JWS Header  
      A JSON Text Object (or JSON Text Objects, when using the
      JWS JSON Serialization) that describes the digital signature or
      MAC operation applied to create the JWS Signature value.  The
      members of the JWS Header object(s) are Header Parameters.

   JWS Payload  
      The sequence of octets to be secured -- a.k.a., the
      message.  The payload can contain an arbitrary sequence of octets.

   JWS Signature  
      A sequence of octets containing the cryptographic
      material that ensures the integrity of the JWS Protected Header
      and the JWS Payload.  The JWS Signature value is a digital
      signature or MAC value calculated over the JWS Signing Input using
      the parameters specified in the JWS Header.

   JWS Protected Header  
      A JSON Text Object that contains the portion of
      the JWS Header that is integrity protected.  For the JWS Compact
      Serialization, this comprises the entire JWS Header.  For the JWS
      JSON Serialization, this is one component of the JWS Header.

   Header Parameter  
      A name/value pair that is member of the JWS Header.

   Header Parameter Name  
      The name of a member of the JWS Header.

   Header Parameter Value  
      The value of a member of the JWS Header.

   Base64url Encoding  
      The URL- and filename-safe Base64 encoding
      described in RFC 4648 [RFC4648], Section 5, with the (non URL-
      safe) '=' padding characters omitted, as permitted by Section 3.2.
      (See Appendix C for notes on implementing base64url encoding
      without padding.)

   Encoded JWS Header  
      Base64url encoding of the JWS Protected Header.

   Encoded JWS Payload  
      Base64url encoding of the JWS Payload.

   Encoded JWS Signature  
      Base64url encoding of the JWS Signature.

   JWS Signing Input  
      The concatenation of the Encoded JWS Header, a
      period ('.') character, and the Encoded JWS Payload.

   JWS Compact Serialization  
      A representation of the JWS as the
      concatenation of the Encoded JWS Header, the Encoded JWS Payload,
      and the Encoded JWS Signature in that order, with the three
      strings being separated by two period ('.') characters.  This
      representation is compact and URL-safe.

   JWS JSON Serialization  
      A representation of the JWS as a JSON
      structure containing JWS Header, Encoded JWS Payload, and Encoded
      JWS Signature values.  Unlike the JWS Compact Serialization, the
      JWS JSON Serialization enables multiple digital signatures and/or
      MACs to be applied to the same content.  This representation is
      neither compact nor URL-safe.


   Collision Resistant Namespace  
      A namespace that allows names to be
      allocated in a manner such that they are highly unlikely to
      collide with other names.  For instance, collision resistance can
      be achieved through administrative delegation of portions of the
      namespace or through use of collision-resistant name allocation
      functions.  Examples of Collision Resistant Namespaces include:
      Domain Names, Object Identifiers (OIDs) as defined in the ITU-T
      X.660 and X.670 Recommendation series, and Universally Unique
      IDentifiers (UUIDs) [RFC4122].  When using an administratively
      delegated namespace, the definer of a name needs to take
      reasonable precautions to ensure they are in control of the
      portion of the namespace they use to define the name.

   StringOrURI  
      A JSON string value, with the additional requirement
      that while arbitrary string values MAY be used, any value
      containing a ":" character MUST be a URI [RFC3986].  StringOrURI
      values are compared as case-sensitive strings with no
      transformations or canonicalizations applied.


( https://tools.ietf.org/html/draft-ietf-jose-json-web-signature-13#section-2 )
