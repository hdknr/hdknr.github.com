10.6.  JSON Security Considerations
------------------------------------------------------------------------

Strict JSON [RFC7159] validation is a security requirement.  If
malformed JSON is received, then the intent of the sender is
impossible to reliably discern.  Ambiguous and potentially
exploitable situations could arise if the JSON parser used does not
reject malformed JSON syntax.  In particular, any JSON inputs not
conforming to the JSON-text syntax defined in RFC 7159 input MUST be
rejected in their entirety.

Section 4 of the JSON Data Interchange Format specification [RFC7159]
states "The names within an object SHOULD be unique", whereas this
specification states that "Header Parameter names within this object
MUST be unique; recipients MUST either reject JWSs with duplicate
Header Parameter names or use a JSON parser that returns only the
lexically last duplicate member name, as specified in Section 15.12
(The JSON Object) of ECMAScript 5.1 [ECMAScript]".  Thus, this
specification requires that the Section 4 "SHOULD" be treated as a
"MUST" by senders and that it be either treated as a "MUST" or in the
manner specified in ECMAScript 5.1 by receivers.  Ambiguous and
potentially exploitable situations could arise if the JSON parser
used does not enforce the uniqueness of member names or returns an
unpredictable value for duplicate member names.

Some JSON parsers might not reject input that contains extra
significant characters after a valid input.  For instance, the input
"{"tag":"value"}ABCD" contains a valid JSON-text object followed by
the extra characters "ABCD".  Such input MUST be rejected in its
entirety.

(draft28)
