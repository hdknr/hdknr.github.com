.. _jwe.json_serialization:

7.2.  JWE JSON Serialization
------------------------------------------

.. note::
    - 複数のRecipientに同じCEKで暗号化されたCipherTextを送る
    - CEKは各Recipient毎に別のキーで暗号化されているので、
      他のRecipientのキーを復元する事はできない。

The JWE JSON Serialization represents encrypted content as a JSON
object.  Content using the JWE JSON Serialization can be encrypted to
more than one recipient.  This representation is neither optimized
for compactness nor URL-safe.

The following members are defined for use in top-level JSON objects
used for the JWE JSON Serialization:

.. glossary::

    protected  
        The "protected" member MUST be present and contain the
        value BASE64URL(UTF8(JWE Protected Header)) when the JWE Protected
        Header value is non-empty; otherwise, it MUST be absent.  These
        Header Parameter values are integrity protected.

    unprotected  
        The "unprotected" member MUST be present and contain the
        value JWE Shared Unprotected Header when the JWE Shared
        Unprotected Header value is non-empty; otherwise, it MUST be
        absent.  This value is represented as an unencoded JSON object,
        rather than as a string.  These Header Parameter values are not
        integrity protected.


    iv 
        The "iv" member MUST be present and contain the value
        BASE64URL(JWE Initialization Vector) when the JWE Initialization
        Vector value is non-empty; otherwise, it MUST be absent.
     
    aad
        The "aad" member MUST be present and contain the value
        BASE64URL(JWE AAD)) when the JWE AAD value is non-empty;
        otherwise, it MUST be absent.  A JWE AAD value can be included to
        supply a base64url encoded value to be integrity protected but not
        encrypted.
     
    ciphertext  
        The "ciphertext" member MUST be present and contain the
        value BASE64URL(JWE Ciphertext).
     
    tag  
        The "tag" member MUST be present and contain the value
        BASE64URL(JWE Authentication Tag) when the JWE Authentication Tag
        value is non-empty; otherwise, it MUST be absent.
     
    recipients  
        The "recipients" member value MUST be an array of JSON
        objects.  Each object contains information specific to a single
        recipient.  This member MUST be present, even if the array
        elements contain only the empty JSON object "{}" (which can happen
        when all Header Parameter values are shared between all recipients
        and when no encrypted key is used, such as when doing Direct
        Encryption).
    
The following members are defined for use in the JSON objects that
are elements of the "recipients" array:

.. glossary::

    header  
        The "header" member MUST be present and contain 
        the value JWE Per-Recipient Unprotected Header 
        when the JWE Per-Recipient Unprotected Header value is non-empty; 
        otherwise, it MUST be absent.  

        This value is represented as an unencoded JSON object,
        rather than as a string.  

        These Header Parameter values are **not** integrity protected.
     
    encrypted_key  
        The "encrypted_key" member MUST be present and contain
        the value BASE64URL(JWE Encrypted Key) 
        when the JWE Encrypted Key value is non-empty; 
        otherwise, it MUST be absent.

        .. note::
            - これを各々のrecipentが復号してCEKとする
            - 復号されたCEKは全てのrecipentsで同一(ciphertextが同じ、ということ)

At least one of the "header", "protected", and "unprotected" members
MUST be present so that "alg" and "enc" Header Parameter values are
conveyed for each recipient computation.

Additional members can be present in both the JSON objects defined
above; if not understood by implementations encountering them, they
MUST be ignored.

Some Header Parameters, including the "alg" parameter, can be shared
among all recipient computations.  Header Parameters in the JWE
Protected Header and JWE Shared Unprotected Header values are shared
among all recipients.

The Header Parameter values used when creating or validating per-
recipient Ciphertext and Authentication Tag values are the union of
the three sets of Header Parameter values that may be present: (1)
the JWE Protected Header represented in the "protected" member, (2)
the JWE Shared Unprotected Header represented in the "unprotected"
member, and (3) the JWE Per-Recipient Unprotected Header represented
in the "header" member of the recipient's array element.  The union
of these sets of Header Parameters comprises the JWE Header.  The
Header Parameter names in the three locations MUST be disjoint.

Each JWE Encrypted Key value is computed using the parameters of the
corresponding JWE Header value in the same manner as for the JWE
Compact Serialization.  This has the desirable property that each JWE
Encrypted Key value in the "recipients" array is identical to the
value that would have been computed for the same parameter in the JWE
Compact Serialization.  Likewise, the JWE Ciphertext and JWE
Authentication Tag values match those produced for the JWE Compact
Serialization, provided that the JWE Protected Header value (which
represents the integrity-protected Header Parameter values) matches
that used in the JWE Compact Serialization.

All recipients use the same JWE Protected Header, JWE Initialization
Vector, JWE Ciphertext, and JWE Authentication Tag values, when
present, resulting in potentially significant space savings if the
message is large.  Therefore, all Header Parameters that specify the
treatment of the Plaintext value MUST be the same for all recipients.
This primarily means that the "enc" (encryption algorithm) Header
Parameter value in the JWE Header for each recipient and any
parameters of that algorithm MUST be the same.


In summary, the syntax of a JWE using the JWE JSON Serialization is
as follows:

::

  {"protected":"<integrity-protected shared header contents>",
   "unprotected":<non-integrity-protected shared header contents>,
   "recipients":[
    {"header":<per-recipient unprotected header 1 contents>,
     "encrypted_key":"<encrypted key 1 contents>"},
    ...
    {"header":<per-recipient unprotected header N contents>,
     "encrypted_key":"<encrypted key N contents>"}],
   "aad":"<additional authenticated data contents>",
   "iv":"<initialization vector contents>",
   "ciphertext":"<ciphertext contents>",
   "tag":"<authentication tag contents>"
  }

See :ref:`Appendix A.4 <jwe.appendix.a.4>` for an example of 
computing a JWE using the JWE JSON Serialization.

(draft21)
