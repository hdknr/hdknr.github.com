4.1.3. Access Token Request
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The client makes a request to the token endpoint 
by sending the following parameters 
using the "**application/x-www-form-urlencoded**" format 
per Appendix B with a character encoding of **UTF-8** 
in the HTTP request entity-body:

.. glossary::

   grant_type
         REQUIRED.  Value MUST be set to "authorization_code".

   code
         REQUIRED.  The authorization code received from the
         authorization server.

   redirect_uri
         REQUIRED, if the "redirect_uri" parameter was included in the
         authorization request as described in Section 4.1.1, and their
         values MUST be identical.

   client_id
         REQUIRED, if the client is not authenticating with the
         authorization server as described in Section 3.2.1.

If the :term:`client type` is :term:`confidential` or 
the client was issued :term:`client credentials` 
(or assigned other authentication requirements), 
the client MUST authenticate with the :term:`authorization server` 
as described in :ref:`Section 3.2.1 <oauth.3.2.1>`.

For example, the client makes the following HTTP request using TLS
(with extra line breaks for display purposes only):

::

     POST /token HTTP/1.1
     Host: server.example.com
     Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
     Content-Type: application/x-www-form-urlencoded

     grant_type=authorization_code&code=SplxlOBeZQQYbYS6WxSbIA
     &redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb

The authorization server MUST:

   -  require :term:`client authentication` for confidential clients 
      or for any client that was issued client credentials 
      (or with other authentication requirements),

   -  authenticate the client if :term:`client authentication` is included,

   -  ensure that the :term:`authorization code` was issued to the authenticated
      confidential client, 
      or if the client is public, 
      ensure that the code was issued to ":term:`client_id`" in the request,

   -  verify that the authorization code is valid, and

   -  ensure that the ":term:`redirect_uri`" parameter is present 
      if the ":term:`redirect_uri`" parameter was included 
      in the initial authorization request as described in :ref:`Section 4.1.1 <oauth.4.1.1>`, 
      and if included ensure that their values are identical.

( http://tools.ietf.org/html/rfc6749.html#section-4.1.3 )
