1.5.  Refresh Token
-------------------------

:term:`Refresh tokens` are credentials used to obtain :term:`access tokens`.  
:term:`Refresh tokens` are issued to the :term:`client` by the :term:`authorization server` 
and are used to obtain a new :term:`access token` 
when the current :term:`access token` becomes invalid or expires, 
or to obtain additional :term:`access tokens` with identical 
or narrower :term:`scope` 
(:term:`access tokens` may have a shorter lifetime [#]_ 
and **fewer permissions** than authorized by the :term:`resource owner`).  
Issuing a :term:`refresh token` is **optional**.  
If the :term:`authorization server` issues a :term:`refresh token`, 
it is included when issuing an :term:`access token`.

A :term:`refresh token` is a string representing the authorization 
granted to the :term:`client` by the :term:`resource owner`.  
The string is usually opaque to the :term:`client`.  
The token denotes an identifier used to retrieve the authorization information.  
Unlike :term:`access tokens`, 
:term:`refresh tokens` are intended for use only with :term:`authorization servers` 
and are never sent to :term:`resource servers`.


.. [#] How shorter ? 

.. _oauth_figure_2:

Figure 2: Refreshing an Expired Access Token
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::


  +--------+                                           +---------------+
  |        |--(A)------- Authorization Grant --------->|               |
  |        |                                           |               |
  |        |<-(B)----------- Access Token -------------|               |
  |        |               & Refresh Token             |               |
  |        |                                           |               |
  |        |                            +----------+   |               |
  |        |--(C)---- Access Token ---->|          |   |               |
  |        |                            |          |   |               |
  |        |<-(D)- Protected Resource --| Resource |   | Authorization |
  | Client |                            |  Server  |   |     Server    |
  |        |--(E)---- Access Token ---->|          |   |               |
  |        |                            |          |   |               |
  |        |<-(F)- Invalid Token Error -|          |   |               |
  |        |                            +----------+   |               |
  |        |                                           |               |
  |        |--(G)----------- Refresh Token ----------->|               |
  |        |                                           |               |
  |        |<-(H)----------- Access Token -------------|               |
  +--------+           & Optional Refresh Token        +---------------+



The flow illustrated in Figure 2 includes the following steps:

   (A)  The client requests an access token by authenticating with the authorization server, and presenting an authorization grant.

   (B)  The authorization server authenticates the client and validates the authorization grant, 
        and if valid issues an access token and a refresh token.

   (C)  The client makes a protected resource requests to the resource server by presenting the access token.

   (D)  The resource server validates the access token, and if valid, serves the request.

   (E)  Steps (C) and (D) repeat until the access token expires.  If the
        client knows the access token expired, it skips to step (G),
        otherwise it makes another protected resource request.

   (F)  Since the access token is invalid, the resource server returns
        an invalid token error.

   (G)  The client requests a new access token by authenticating with
        the authorization server and presenting the refresh token.

   (H)  The authorization server authenticates the client and validates
        the refresh token, and if valid issues a new access token (and
        optionally, a new refresh token).


(v.22)
