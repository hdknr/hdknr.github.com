.. _oauth.implicit:
.. _oauth.implicit_grant:
.. _oauth.implicit_grant_type:

4.2.  Implicit Grant
---------------------------------------------------------------------

The :term:`implicit grant type` is used to obtain :term:`access tokens` 
(it does not support the issuance of :term:`refresh tokens`) and 
is optimized for :term:`public clients` known to operate a particular redirection URI.  

These :term:`clients` are typically implemented in a **browser** 
using a scripting language such as :term:`JavaScript`.

.. note::

    - ** NO reflesh tokens ** for Implict

Since this is a **redirection-based** flow, 
the client must be capable of
interacting with the :term:`resource owner`'s :term:`user-agent` 
(typically a web browser) 
and capable of receiving incoming requests (via redirection)
from the :term:`authorization server`.

Unlike the :ref:`authorization code grant type <oauth.code>`, 
in which the client makes separate **requests for authorization** 
and for an access token, 
the client receives the access token as the result of the :term:`authorization request`.

The implicit grant type does not include :term:`client authentication`, and
relies on the presence of the :term:`resource owner` 
and the registration of the :term:`redirection URI`.  

Because the access token is encoded into the redirection URI, 
it may be exposed to the resource owner and other applications 
residing on the same device.

.. note::
    
    - ** NO client authentication **
    - resource owner MUST be the user agent operatior
    - redirection URI MUST be registered

::

     +----------+
     | Resource |
     |  Owner   |
     |          |
     +----------+
          ^
          |
         (B)
     +----|-----+          Client Identifier     +---------------+
     |         -+----(A)-- & Redirection URI --->|               |
     |  User-   |                                | Authorization |
     |  Agent  -|----(B)-- User authenticates -->|     Server    |
     |          |                                |               |
     |          |<---(C)--- Redirection URI ----<|               |
     |          |          with Access Token     +---------------+
     |          |            in Fragment
     |          |                                +---------------+
     |          |----(D)--- Redirection URI ---->|   Web-Hosted  |
     |          |          without Fragment      |     Client    |
     |          |                                |    Resource   |
     |     (F)  |<---(E)------- Script ---------<|               |
     |          |                                +---------------+
     +-|--------+
       |    |
      (A)  (G) Access Token
       |    |
       ^    v
     +---------+
     |         |
     |  Client |
     |         |
     +---------+

::

    Note: The lines illustrating steps (A) and (B) are broken into two
    parts as they pass through the user-agent.

                       Figure 4: Implicit Grant Flow



The flow illustrated in Figure 4 includes the following steps:

   (A)  The client initiates the flow by directing the resource owner's
        user-agent to the authorization endpoint.  

        The client includes its client identifier, 
        requested scope, local state, and a redirection URI 
        to which the authorization server will send the
        user-agent back once access is granted (or denied).

   (B)  The authorization server authenticates the resource owner 
        (via the user-agent) and establishes whether the resource owner
        grants or denies the client's access request.

   (C)  Assuming the resource owner grants access, 
        the authorization server redirects the user-agent back to the client 
        using the redirection URI provided earlier.  
        The redirection URI includes the access token in the :term:`URI fragment`.

   (D)  The user-agent follows the redirection instructions by making a
        request to the web-hosted client resource (which does not
        include the fragment per [RFC2616]).  The user-agent retains the
        fragment information locally.

   (E)  The web-hosted client resource returns a web page (typically an
        HTML document with an embedded script) capable of accessing the
        full redirection URI including the fragment retained by the
        user-agent, and extracting the access token (and other
        parameters) contained in the fragment.

   (F)  The user-agent executes the script provided by the web-hosted
        client resource locally, which extracts the access token.

   (G)  The user-agent passes the access token to the client.

See :ref:`Sections 1.3.2 <oauth.1.3.2>` and :ref:`9 <oauth.9>` for background 
on using the implicit grant.
See :ref:`Sections 10.3 <oauth.10.3>` and :ref:`10.16 <oauth.10.16>` 
for important security considerations when using the implicit grant.

( http://tools.ietf.org/html/rfc6749.html#section-4.2 )
