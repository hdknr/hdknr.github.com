1.2.  Protocol Flow
---------------------------------------------

.. _oauth_figure_1:

Figure 1: Abstract Protocol Flow
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

     +--------+                               +---------------+
     |        |--(A)- Authorization Request ->|   Resource    |
     |        |                               |     Owner     |
     |        |<-(B)-- Authorization Grant ---|               |
     |        |                               +---------------+
     |        |
     |        |                               +---------------+
     |        |--(C)-- Authorization Grant -->| Authorization |
     | Client |                               |     Server    |
     |        |<-(D)----- Access Token -------|               |
     |        |                               +---------------+
     |        |
     |        |                               +---------------+
     |        |--(E)----- Access Token ------>|    Resource   |
     |        |                               |     Server    |
     |        |<-(F)--- Protected Resource ---|               |
     +--------+                               +---------------+



The abstract flow illustrated in Figure 1 describes the interaction
between the four :ref:`roles <oauth_1_1>` and includes the following steps:

   (A)  The :term:`client` requests authorization from the :term:`resource owner`.  
        The :term:`authorization request` can be made directly to the :term:`resource owner`
        (as shown), or preferably indirectly via the :term:`authorization server` as an intermediary.

   (B)  The :term:`client` receives an :term:`authorization grant` which is a credential
        representing the :term:`resource owner`'s authorization, expressed using
        one of four :term:`grant types` defined in this specification or using
        an extension :term:`grant type`.  The :term:`authorization grant type` depends
        on the method used by the client to request authorization and
        the types supported by the :term:`authorization server`.

   (C)  The :term:`client` requests an :term:`access token` by authenticating with the
        :term:`authorization server` and presenting the :term:`authorization grant`.

   (D)  The :term:`authorization server` authenticates the :term:`client` and validates
        the :term:`authorization grant`, and if valid issues an :term:`access token`.

   (E)  The :term:`client` requests the :term:`protected resource` from the :term:`resource server`
        and authenticates by presenting the :term:`access token`.

   (F)  The :term:`resource server` validates the :term:`access token`, and if valid,
        serves the request.

(v.22)
