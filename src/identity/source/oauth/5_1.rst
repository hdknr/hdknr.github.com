5.1.  Successful Response
----------------------------------------

The :term:`authorization server` issues an :term:`access token` 
and optional :term:`refresh token`, 
and constructs the response by adding the following parameters
to the entity body of the HTTP response with a 200 (OK) status code:


.. glossary::

   access_token
        REQUIRED.  
        The :term:`access token` issued by the :term:`authorization server`.

   token_type
        REQUIRED.  
        The type of the token issued as described in :ref:`Section 7.1 <oauth_7_1>`.  
        Value is **case insensitive**.

   expires_in
        RECOMMENDED.  

        The lifetime in **seconds** of the access token.  

        For example, 
        the value "3600" denotes that 
        the access token will expire in **one hour** 
        from the time the response was generated.

        If omitted, 
        the authorization server SHOULD provide 
        the expiration time via other means or document the default value.

   refresh_token
        OPTIONAL.  
        The :term:`refresh token` which can be used to obtain new access tokens 
        using the same authorization grant as described in :ref:`Section 6 <oauth_6>`.

   scope
        OPTIONAL.  
        The scope of the access token as described by :ref:`Section 3.3 <oauth_3_3>`.

The parameters are included in the entity body of the HTTP response 
using the "application/json" media type as defined by [RFC4627].  

The parameters are serialized into a JSON structure by adding each parameter 
at the highest structure level.  
Parameter names and string values are included as JSON strings.  
Numerical values are included as JSON numbers.  
The order of parameters does not matter and can vary.

The :term:`authorization server` MUST include 
the HTTP ":term:`Cache-Control`" response header field [:term:`RFC2616`] 
with a value of "**no-store**" 
in any response containing tokens, credentials, 
or other sensitive information, 
as well as the ":term:`Pragma`" response header field [:term:`RFC2616`] 
with a value of "**no-cache**".

For example: ::

     HTTP/1.1 200 OK
     Content-Type: application/json;charset=UTF-8
     Cache-Control: no-store
     Pragma: no-cache

     {
       "access_token":"2YotnFZFEjr1zCsicMWpAA",
       "token_type":"example",
       "expires_in":3600,
       "refresh_token":"tGzv3JOkF0XG5Qx2TlKWIA",
       "example_parameter":"example_value"
     }


The client **MUST** ignore unrecognized response parameters in the response.
The sizes of tokens and other values received from the authorization server are left undefined.  
The client should avoid making assumptions about value sizes.  
The authorization server should document the size of any value it issues.


(v.30, http://tools.ietf.org/html/draft-ietf-oauth-v2-30#section-5.1 )
