seqdiag {
  default_fontsize = 16;

  User  ->   Host [ label="start to protect \nresources at Host" ] ;

  === if registration ===
  Host  =>   AM   [ label="dynamic registration", return="host credential"      ] ; 
  === endif ===

  User  <--   Host [ label="OAuth redirect" ] ;

  User  =>   AM   [ label="authenticate\n/grant issue HAT", return="code"       ] ; 

  User  ->   Host [ label="OAuth response code" ] ;

  Host  =>   AM   [ label="host\n access token\nendoint(code)", return="HAT"         ] ; 
  User  <-- Host  [ label="ready to protect" ] ;
 
  === for policy in user policies: ===
  User  ->   Host [ label="edit policies" ] ;
  Host  =>   AM   [ label="protection API(HAT)" ] ; 
  User <--   Host ;
  === endfor ===

  User  ->   Requester [ label="start to access resource" ] ;
  === if registration ===
  Requester =>   AM   [ label="dynamic registration", return="requester credential"      ] ; 
  === endif ===
  User  <--   Requester [ label="OAuth redirect" ] ; 

  User  =>   AM   [ label="authenticate\n/Please issue a grant\non RAT for Host resource", return="Authetication\nprocess"       ] ; 
  User  =>   AM   [ label="authenticate&\ngrants", return="code"       ] ; 
  
  User  ->   Requester [ label="OAuth response code" ] ;


  Requester  =>   AM   [ label="requester\n access token\n endoint(code)", return="RAT"         ] ; 

  Requester  ->  Host  [ label="resource endpoint(RAT)"             ] ;

  === if no permisson ===
  Host =>  AM          [ label="token status(HAT)",return="no permisson"      ] ;
  Host =>  AM          [ label="register permission(HAT)",return="ticket"      ] ;
  Requester   <--  Host  [ label="403:ticket"                            ] ;
  Requester   => AM    [ label="permisson endpoint(RAT,ticket,)",return="updated token" ];
  Requester  ->  Host  [ label="resource endpoint(RAT) again" ] ;
  === endif ====

  Host =>  AM          [ label="token status(HAT)",return="good token\nwith enough permission"      ] ;
  Requester <-- Host     [ label="resource" ] ;

  User  <--  Requester  [ label="some experience"                   ];
}
