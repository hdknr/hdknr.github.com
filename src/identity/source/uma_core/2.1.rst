:orphan:

2.1. Resource Server Obtains PAT
----------------------------------------


In this step, 
the resource server acquires a PAT from the authorization server.  

The token represents the approval of the
resource owner for this resource server to trust this authorization
server for protecting resources belonging to this resource owner.  It
is OPTIONAL for the resource owner to introduce the resource server
to the authorization server dynamically through the process defined
in :term:`[OAuth-resource-reg]`); 
alternatively, 
they MAY use a static process that may or may not directly 
involve the resource owner at introduction time.

The resource server MUST use OAuth 2.0 [OAuth2] to obtain the PAT.

Here the resource server acts in the role of an OAuth client
requesting the
"http://docs.kantarainitiative.org/uma/scopes/prot.json" scope, which
authorizes it to use the authorization server's resource set
registration endpoint (as defined in :term:`[OAuth-resource-reg]`) 
as well as additional protection API endpoints.  

Once the resource server has obtained its PAT, 
it presents it to the authorization server at
various protection API endpoints.


(NOTE: The "http://docs.kantarainitiative.org/uma/scopes/prot.json"
scope keyword is a URI that resolves to a JSON-encoded scope
description, in the fashion of UMA scope types.  This scope
description is non-normative.)

The authorization server MAY support the use of any OAuth grant type for PAT issuance, 
but MUST support the authorization_code grant type,
and SHOULD support the SAML bearer token grant type [OAuth-SAML]
(urn:ietf:params:oauth:grant-type:saml2-bearer) if it anticipates
working with resource servers that are operating in environments
where the use of SAML is prevalent.  The authorization server MUST
indicate all grant types it supports for PAT issuance in its
configuration data.

(draft 06, http://tools.ietf.org/html/draft-hardjono-oauth-umacore-06#section-2.1 )
