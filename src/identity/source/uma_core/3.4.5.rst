3.4.5.  Requester Asks for Authorization to Add Permission
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Once in possession of an AAT for this AM, 
an RPT that applies to this :term:`requesting party` for this :term:`host` and this AM, 
and a :term:`permission ticket`,
the :term:`requester` asks the AM to give it a permission for the sought-for access.  
The requester performs a POST on the :term:`permission request endpoint` at the AM, 
supplying the items below.  
In doing so 
the requester MUST provide its own AAT 
in order to gain access to the :term:`permission request endpoint`.

-  The permission ticket it received from the host

-  Its RPT for this host

-  Its own AAT in the header

Example of a request message containing a permission ticket and RPT:

::

   POST /token_status HTTP/1.1
   Host: am.example.com
   Authorization: Bearer jwfLG53^sad$#f
   Content-Type: application/json
   ...

   {
    "rpt": "sbjsbhs(/SSJHBSUSSJHVhjsgvhsgvshgsv",
    "ticket": "016f84e8-f9b9-11e0-bd6f-0021cc6004de"
   }

In this interaction, the requester uses the AM's permission request
endpoint.  The AM uses the ticket to look up the previously
registered permission, maps the requested permission to operative
user policies, undergoes any authorization flows required (see
Section 3.5), and ultimately responds to the request positively or
negatively.

If the request fails due to an invalid, missing, or expired AAT (or
RPT) or requires higher privileges at this endpoint than provided by
the AAT, the AM responds with an OAuth error (see Section 4.1).

For example:

::

   HTTP/1.1 401 Unauthorized
   WWW-Authenticate: Bearer realm="example",
     error="invalid_token",
     error_description="The access token expired"

If the AM does not add the requested permission, it responds using
the appropriate HTTP status code (typically 400 or 403), and includes
one of the following error codes in the response (see Section 4.2):

.. glossary::

   invalid_requester_ticket  

      The provided ticket was not found at the AM.  
      The AM SHOULD respond with the HTTP 400 (Bad Request) status code.

   expired_requester_ticket  

      The provided ticket has expired.  
      The AM SHOULD respond with the HTTP 400 (Bad Request) status code.

   not_authorized_permission  
    
      The requester is definitively not
      authorized for this permission according to user policy.  
      The AM SHOULD respond with the HTTP 403 (Forbidden) status code.


   need_claims  

      The AM is unable to determine whether the requester is
      authorized for this permission without gathering claims from the
      requesting party.  The AM SHOULD respond with the HTTP 403
      (Forbidden) status code.  The requester is therefore not
      authorized, but has the opportunity to engage the requesting party
      in a claims-gathering flow with the AM (see Section 3.5) to
      potentially become authorized.

For example:

::

   HTTP/1.1 400 Bad Request
   Content-Type: application/uma-status+json
   Cache-Control: no-store
   ...

   {
     "status": "error",
     "error": "expired_requester_ticket"
   }


(draft 05)
