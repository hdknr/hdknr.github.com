:orphan:

3. Getting Authorization and Accessing a Resource
===============================================================

Phase 2 of UMA is getting authorization, 
and phase 3 is accessing a resource.  

In these phases, 
an authorization server orchestrates and controls clients' access 
(on their requesting parties' behalf) 
to a resource owner's protected resources at a resource server, 
under conditions dictated by that resource owner.

Phase 3 is merely the successful completion of a client's access attempt 
that initially involved several embedded interactions among the :term:`client`, 
:term:`requesting party`, :term:`authorization server`, 
and :term:`resource server` in phase 2.  

Phase 2 always begins with the :term:`client` attempting access 
at a :term:`protected resource endpoint` at the resource server.  
How the client came to learn about this endpoint is out of scope for this specification.  
The resource owner might, for example, 
have advertised its availability publicly on a blog or other website,
listed it in a discovery service, or emailed a link to a particular
intended requesting party.

The resource server responds to the client's access request in one of
several ways depending on the circumstances of the request, 
either immediately or having first performed one or more embedded
interactions with the authorization server.  
Depending on the nature of the resource server's response to an failed access attempt, 
the client and its operator engage in embedded interactions 
with the authorization server before re-attempting access.

The interactions are as follows.  

Each interaction MAY be the last, 
if the client chooses not to continue pursuing the access attempt or
the resource server chooses not to continue facilitating it.

   1.  The client attempts access at a particular protected resource at
       a resource server (see :ref:`Section 3.1 <uma_core.3.1>`).

       A.  If the access attempt is unaccompanied by an RPT, 
           the resource server responds immediately with an HTTP 401
           (Unauthorized) response and instructions on where to go to
           obtain one (see :ref:`Section 3.4.2 <uma_core.3.4.2>`).
          
           (RPTなし)

       B.  If the access attempt was accompanied by an RPT, 
           the resource server checks the RPT's status (see :ref:`Section 3.3 <uma_core.3.3>`).

           1.  If the RPT is invalid 
               (for example, it is not applicable
               to this resource server), the resource server responds to
               the client with an HTTP 401 (Unauthorized) response and
               instructions on where to go to obtain a token 
               (see :ref:`Section 3.4.2 <uma_core.3.4.2>`).

               (不正なRPT)

           2.  If the RPT is valid but has insufficient permission, 
               the resource server registers a suitable permission request
               on the client's behalf at the authorization server 
               (see :ref:`Section 3.2 <uma_core.3.2>`), 
               and then responds to the client with an
               HTTP 403 (Forbidden) response and instructions on where
               to go to ask for authorization (see :ref:`Section 3.1.2 <uma_core.3.1.2>`).

               (パーミッションが無いRPT)

           3.  If the RPT is valid, and if the :term:`authorization data`
               associated with the token is consistent with allowing access, 
               the resource server responds to the client's
               access attempt with an HTTP 200 (OK) response and a
               representation of the resource (see :ref:`Section 3.1.3 <uma_core.3.1.3>`).

               (正常返答)

   2.  If the client (possessing no RPT or an invalid RPT) received a
       401 response and an RPT endpoint, it then requests an RPT from
       that endpoint (see :ref:`Section 3.4.2 <uma_core.3.4.2>`).

       ( 401の場合,RPT取り直し )

   3.  If the client (posessing a valid RPT) received a 403 response and
       a :term:`permission ticket`, 
       it then asks the authorization server for authorization data 
       that matches the ticket (:ref:`Section 3.4.3 <uma_core.3.4.3>`).   

       (パーミッション要求 )

       If the authorization server needs requesting party claims 
       in order to assess this client's authorization, 
       it engages in a claims-gathering flow with the requesting party 
       (see :ref:`Section 3.5 <uma_core.3.5>`).

       (クレーム要求)

       A.  If the client does not already have an AAT at the appropriate
           authorization server to be able to use its permission request
           endpoint, it first obtains one (see :ref:`Section 3.4.1 <uma_core.3.4.1>`).

           (AATがない)

The interactions are described in detail in the following sections.

(draft 06 , http://tools.ietf.org/html/draft-hardjono-oauth-umacore-06#section-3 )
