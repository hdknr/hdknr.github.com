:orphan:

3. Getting Authorization and Accessing a Resource
===============================================================

An authorization server orchestrates and controls clients' access (on
their requesting parties' behalf) to a resource owner's protected
resources at a resource server, under conditions dictated by that
resource owner.


The process of getting authorization , 
and accessing a resource always begins with the client attempting access 
at a :term:`protected resource` endpoint at the :term:`resource server`.  

How the client came to learn about this endpoint is out of scope for this specification.  
The :term:`resource owner` might, for example, 
have advertised its availability publicly on a blog or other website, 
listed it in a discovery service, 
or emailed a link to a particular intended requesting party.

    .. note::
        - ディスカバリをどうやるか？
        - 「リソース名」でリソースエンドポイントをディスカバる？


The resource server responds to the client's access request with
whatever its application-specific interface defines as a success
response, either immediately or having first performed one or more
embedded interactions with the authorization server.  Depending on
the nature of the resource server's response to an failed access
attempt, the client and its operator requesting party engage in embedded
interactions with the authorization server before re-attempting
access.


The interactions are as follows.  

Each interaction MAY be the last, 
if the client chooses not to continue pursuing the access attempt or
the resource server chooses not to continue facilitating it.

    The client attempts to access a protected resource.

      -  If the access attempt is unaccompanied by an RPT, 
         the :term:`resource server` responds immediately 
         with an **HTTP 401 (Unauthorized)** response 
         and instructions on where to go to obtain one.

         .. note::
                - リソースなし 401

      -  If the access attempt was accompanied by an :term:`RPT`, 
         the resource server checks the RPT's **status**.

         -  If the RPT is **invalid**, 
            the resource server responds with an **HTTP 401 (Unauthorized)** response 
            and instructions on where to go to obtain a token.
            
            .. note::
                - 不正なRPT 401

         -  If the RPT is valid but has **insufficient** authorization data,
            the resource server registers a suitable requested permission 
            on the client's behalf at the authorization server, 
            and then responds to the client with an **HTTP 403 (Forbidden)** response 
            and instructions on where to go to ask for authorization.
    
            .. note::
                - パーミッションがない 403

         -  If the RPT is **valid**, 
            and if the authorization data associated 
            with the token is sufficient for allowing access,
            the resource server responds with an **HTTP 2xx (Success)**
            response and a representation of the resource.

            .. note::
                - リソース返答 200
    


   -  If the client (possessing no RPT or an invalid RPT) received a 401 response 
      and an authorization server's location, 
      after looking up its configuration data and endpoints as necessary, 
      it requests an RPT from the RPT endpoint.

      .. note::
            - 401 をもらったらクライアントは RPT をAuthz Serverに要求

   -  If the client (posessing a valid RPT) received a 403 response and
      a permission ticket, 
      it asks the authorization server for authorization data that matches the ticket.  
      If the authorization server needs requesting party claims in order to assess this
      client's authorization, 
      it engages in a claims-gathering flow with the requesting party.

      .. note::
            - 403 をもらったらクライアントはAuthz ServerにRPTへのパーミッションを要求

      -  If the client does not already have an AAT at the appropriate
         authorization server to be able to use its authorization API,
         it first obtains one.

         .. note::
            - AATがなかったら、クライアントはAATの取得から始める


The interactions are described in detail in the following sections.

(draft 07 , http://tools.ietf.org/html/draft-hardjono-oauth-umacore-07#section-3 )
