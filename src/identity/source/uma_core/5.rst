5.  Profiles for API Extensibility
===============================================================

In some circumstances, it is desirable to couple UMA roles tightly.
For example, an authorization server application might also need to
act as a client application in order to retrieve protected resources
so that it can present to resource owners a dashboard-like user
interface that accurately guides the setting of policy; it might need
to access itself-as-authorization server for that purpose.  For
another example, the same organization might operate both an
authorization server and a resource server that communicate only with
each other behind a firewall, and it might seek more efficient
communication methods between them.

This section defines profiles that allow inter-role communications
channels and methods to vary in these specific circumstances.  This
specification still REQUIRES authorization servers to issue PATs,
AATs, and RPTs and associate authorization data with RPTs, and
REQUIRES resource servers to give clients access only when RPTs are
associated with sufficient authorization data.  This is because,
although tokens might not always appear on the wire in the normal
fashion in these cases, they represent binding obligations that might
involve additional parties unable to take part in these optimization
opportunities (see [UMA-obligations]).

In circumstances where alternate communications channels are being
used between independently implemented system entities, it is
RECOMMENDED, for reasons of implementation interoperability, to
define concrete extension profiles that build on these extensibility
profiles (see Section 6.1).

An authorization server using any of the opportunities afforded by
the protection and/or authorization API extensibility profile MUST
declare use of each profile by supplying the relevant
"uma_profiles_supported" values in its configuration data (see
Section 1.4).

(draft099

