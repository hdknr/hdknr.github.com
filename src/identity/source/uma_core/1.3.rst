1.3.  Achieving Distributed Protection Through APIs and Tokens
------------------------------------------------------------------------

UMA's :term:`authorization server`, :term:`resource server`, 
and :term:`client` roles are designed to work 
in an interoperable fashion 
when each is operated by an entirely separate party 
(for example, different organizations).

For this reason, 
UMA specifies communications channels that the
authorization server MUST implement as HTTP-based APIs 
that MUST use TLS and OAuth protection, 
and that the resource server MUST implement as an HTTP-based interface.  

UMA's use of TLS transport-layer security is governed 
by :ref:`Section 1.6 <oauth.1.6>` of :term:`[OAuth2]`, 
which discusses deployment 
and adoption characteristics of different TLS versions.

Three different types of access tokens are issued 
and used for a variety of purposes as part of these inter-role interactions.

It is also REQUIRED, in turn, for resource servers and clients 
on the requesting side of UMA interactions 
to use these channels, 
unless a profile is being used that enables API extensibility.  

Profiles that enable such alternatives are described in :ref:`Section 5 <uma_core.5>`.


(draft09)
