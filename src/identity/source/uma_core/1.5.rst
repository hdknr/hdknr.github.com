1.5. Authorization Server Configuration Data
------------------------------------------------------------

The authorization server MUST provide configuration data to other
entities it interacts with in aJSON [RFC4627] document that resides
in an /uma-configuration directory at at its hostmeta [RFC6415]
location.  

The configuration data documents major conformance options
supported by the authorization server 
(described further in :ref:`Section 8 <uma_core.8>`) 
and protection and authorization API endpoints (as described in :ref:`Section 1.3 <uma_core.1.3>`).  
(At the appropriate time, this section will instead profile 
whatever self-describing metadata specification OAuth adopts, 
for example, :term:`[OAuth-linktypes]` or :term:`[OAuth-meta]`.)

The configuration data has the following properties.  
All endpoint URIs supplied SHOULD require the use of 
a transport-layer security mechanism such as TLS.

.. glossary::

   version
         REQUIRED.  The version of the UMA core protocol to which this
         authorization server conforms.  The value MUST be the string
         "1.0".

   issuer
         REQUIRED.  A URI indicating the party operating the
         authorization server.

   dynamic_client_endpoint
         OPTIONAL.  The endpoint to use for performing dynamic client
         registration through . [DynClientReg]

   oauth_token_profiles_supported
         REQUIRED.  PAT and AAT profiles produced by this authorization
         server.  The property value is an array of string values.
         Currently the only string value for this property defined by
         this specification is "bearer", corresponding to the OAuth
         bearer token profile [OAuth-bearer].  The authorization server
         is REQUIRED to support this profile, and to supply this string
         value explicitly.  The authorization server MAY declare its
         support for additional access token profiles by providing a
         unique absolute URI in a string value in the array for each
         one.

   uma_token_profiles_supported
         REQUIRED.  RPT types produced by this authorization server.
         The property value is an array of string values.  Currently the
         only string value for this property defined by this
         specification is "bearer", whose associations the resource
         server MUST determine through a token introspection interaction
         with the authorization server (see Section 3.3 for the
         definition of this profile).  The authorization server is
         REQUIRED to support the UMA bearer token profile, and to supply
         this string value explicitly.  The authorization server MAY
         declare its support for RPTs using additional RPT profiles by
         providing a unique absolute URI in a string value in the array
         for each one.

   oauth_grant_types_supported
         REQUIRED.  OAuth grant types supported by this authorization
         server in issuing PATs and AATs.  The property value is an
         array of string values.  Each string value MUST be one of the
         grant_type values defined in [OAuth2], or alternatively an
         extension grant type indicated by a unique absolute URI.

   claim_profiles_supported
         OPTIONAL.  Claim formats and associated sub-protocols for
         gathering claims from requesting parties, as supported by this
         authorization server.  The property value is an array of string
         values.  Currently the only string value for this property
         defined by this specification is "openid", for which details
         are supplied in Section 3.5.1.1.  The authorization server MAY
         declare its support for additional claim profiles by assigning
         a unique absolute URI in a string value in the array for each
         one.

   token_endpoint
         REQUIRED.  The endpoint URI at which the resource server or
         client asks the authorization server for a PAT or AAT,
         respectively.  A requested scope of
         "http://docs.kantarainitiative.org/uma/scopes/prot.json"
         results in a PAT.  A requested scope of
         "http://docs.kantarainitiative.org/uma/scopes/authorization"
         results in an AAT.  Available HTTP methods are as defined by
         [OAuth2] for a token endpoint.

   user_endpoint
         REQUIRED.  The endpoint URI at which the resource server
         gathers the consent of the end-user resource owner or the
         client gathers the consent of the end-user requesting party, if
         the "authorization_code" grant type is used.  Available HTTP
         methods are as defined by [OAuth2] for an end-user
         authorization endpoint.

   permission_registration_endpoint
         REQUIRED.  The endpoint URI at which the resource server
         registers permissions with the authorization server for which a
         client will be seeking authorization on its requesting party's
         behalf (see Section 3.2).  A PAT MUST accompany requests to
         this protected endpoint.

   rpt_endpoint
         REQUIRED.  The endpoint URI at which the client ask the
         authorization server for an RPT.  An AAT token MUST accompany
         requests to this protected endpoint.

   rpt_status_endpoint
         REQUIRED.  The endpoint URI at which the resource server
         introspects an RPT presented to it by a client (see
         Section 3.3).  A PAT MUST accompany requests to this protected
         endpoint.

   permission_request_endpoint
         REQUIRED.  The endpoint URI at which the client asks, on its
         requesting party's behalf, to have authorization data
         associated with its RPT.  An AAT MUST accompany requests to
         this protected endpoint.

Example of authorization server configuration data that resides at
https://example.com/.well-known/uma-configuration (note the use of
https: for endpoints throughout):

.. code-block:: javascript

    {
    "version":"1.0",
    "issuer":"https://example.com",
    "dynamic_client_endpoint":"https://as.example.com/dyn_client_reg_uri",
    "oauth_token_profiles_supported":[
      "bearer"
    ],
    "uma_token_profiles_supported":[
      "bearer"
    ],
    "oauth_grant_types_supported":[
      "authorization_code"
    ],
    "claim_profiles_supported":[
      "openid"
    ],
    "token_endpoint":"https://as.example.com/token_uri",
    "user_endpoint":"https://as.example.com/user_uri",
    "resource_set_registration_endpoint":"https://as.example.com/rs/rsrc_uri",
    "rpt_status_endpoint":"https://as.example.com/rs/status_uri",
    "permission_registration_endpoint":"https://as.example.com/rs/perm_uri",
    "rpt_endpoint":"https://as.example.com/client/rpt_uri",
    "permission_request_endpoint":"https://as.example.com/client/perm_uri"
    }

Authorization server configuration data MAY contain extension
properties that are not defined in this specification.  Extension
names that are unprotected from collisions are outside the scope of
the current specification.

(draft 06, http://tools.ietf.org/html/draft-hardjono-oauth-umacore-06#section-1.5 )

