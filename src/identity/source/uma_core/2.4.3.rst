2.4.3. Resource Set Registration API
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The host uses the RESTful API at the AM's resource set registration
endpoint to create, read, update, and delete resource set
descriptions, along with listing groups of such descriptions.  The
host MUST use its valid PAT obtained previously to gain access to this endpoint.  
The resource set registration API is a subset of the protection API.

The host is free to use its own methods of identifying and describing resource sets.  
The AM MUST treat them as opaque for the purpose of authorizing access, 
other than associating them with the authorizing user 
(as represented by the PAT used to access the API).  
On successfully registering a resource set, the host MUST use UMA
mechanisms to limit access to any resources corresponding to this
resource set, relying on the AM to supply currently valid permissions
for authorized access.  
The host MUST outsource protection to the AM according to the currently registered state of a resource set.  This
requirement holds true so long as the host has one or more registsred
resource sets.

(Note carefully the similar but distinct senses in which the word
"resource" is used in this section.  UMA resource set descriptions
are themselves managed as web resources at the AM through this API.)

The AM MUST present an API for registering resource set descriptions
at a set of URIs with the structure ":term:`{rsreguri}`/resource_set/:term:`{rsid}`",
where the PAT provides sufficient context to distinguish between
identical resource set identifiers assigned by different hosts.

The components of these URIs are defined as follows:

.. glossary::

   {rsreguri}  

      The AM's resource set registration endpoint as advertised
      in its configuration data (see Section 1.5).

   {rsid}  

      An identifier for a resource set description.

Without a specific resource set identifier path component, the URI
applies to the set of resource set descriptions already registered.

Following is a summary of the five registration operations the AM is
REQUIRED to support.  Each is defined in its own section below.  All
other methods are unsupported.  This API uses ETag and If-Match to
ensure the desired resource at the AM is targeted.

   -  :ref:`Create resource set description <uma_core.create_resource_set_description>`: PUT /resource_set/{rsid}

   -  :ref:`Read resource set description <uma_core.read_resource_set_description>`: GET /resource_set/{rsid}

   -  :ref:`Update resource set description <uma_core.update_resource_set_description>`: PUT /resource_set/{rsid} with If-
      Match

   -  :ref:`Delete resource set description <uma_core.delete_resource_set_description>`: DELETE /resource_set/{rsid}

   -  :ref:`List resource set descriptions <uma_core.list_resource_set_descriptions>`: GET /resource_set/ with If-Match

If the request to the resource set registration endpoint is incorrect, 
then the AM responds with an error message (see :ref:`Section 4.2 <uma_core.4.2>`) 
by including one of the following error codes with the response:

.. glossary::

   unsupported_method_type  

      The host request used an unsupported HTTP
      method.  The AM MUST respond with the HTTP 405 (Method Not
      Allowed) status code and MUST fail to act on the request.

   not_found  

      The resource set requested from the AM cannot be found.
      The AM MUST respond with HTTP 404 (Not Found) status code.

   precondition_failed  

      The resource set that was requested to be
      deleted or updated at the AM did not match the If-Match value
      present in the request.  The AM MUST respond with HTTP 412
      (Precondition Failed) status code and MUST fail to act on the
      request.

(draft 05)
