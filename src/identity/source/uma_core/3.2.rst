3.2.  Host-AM: Register a Permission
---------------------------------------------------------------------------------------

In response to receiving an access request accompanied by an RPT that
is invalid or has insufficient permissions, the host SHOULD register
a permission with the AM that would be sufficient for the type of
access sought.  The AM returns a permission ticket for the host to
give to the requester in its response.

The permission ticket is a short-lived opaque structure whose form is
determined by the AM.  The ticket value MUST be securely random (for
example, not merely part of a predictable sequential series), to
avoid denial-of-service attacks.  Since the ticket is an opaque
structure from the point of view of the requester, the AM is free to
include information regarding expiration time within the opaque
ticket for its own consumption.  When the requester subsequently asks
the AM to add permissions to its RPT, it will submit this ticket to
the AM.

The host registers the permission using the POST method at the AM's
permission registration endpoint.  In doing so the host MUST provide
its PAT to the AM in order to get access to this endpoint.  The body
of the HTTP request message contains a JSON document providing the
requested permission.

The requested scope is an object with the name "requested_permission"
and the following properties:

.. glossary::

   resource_set_id  

      REQUIRED.  

      The identifier for a resource set, access
      to which this requester is seeking access.  The identifier MUST
      correspond to a resource set that was previously registered.

   scopes  

      REQUIRED.  

      An array referencing one or more identifiers of
      scopes to which access is needed for this resource set.  Each
      scope identifier MUST correspond to a scope that was registered by
      this host for the referenced resource set.

Example of an HTTP request that registers a permission at the AM's
permission registration endpoint:

::

   POST /host/scope_reg_uri/photoz.example.com HTTP/1.1
   Content-Type: application/uma-requested-permission+json
   Host: am.example.com

   {
     "resource_set_id": "112210f47de98100",
     "scopes": [
         "http://photoz.example.com/dev/actions/view",
         "http://photoz.example.com/dev/actions/all"
     ]
   }

If the registration request is successful, the AM responds with an
HTTP 201 (Created) status code and includes the Location header in
its response as well as the "ticket" property in the JSON-formatted
body.

For example:

::

    HTTP/1.1 201 Created
    Content-Type: application/uma-permission-ticket+json
    Location: https://am.example.com/permreg/host/photoz.example.com/5454345rdsaa4543
    ...
    
    {
    "ticket": "016f84e8-f9b9-11e0-bd6f-0021cc6004de"
    }

If the registration request is authenticated properly but fails due
to other reasons, the AM responds with an HTTP 400 (Bad Request)
status code and includes one of the following UMA error codes (see
Section 4.2):

.. glossary::

   invalid_resource_set_id  

        The provided resource set identifier was not found at the AM.

   invalid_scope  

        At least one of the scopes included in the request was
        not registered previously by this host.

(draft 05)
