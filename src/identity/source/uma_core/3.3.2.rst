.. _uma_core.bearer:

3.3.2.  RPT Profile: Bearer
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This section defines the UMA bearer token profile.  
Following is a summary:

   -  Identifying URI: http://docs.kantarainitiative.org/uma/profiles/uma-token-bearer-1.0

   -  Profile author and contact information: Thomas Hardjono (hardjono@mit.edu)

   -  Updates or obsoletes: None; this profile is new.

   -  Keyword in HTTP Authorization header: "Bearer".

   -  Syntax and semantics of token data: As defined below.  The token
      data format mainly involves time-bounded permissions.

   -  Token data association: The data associated to the on-the-wire
      token by reference and retrieved at run time by the resource
      server through profiled use of the OAuth token introspection
      endpoint [OAuth-introspection], as defined below.

   -  Token data processing: As defined in this section and throughout
      Section 3 of this specification.

   -  Grant type restrictions: None.

   -  Error states: As defined below.

   -  Security and privacy considerations: As defined in this section
      and throughout Section 3 of this specification.

   -  Binding obligations: Because this RPT profile is mandatory for
      authorization servers to implement, binding obligations related to
      the use of this token profile are documented in [UMA-obligations].


On receiving an RPT of the "Bearer" type in an authorization header
from a client making an access attempt, the resource server MUST
introspect the token by using the authorization server's token
introspection endpoint.  The PAT used by the resource server to make
the introspection request provides resource-owner context to the
authorization server.

The authorization server responds with a JSON object with the
structure dictated by :term:`[OAuth-introspection]`.  
If the valid property has a "true" value, then the JSON object MUST also contain an
extension property with the name "permissions" that contains an array
of zero or more values, each of which is an object consisting of
these properties:

.. glossary::

    resource_set_id  

       REQUIRED.  A string that uniquely identifies the
       resource set, access to which has been granted to this client on
       behalf of this requesting party.  The identifier MUST correspond
       to a resource set that was previously registered as protected.
    
    scopes  

       REQUIRED.  An array referencing one or more URIs of scopes to
       which access was granted for this resource set.  Each scope MUST
       correspond to a scope that was registered by this host for the
       referenced resource set.
    
    expires_at  
       REQUIRED.  Integer timestamp, measured in the number of
       seconds since January 1 1970 UTC, indicating when this permission
       will expire.
    
    issued_at  
       OPTIONAL.  Integer timestamp, measured in the number of
       seconds since January 1 1970 UTC, indicating when this permission
       was originally issued.

Example:

::

    HTTP/1.1 200 OK
       Content-Type: application/json
       Cache-Control: no-store
    
       {
        "valid": true,
        "expires_at": "1256953732",
        "issued_at": "1256912345",
        "permissions": [
          {
            "resource_set_id": "112210f47de98100",
            "scopes": [
              "http://photoz.example.com/dev/actions/view",
              "http://photoz.example.com/dev/actions/all"
             ],
            "expires_at" : "1256923456"
          }
        ]
       }

( draft 7, http://tools.ietf.org/html/draft-hardjono-oauth-umacore-07#section-3.3.2 ) 
