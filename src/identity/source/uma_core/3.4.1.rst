3.4.1. Client Obtains RPT
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The client might need an RPT 
if it has never before requested an RPT
for this combination of requesting party, 
resource server, and authorization server, 
or if it has lost control of a previously issued RPT 
and needs a refreshed one.  

It obtains an RPT by using the authorization API, 
performing a POST on the RPT endpoint 
and supplying its AAT in the header.  

No body is expected; 
if a body is present, the authorization server MAY ignore it.

Example of a request message containing an AAT:

::

    POST /rpt HTTP/1.1
    Host: as.example.com
    Authorization: Bearer jwfLG53^sad$#f
    ...

The authorization server responds with an HTTP 201 (Created) status
code and provides a new RPT.

For example:

::

   HTTP/1.1 201 Created
   Content-Type: application/json
   
   {
     "rpt": "sbjsbhs(/SSJHBSUSSJHVhjsgvhsgvshgsv"
   }
   
If the AAT provided in the header is the same as one provided 
for a previously issued still-valid RPT by this authorization server, 
the authorization server invalidates the old RPT and issues a new one.

On first issuance, 
the RPT is associated with no authorization data 
and thus does not convey any authorizations for access.

(draft09, http://tools.ietf.org/html/draft-hardjono-oauth-umacore-09#section-3.4.1)
