3.4.4.  Requester Obtains Requester Permission Token
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. note::
    - RPT

In this step, 
if the :term:`requester` needs an RPT that applies to this :term:`requesting party` 
for this :term:`host` and this AM, 
the :term:`requester` obtains an RPT from the AM.  

On first issuance the RPT is associated with no permissions and 
thus does not convey any authorizations for access.

Once the :term:`requester` obtains an RPT from the AM, 
it can ask the AM for authorization to have permissions associated with the RPT 
(see :ref:`Section 3.4.5 <uma_core.3.4.5>`).

The :term:`requester` performs a POST on the :term:`RPT endpoint`.  
In doing so 
the :term:`requester` MUST provide its own :term:`AAT` in the header in order to gain
access to the :term:`RPT endpoint`.

Example of a request message containing an AAT:

::

   POST /rpt HTTP/1.1
   Host: am.example.com
   Authorization: Bearer jwfLG53^sad$#f
   Content-Type: application/json
   ...

The AM responds with an HTTP 201 (Created) status code and provides a new RPT.

For example:

::

   HTTP/1.1 201 Created
   Content-Type: application/uma-rpt+json

   {
     "rpt": "sbjsbhs(/SSJHBSUSSJHVhjsgvhsgvshgsv"
   }

If the content-type of the request is not recognized by the AM, the
AM MUST produce an HTTP error.

The requester might need an RPT if it has never before requested an
RPT for this combination of requesting party, host, and AM, or if it
has lost control of a previous issued RPT and needs a refreshed one.
If the AAT provided in the header is the same as one provided for a
previously issued RPT by this AM, the AM invalidates the old RPT and
its permissions and issues a new RPT.

If the request fails due to missing or invalid parameters, or is
otherwise malformed, the AM SHOULD inform the requester of the error
by sending an HTTP error response.

If the request fails due to an invalid, missing, or expired AAT or
requires higher privileges at this endpoint than provided by the AAT,
the AM responds with an OAuth error (see Section 4.1).

For example:

::

   HTTP/1.1 401 Unauthorized
   WWW-Authenticate: Bearer realm="example",
     error="invalid_token",
     error_description="The access token expired"

(draft 05)
