3.5.1.  Claims-Gathering Flow for Requester Apps Operated by End-Users
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

A requester app, 
whether browser-based or native, is operated by a natural person 
(human end-user) in one of two typical situations:

-   The requesting party is a natural person (for example, a friend of
    the authorizing user); the requesting party may even be the
    authorizing user herself.

-   The requesting party is a legal person such as a corporation, and
    the human being operating the requester app is acting as an agent
    of that legal person (for example, a customer support specialist
    representing a credit card company).

For convenience, this specification refers to the human end-user as a
"requesting end-user" to cover both cases, which differ only at the
level of business agreements (and potentially law), rather than
technology.  The AM has a variety of options at this point for
satisfying the authorizing user's policy; this specification does not
dictate a single answer.  For example, the AM could require the
requesting end-user to register for and/or log in to a local AM
account, or to fill in a questionnaire, or to complete a purchase.
It could even require several of these operations, where the order is
significant.

An end-user-driven requester app MUST redirect the end-user to the AM
to complete the process of authorization.  The redirection MUST
include a URI query parameter with the name "ticket" whose value
conveys the permission ticket for which the need_claims error was
received; for example, "ticket=016f84e8-f9b9-11e0-bd6f-0021cc6004de".
Each claim profile MUST provide the following capabilities:


.. glossary::

   redirect URI  

      A means by which the requester MUST supply the URI to
      which the AM MUST redirect the requesting end-user at the end of
      the claims-gathering process.

   callback URI  

      A means by which the requester OPTIONALLY supplies a
      callback URI for the AM to use.

   state  

      A means by which the requester SHOULD supply an opaque value
      used to maintain state between the request and the callback;
      serves as a protection against XSRF attacks.

An AM MAY support any number of claim profiles.  One potential such
profile is defined in this specification: the "openid" claim profile,
which leverages OpenID Connect for gathering generally useful user
claims (see Section 3.5.1.1).


(draft 05)
