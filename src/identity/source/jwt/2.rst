2.  Terminology
=====================

.. glossary::


   JSON Web Token (JWT)  
   JSON Web Token
   JWT
      A string representing a set of claims as a JSON
      object that is digitally signed or MACed and/or encrypted.  The
      string consists of multiple parts, the first being the Encoded JWT
      Header, plus additional parts depending upon the contents of the
      header, with the parts being separated by period ('.') characters,
      and each part containing base64url encoded content.

   Base64url Encoding  
      The URL- and filename-safe Base64 encoding
      described in RFC 4648 [RFC4648], Section 5, with the (non URL-
      safe) '=' padding characters omitted, as permitted by Section 3.2.
      (See Appendix C of [JWS] for notes on implementing base64url
      encoding without padding.)

   JWT Header  
      A string representing a JSON object that describes the
      cryptographic operations applied to the JWT.  When the JWT is
      digitally signed or MACed, the JWT Header is a JWS Header.  When
      the JWT is encrypted, the JWT Header is a JWE Header.

   Header Parameter Name  
      The name of a member of the JSON object
      representing a JWT Header.

   Header Parameter Value  
      The value of a member of the JSON object
      representing a JWT Header.

   JWT Claims Set  
      A string representing a JSON object that contains the
      claims conveyed by the JWT.  When the JWT is digitally signed or
      MACed, the bytes of the UTF-8 representation of the JWT Claims Set
      are base64url encoded to create the Encoded JWS Payload.  When the
      JWT is encrypted, the bytes of the UTF-8 representation of the JWT
      Claims Set are used as the JWE Plaintext.

   Claim Name  
      The name of a member of the JSON object representing a JWT Claims Set.

   Claim Value  
      The value of a member of the JSON object representing a JWT Claims Set.

   Encoded JWT Header  
      Base64url encoding of the bytes of the UTF-8
      [RFC3629] representation of the JWT Header.

   Collision Resistant Namespace  
      A namespace that allows names to be
      allocated in a manner such that they are highly unlikely to
      collide with other names.  For instance, collision resistance can
      be achieved through administrative delegation of portions of the
      namespace or through use of collision-resistant name allocation
      functions.  Examples of Collision Resistant Namespaces include:
      Domain Names, Object Identifiers (OIDs) as defined in the ITU-T
      X.660 and X.670 Recommendation series, and Universally Unique
      IDentifiers (UUIDs) [RFC4122].  When using an administratively
      delegated namespace, the definer of a name needs to take
      reasonable precautions to ensure they are in control of the
      portion of the namespace they use to define the name.

   StringOrURI  
      A JSON string value, with the additional requirement
      that while arbitrary string values MAY be used, any value
      containing a ":" character MUST be a URI [RFC3986].  StringOrURI
      values are compared as case-sensitive strings with no
      transformations or canonicalizations applied.

   IntDate  
      A JSON numeric value representing the number of seconds from
      1970-01-01T0:0:0Z UTC until the specified UTC date/time.  See RFC
      3339 [RFC3339] for details regarding date/times in general and UTC
      in particular.


(draft 05)
