3.1.  Example JWT
------------------------

The following example :term:`JWT Header` declares that the encoded object is a JSON Web Token (JWT) 
and the JWT is signed using the HMAC SHA-256 algorithm:

::

    {"typ":"JWT",
     "alg":"HS256"}

Base64url encoding the bytes of the UTF-8 representation of the :term:`JWT Header` yields this :term:`Encoded JWS Header` value, 
which is used as the :term:`Encoded JWT Header`:

::

    eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9

The following is an example of a :term:`JWT Claims Object`:
    
:: 

    {"iss":"joe",
     "exp":1300819380,
     "http://example.com/is_root":true}

Base64url encoding the bytes of the UTF-8 representation of the :term:`JSON Claims Object` yields this :term:`Encoded JWS Payload`, 
which is used as the JWT Second Part:

::

    eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ

Signing the :term:`Encoded JWS Header` and :term:`Encoded JWS Payload` with the HMAC SHA-256 algorithm 
and base64url encoding the signature in the manner specified in [JWS], 
yields this :term:`Encoded JWS Signature`, which is used as the :term:`JWT Third Part`:

:: 

    dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk

Concatenating these parts in the order **Header.Second.Third** with **period characters** 
between the parts yields this complete JWT (with line breaks for display purposes only):

:: 

    eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
    .
    eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ
    .
    dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk

This computation is illustrated in more detail in [:term:`JWS`], Appendix A.1.

(v.06)
