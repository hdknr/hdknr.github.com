2.1.  Client Registration Request
---------------------------------------------------------

Clients MUST send requests encoded as a POST with the following parameters added to the HTTP request entity-body using "application/x-www-form-urlencoded" format:

.. glossary::

    type
        REQUIRED. 
        Values 
        :term:`client_associate` (New Registrations), 
        :term:`client_update` (Updating parameters for an existing client_id).

    client_id
        OPTIONAL. 
        The registered parameters for this client_id are updated. Used with :term:`client_update`.

    client_secret
        OPTIONAL. 
        The client_secret used to authenticate requests that have client_update as the value of the type parameter.

    access_token
        OPTIONAL. 
        An Access Token obtained out of band to authorize the registrant. 
        This parameter is only used if the Client is provided the Access Token out of band. 
        This parameter MUST NOT be sent if the Access Token is sent 
        in the HTTP Authorization header as described in Section 7.1 of OAuth 2.0 [:term:`OAuth2.0`]. 
        Access Tokens sent in the authorization header must be Bearer Tokens [:term:`OAuth.Bearer`].

    contacts
        OPTIONAL. 
        Space delimited list of email addresses for people allowed to administer the information for this Client. 
        This is used by some providers to enable a web UI to modify the Client information.

    application_type
        OPTIONAL. 
        native or web.

    application_name
        OPTIONAL. 
        Name of the Client to be presented to the user.

    logo_url
        OPTIONAL. 
        The URL of a logo image for the Client where it can be retrieved.

    redirect_uris
        RECOMMENDED for Clients using the :term:`code flow` with a query parameter encoded response. 
        REQUIRED for Clients requesting :term:`implicit flow` fragment encoded responses as defined in OAuth 2.0 [:term:`OAuth2.0`]. 
        A space-delimited list of redirect URIs. 
        One of the URL MUST match the Scheme, Host, and Path segments of the redirect_uri in the authorization request. [#]_

    token_endpoint_auth_type
        OPTIONAL. 
        The requested authentication type for the Token Endpoint. 
        The options are :term:`client_secret_post`, :term:`client_secret_basic`, :term:`client_secret_jwt`, and :term:`private_key_jwt`, 
        as described in Section 2.2.1 of OpenID Connect Messages 1.0 [:term:`OpenID.Messages`]. 
        Other Authentication methods may be defined by extension.  [#]_
        If unspecified or omitted, 
        the default is :term:`client_secret_basic` HTTP Basic Authentication Scheme as specified in section 2.3.1 of OAuth 2.0 [:term:`OAuth2.0`].

    policy_url
        OPTIONAL. 
        A URL location that the Relying Party Client provides to the End-User to read about the how the profile data will be used. 
        The OpenID Provider SHOULD display this URL to the End-User if it is given.

    jwk_url
        OPTIONAL. 
        URL for the Client's JSON Web Key [:term:`JWK`] document 
        that is used for JWS [:term:`JWS`] signing of Token Endpoint Requests 
        and OpenID Request Objects. 
    
        If :term:`jwk_encryption_url` is not provided it is also used for JWE [:term:`JWE]` encryption 
        of :term:`ID Token` and :term:`User Info` Endpoint Responses to the Client. 

        If the Client registers both :term:`x509_url` and :term:`jwk_url`, 
        the keys contained in both formats SHOULD be the same.

    jwk_encryption_url
        OPTIONAL. 
        URL for the Client's JSON Web Key [:term:`JWK`] that is used for JWE [:term:`JWE`] encryption 
        of ID Token and User Info Endpoint Responses to the Client. 

        If the Client registers both :term:`jwk_encryption_url` and :term:`x509_encryption_url`, 
        the keys contained in both formats SHOULD be the same.

    x509_url
        OPTIONAL. 
        URL for the Client's PEM encoded X.509 Certificate or Certificate chain 
        that is used for JWS [:term:`JWE`] signing of Token Endpoint Requests and OpenID Request Objects. 

        If :term:`x509_encryption_url` is not provided, 
        x509_url it is also used for JWE [:term:`JWE`] encryption 
        of ID Token and User Info Endpoint Responses to the Client. 

        If the Client registers both :term:`x509_url` and :term:`jwk_url`, 
        the keys contained in both formats SHOULD be the same.

    x509_encryption_url
        OPTIONAL. 
        URL for the Client's PEM encoded X.509 Certificate or Certificate chain 
        that is used for JWE [JWE] encryption of ID Token and User Info Endpoint Responses to the Client. 

        If the Client registers both :term:`jwk_encryption_url` and :term:`x509_encryption_url`, 
        the keys contained in both formats SHOULD be the same.

    sector_identifier_url
        OPTIONAL. 
        A HTTPS scheme URL to be used in calculating Pseudonymous Identifiers by the OP. 

        The URL contains a file with a single JSON array of :term:`redirect_uri` values. 

        Please see :ref:`Section 2.1.1 <reg.2.1.1>`.

    user_id_type
        OPTIONAL. 
        The user_id_type requested for responses to this client_id. 
        The user_id_types_supported element of discovery contains 
        a list of the supported user_id_type values for this server. 

        Valid types include pairwise and public.

    require_signed_request_object
        OPTIONAL. 
        The JWS [JWS] signature algorithm that MUST be required by the Authorization Server. 
        All OpenID Request Objects from this client_id MUST be rejected if not signed by this algorithm.

    userinfo_signed_response_algs
        OPTIONAL. 
        The JWS [JWS] encryption algorithm required for UserInfo responses. 
        If this is specified the response will be JWT [JWT] serialized.

    userinfo_encrypted_response_algs
        OPTIONAL. 
        A space delimited list of the JWE [JWE] alg and enc algorithms required for UserInfo responses. 
        If this is requested in combination with signing the response will be signed then encrypted. 
        If this is specified the response will be JWT [JWT] serialized.

    id_token_signed_response_algs
        OPTIONAL. 
        The JWS [JWS] signing algorithm required for the ID Token issued to this client_id. 
        The default if not specified is HS256 using the provided client_secret.

    id_token_encrypted_response_algs
        OPTIONAL. 
        A space delimited list of the JWE [JWE] alg and enc algorithms required for the ID Token issued to this client_id. 
        If this is requested the response will be signed then encrypted. The default if not specified is no encryption.

.. [#]   Of cource Connect defines only 2 flows ( code and implict ).
.. [#]   Check ":doc:oauth_jwt_bearer` later....

Following is a non-normative example request:

:: 

    POST /connect/register HTTP/1.1
    Accept: application/x-www-form-urlencoded
    Host: server.example.com
    
    type=client_associate
    &redirect_uris=https://client.example.com/callback%20https://client.example.com/callback2
    &logo_url=https://client.example.com/logo.png
    &user_id_type=pairwise
    &sector_identifier_url=https://othercompany.com/file_of_redirect_uris_for_our_sites.js
    &token_endpoint_auth_type=client_secret_basic
    &jwk_url=https://client.example.com/my_rsa_public_key.jwk
    &userinfo_encrypted_response_algs=RSA1_5%20A128CBC

(draft 09, http://openid.net/specs/openid-connect-registration-1_0.html#anchor3 )

