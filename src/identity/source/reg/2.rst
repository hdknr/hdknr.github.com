.. _reg.client_metadata:

2.  Client Metadata
=====================

Clients have metadata associated with their unique Client Identifier at the Authorization Server. These can range from human-facing display strings, such as a Client name, to items that impact the security of the protocol, such as the list of valid redirect URIs.

Client Metadata values used by OpenID Connect are:

.. glossary::

    redirect_uris
        REQUIRED. Array of redirection URI values used in the Authorization Code and Implicit grant types. One of these registered redirection URI values MUST exactly match the redirect_uri parameter value used in each Authorization Request, with the matching performed as described in Section 6.2.1 of [RFC3986] (Simple String Comparison).

    response_types
        OPTIONAL. JSON array containing a list of the OAuth 2.0 response_type values that the Client is declaring that it will restrict itself to using. If omitted, the default is that the Client will use only the code response type.

    grant_types
        OPTIONAL. JSON array containing a list of the OAuth 2.0 grant types that the Client is declaring that it will restrict itself to using. The grant type values used by OpenID Connect are:

            - authorization_code: The Authorization Code Grant described in OAuth 2.0 Section 4.1.
            - implicit: The Implicit Grant described in OAuth 2.0 Section 4.2.
            - refresh_token: The Refresh Token Grant described in OAuth 2.0 Section 6.
            - urn:ietf:params:oauth:grant-type:jwt-bearer: The JWT Bearer grant type defined in OAuth JWT Bearer Token Profiles [OAuth.JWT].

        The following table lists the correspondence between response_type values that the Client will use and grant_type values that MUST be included in the registered grant_types list:

            - code: authorization_code
            - id_token: implicit
            - token id_token: implicit
            - code id_token: authorization_code, implicit
            - code token: authorization_code, implicit
            - code token id_token: authorization_code, implicit

        If omitted, the default is that the Client will use only the authorization_code grant type.

    application_type
        OPTIONAL. Kind of the application. The default if not specified is web. The defined values are native or web. Web Clients using the OAuth implicit grant type MUST only register URLs using the https scheme as redirect_uris; they MUST NOT use localhost as the hostname. Native Clients MUST only register redirect_uris using custom URI schemes or URLs using the http: scheme with localhost as the hostname. Authorization Servers MAY place additional constraints on Native Clients. The Authorization Server MUST verify that all the registered redirect_uris conform to these constraints. This prevents sharing a Client ID across different types of Clients.

    contacts
        OPTIONAL. Array of e-mail addresses of people responsible for this Client. This might be used by some providers to enable a Web user interface to modify the Client information.

    client_name
        OPTIONAL. Name of the Client to be presented to the End-User. If desired, representation of this Claim in different languages and scripts is represented as described in Section 2.1.

    logo_uri
        OPTIONAL. URL that references a logo for the Client application. The value of this field MUST point to a valid image file.

    client_uri
        OPTIONAL. URL of the home page of the Client. The value of this field MUST point to a valid Web page. If present, the server SHOULD display this URL to the End-User in a followable fashion. If desired, representation of this Claim in different languages and scripts is represented as described in Section 2.1.

    token_endpoint_auth_method
        OPTIONAL. Requested authentication method for the Token Endpoint. The options are client_secret_post, client_secret_basic, client_secret_jwt, and private_key_jwt, as described in Section 2.2.1 of OpenID Connect Messages 1.0 [OpenID.Messages]. Other Authentication methods MAY be defined by extensions. If unspecified or omitted, the default is client_secret_basic HTTP Basic Authentication Scheme as specified in Section 2.3.1 of OAuth 2.0 [RFC6749].

    policy_uri
        OPTIONAL. URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used. The OpenID Provider SHOULD display this URL to the End-User if it is given.

    tos_uri
        OPTIONAL. URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms of service. The OpenID Provider SHOULD display this URL to the End-User if it is given.

    jwks_uri
        OPTIONAL. URL for the Client's JSON Web Key Set [JWK] document. If the Client signs requests to the Server, it contains the signing key(s) the Server uses to validate signatures from the Client. The JWK Set MAY also contain the Client's encryption keys(s), which are used by the Server to encrypt responses to the Client. When both signing and encryption keys are made available, a use (Key Use) parameter value is REQUIRED for all keys in the document to indicate each key's intended usage. OPTIONAL.

    sector_identifier_uri
        OPTIONAL. URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a file with a single JSON array of redirect_uri values. Please see Section 5. Providers that use pairwise sub (subject) values SHOULD provide a sector_identifier_uri.

    subject_type
        OPTIONAL. subject_type requested for responses to this client_id. The subject_types_supported element of discovery contains a list of the supported subject_type values for this server. Valid types include pairwise and public.

    request_object_signing_alg
        OPTIONAL. JWS [JWS] alg algorithm [JWA] that MUST be used for requests to the Authorization Server. The valid values are listed in Section 3.1 of JWA [JWA]. All Request Objects from this client_id MUST be rejected if not signed by this algorithm. Servers SHOULD support RS256.

    userinfo_signed_response_alg
        OPTIONAL. JWS alg algorithm [JWA] REQUIRED for UserInfo Responses. The valid values are listed in Section 3.1 of JWA [JWA]. If this is specified the response will be JWT [JWT] serialized, and signed using JWS.

    userinfo_encrypted_response_alg
        OPTIONAL. JWE [JWE] alg algorithm [JWA] REQUIRED for encrypting UserInfo Responses. The valid values are listed in Section 4.1 of JWA [JWA]. If this is requested in combination with signing the response will be signed then encrypted. If this is specified the response will be JWT [JWT] serialized, and encrypted using JWE.

    userinfo_encrypted_response_enc
        OPTIONAL. JWE enc algorithm [JWA] REQUIRED for symmetric encryption of UserInfo Responses. The valid values are listed in Section 4.2 JWA [JWA]. If userinfo_encrypted_response_alg is specified the default for this value is A128CBC-HS256. If this is requested in combination with signing the response will be signed then encrypted. If this is specified the response will be JWT [JWT] serialized, and encrypted using JWE.

    id_token_signed_response_alg
        OPTIONAL. JWS alg algorithm [JWA] REQUIRED for the ID Token issued to this client_id. The valid values are listed in Section 3.1 of JWA [JWA], with the exception of none, which MUST NOT be used as the ID Token alg value. The default if not specified is RS256. The public key for validating the signature is provided by retrieving the JWK Set referenced by the jwks_uri element from OpenID Connect Discovery 1.0 [OpenID.Discovery].

    id_token_encrypted_response_alg
        OPTIONAL. JWE alg algorithm [JWA] REQUIRED for encrypting the ID Token issued to this client_id. The valid values are listed in Section 4.1 of JWA [JWA]. If this is requested, the response will be signed then encrypted. The default, if not specified, is no encryption.

    id_token_encrypted_response_enc
        OPTIONAL. JWE enc algorithm [JWA] REQUIRED for symmetric encryption of the ID Token issued to this client_id. The valid values are listed in Section 4.2 of JWA [JWA]. If id_token_encrypted_response_alg is specified, the default for this parameter is A128CBC-HS256. If this is requested in combination with signing, the response will be signed then encrypted. If this is specified, the response will be JWT [JWT] serialized, and encrypted using JWE.

    default_max_age
        OPTIONAL. Default Maximum Authentication Age. Specifies that the End-User MUST be actively authenticated if the End-User was authenticated longer ago than the specified number of seconds. The max_age request parameter overrides this default value.

    require_auth_time
        OPTIONAL. Boolean value specifying whether the auth_time Claim in the id_token is REQUIRED. It is REQUIRED when the value is true. The auth_time Claim request in the Request Object overrides this setting.

    default_acr_values
        OPTIONAL. Default requested Authentication Context Class Reference values. Array of strings that specifies the default acr values that the Authorization Server is being requested to use for processing requests from this Client, with the values appearing in order of preference. The Authentication Context Class satisfied by the authentication performed is returned as the acr Claim Value in the issued ID Token. The acr Claim is requested as a Voluntary Claim by this parameter. The acr_values_supported discovery element contains a list of the supported acr values supported by this server. Values specified in the acr_values request parameter or an acr Claim request override these default values.

    initiate_login_uri
        OPTIONAL. URI using the https scheme that the Authorization Server can call to initiate a login at the Client. The URI MUST accept requests via both GET and POST. The Client MUST understand the login_hint and iss parameters and SHOULD support the target_link_uri parameter.

    post_logout_redirect_uris
        OPTIONAL. Array of URLs supplied by the RP to which it MAY request that the End-User's User-Agent be redirected using the post_logout_redirect_uri parameter after a logout has been performed, as specified in OpenID Connect Session Management 1.0 [OpenID.Session].

    request_uris
        OPTIONAL. Array of request_uri values that are pre-registered by the Client for use at the Authorization Server. Servers MAY cache the contents of the files referenced by these URIs and not retrieve them at the time they are used in a request. OPs can require that request_uri values used be pre-registered with the require_request_uri_registration discovery parameter.
        If the contents of the request file could ever change, these URI values SHOULD include the base64url encoded SHA-256 hash value of the file contents referenced by the URI as the value of the URI fragment. If the fragment value used for a URI changes, that signals the server that its cached value for that URI with the old fragment value is no longer valid.


.. note::
    - :ref:`discovery.provider_metadata`

( draft 19, http://openid.net/specs/openid-connect-registration-1_0.html#client-metadata )
