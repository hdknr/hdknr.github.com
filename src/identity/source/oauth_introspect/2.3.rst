2.3. Non-normative Example


For example, 
a Protected Resource accepts a request from a Client
carrying an :doc:`OAuth2 Bearer Token <oauth_bearer>`.  

In order to know how and whether to serve the request, 
the Protected Resource then makes the following request 
to the Introspection Endpoint of the Authorization Server.

The Protected Resource is here authenticating with its own Client ID
and Client Secret as per OAuth2 :term:`[RFC6749]` :ref:`Section 2.3.1 <oauth.2.3.1>`.

Following is a non-normative example request 
(with line wraps for display purposes only):

::

   POST /register HTTP/1.1
   Accept: application/x-www-form-urlencoded
   Host: server.example.com
   Authorization: Basic czZCaGRSa3F0Mzo3RmpmcDBaQnIxS3REUmJuZlZkbUl3

   token=X3241Affw.4233-99JXJ

The Authorization Server validates the client credentials and looks
up the information in the token.  
If the token is valid, it returns the following JSON document.

Following is a non-normative example valid token response (with line
wraps for display purposes only):

::

   HTTP/1.1 200 OK
   Content-Type: application/json
   Cache-Control: no-store

   {
    "valid": true,
    "client_id":"s6BhdRkqt3",
    "scope": "read write dolphin,
    "sub": "2309fj32kl",
    "aud": "http://example.org/protected-resource/*"
   }


If the token presented is not currently active
(but the authentication presented is valid), 
it returns the following JSON document.

Following is a non-normative example response to
an inactive or invalid token
(with line wraps for display purposes only):

::

   HTTP/1.1 200 OK
   Content-Type: application/json
   Cache-Control: no-store

   {
    "valid": false
   }

If the client credentials are invalid or there is another error, 
the Authorization Server responds 
with an HTTP 400 (Bad Request) as described in :ref:`OAuth 2.0 section 5.2 <oauth.5.2>` [RFC6749].

( http://tools.ietf.org/html/draft-richer-oauth-introspection-04#section-2.3 )
