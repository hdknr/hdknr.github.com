3.  Token Endpoint
========================

.. note::
    -  Client: HTML FORM POST
    -  Server
        
        - JSON : Access Token, ID Token ... 
        - Cache-Content : no-store
        - Pragma : no-cache

    -  TLS direct request and response
   

The Token Endpoint handles requests for 
retrieving and refreshing :term:`Access Tokens` 
as well as :term:`ID Token` and other variables.

Clients MUST use the HTTP "**POST**" method 
to make requests to the Token Endpoint. 
Request parameters are added using :term:`form serialization`.

Clients MAY provide authentication parameters 
in the request to the Token Endpoint 
as described in :ref:`Section 2.2.1 of OpenID Connect Messages <messages_2_2_1>` [OpenID.Messages].

Authorization Servers MUST support 
the use of the HTTP "POST" method defined in RFC 2616 [RFC2616] at the Token Endpoint.

Authorization Servers MUST require 
the use of a transport-layer security mechanism. 
The Authorization Server MUST support TLS 1.2 RFC 5246 [RFC5246] 
and/or TLS 1.0 [RFC2246] and MAY support other transport-layer mechanisms with equivalent security.

All Token Endpoint responses that contain 
tokens, 
secrets, or other sensitive information MUST include the following HTTP response header fields and values: 

.. table:: HTTP Response Headers and Values 

 +----------------------+-------------------+
 | Header Name          | Header Value      |
 +======================+===================+
 | Cache-Control        | no-store          |
 +----------------------+-------------------+
 | Pragma               | no-cache          |
 +----------------------+-------------------+

(draft 12, http://openid.bitbucket.org/openid-connect-standard-1_0.html#token_ep )
