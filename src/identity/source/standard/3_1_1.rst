3.1.1.  Access Token Request
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

To obtain an :term:`Access Token`, :term:`Refresh Token` or :term:`ID Token`, 
the :term:`Client` MUST authenticate to the :term:`Token Endpoint` 
using the authentication method registered for its :term:`client_id`, 
as documented in :ref:`Section 2.2.1 of OpenID Connect Messages 1.0 <messages_2_2_1>` [:term:`OpenID.Messages`] 
The :term:`Client` sends the parameters via HTTPS POST 
to the :term:`Token Endpoint` using form serialization as specified in :ref:`Section 4.1.3 <oauth_4_1_3>` 
of OAuth 2.0 [:term:`OAuth2.0`]:

The following is a non-normative example. Line wraps after line 4 are for display purpose only:

::

    POST /token HTTP/1.1
    Host: server.example.com
    Content-Type: application/x-www-form-urlencoded
    Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
    
    grant_type=authorization_code&code=SplxlOBeZQQYbYS6WxSbIA
    &redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb


The Authorization Server MUST:

    - Require client authentication for any :term:`Client` 
      issued client credentials (or with other authentication requirements),
    - Authenticate the :term:`Client` if client authentication is included 
      and ensure the :term:`Authorization Code` was issued to the authenticated :term:`Client`,
    - Verify that the :term:`Authorization Code` is valid, and
    - Ensure that the :term:`redirect_uri` parameter is present 
      if the :term:`redirect_uri` parameter was included in the initial :term:`Authorization Request` and that their values are identical.

(draft 12)

