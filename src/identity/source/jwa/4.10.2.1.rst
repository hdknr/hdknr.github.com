4.10.2.1. AES_CBC_HMAC_SHA2 Encryption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The authenticated encryption algorithm takes as input four octet strings: 
a secret key K, 
a plaintext P, 
associated data A, 
and an initialization vector IV.  

The :term:`authenticated ciphertext` value E and the :term:`authentication tag` value T 
are provided as outputs.  

The data in the plaintext are encrypted and authenticated, 
and the associated data are authenticated, but not encrypted.

The encryption process is as follows, 
or uses an equivalent set of steps:

   1.  The secondary keys MAC_KEY and ENC_KEY are generated from the
       input key K as follows.  

       Each of these two keys is an octet string.

          MAC_KEY consists of the initial MAC_KEY_LEN octets of K, in order.

          ENC_KEY consists of the final ENC_KEY_LEN octets of K, in order.

       Here we denote the number of octets in the MAC_KEY as MAC_KEY_LEN, 
       and the number of octets in ENC_KEY as ENC_KEY_LEN;
       the values of these parameters are specified by the AEAD algorithms 
       (in Section 4.10.3 and Section 4.10.4).  

       The number of octets in the input key K is the sum of MAC_KEY_LEN and
       ENC_KEY_LEN.  
       When generating the secondary keys from K, 
       MAC_KEY and ENC_KEY MUST NOT overlap.  

       Note that the MAC key comes before
       the encryption key in the input key K; 
       this is in the opposite order of the algorithm names in the identifier
       "AES_CBC_HMAC_SHA2".

       .. note::
      
          K (Secret Key ) = MAC_KEY + ENC_KEY

          +--------------------+--------------------+
          | MAC_KEY            | ENC_KEY            |
          +--------------------+--------------------+

          <--- MAC_KEY_LEN  --> <-- ENC_KEY_LEN   -->

          IV = 128 bit (16 octet )

   2.  The Initialization Vector (IV) used is a 128 bit value generated
       randomly or pseudorandomly for use in the cipher.

       .. note::
            IVは固定で128bit(16octet) 

   3.  The plaintext is CBC encrypted using PKCS #5 padding using
       ENC_KEY as the key, and the IV.  
       We denote the ciphertext output from this step as E.

       .. note::
            - プレーンテキストを ENC_KEYとIVを使って PKCS#5 パディングでCBC暗号化。

   4.  The octet string AL is equal to the number of bits in A expressed
       as a 64-bit unsigned integer in network byte order.

       .. note::
            - AL は 関連データ(A)のビット長。のオクテット数。

   5.  A :term:`message authentication tag` T is computed by applying HMAC
       [RFC2104] to the following data, in order:

          the associated data A,

          the initialization vector IV,

          the ciphertext E computed in the previous step, and

          the octet string AL defined above.

       The string MAC_KEY is used as the MAC key.  
       We denote the output of the MAC computed in this step as M. 

       The first T_LEN bits of M are used as T.

       .. note::
            - T_LENは実際のアルゴリズムで異なります。

   6.  The Ciphertext E and the Authentication Tag T are returned as the
       outputs of the authenticated encryption.

The encryption process can be illustrated as follows.  

Here K, P, A,
IV, and E denote the key, plaintext, associated data, initialization
vector, and ciphertext, respectively.

::

      MAC_KEY = initial MAC_KEY_LEN bytes of K,

      ENC_KEY = final ENC_KEY_LEN bytes of K,

      E = CBC-PKCS5-ENC(ENC_KEY, P),

      M = MAC(MAC_KEY, A || IV || E || AL),

      T = initial T_LEN bytes of M.


( https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-13#section-4.10.2.1 )
