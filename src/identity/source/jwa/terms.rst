用語
=======


.. glossary::

    Elliptic Curve Diffie-Hellman
    Elliptic Curve Diffie-Hellman Ephemeral Static

        :ref:`jwa.ecdh` 

    Key Derivation
        :ref:`jwa.key_derivation`

    Key Wrap
        :ref:`jwa.key_wrap`

    KEM
    Key Encapsulation Mechanisms
        - 鍵カプセル化メカニズム。
        - 例:  公開鍵キーカプセル化 : `PSEC-KEM <http://info.isl.ntt.co.jp/crypt/psec/intro.html>`_
        - 参考 :term:`Key Wrap`
        
.. _jwa.ecdh:

ECDHキー承諾プロトコル
-----------------------

.. note::
    - `ECDH アルゴリズムの概要 (CNG の例), Microsoft <http://msdn.microsoft.com/ja-jp/library/cc488016(v=vs.90).aspx>`_

- 共有秘密協定を作成できます
- 以前に交換した個人情報を使用することなく、
  セキュリティで保護されていないパブリックな媒体を介してこの操作を実行できます
- 共有秘密協定はキー マテリアルの派生に使用されます

EDH算出
^^^^^^^^^

- ECDH プロトコルは、p と g の 2 つのパブリックなパラメータに依存します。

    - パラメータ p は大きな素数
    - パラメータ g は p より小さい整数

- これらの 2 つのパラメータは、セキュリティで保護されていない通信回線上で交換されます。
- Alice と Bob は 2 つのパブリックなパラメータを受け取った後、プライベートな整数を選択します。

    - Alice は a を選択し、Bob は b を選択します。
    - これらの値は、秘密キーと呼ばれます。



ECDH の例
^^^^^^^^^^^^^^^^
小さな整数を使用して、ECDH アルゴリズムを例示します。

1. Alice と Bob は、素数 p と基本の整数 g について同意しています。

    ::

        p = 83, g = 8

2. Alice は秘密の整数 a = 9 を選び、Bob に (g^a) mod p を送信します。

    ::

        (8^9) mod 83 = 5

3. Bob は秘密の整数 b = 21 を選び、Alice に (g^b) mod p を送信します。

    ::

        (8^21) mod 83 = 18

4. Alice は ( ( (g^b) mod p)^a) mod p を計算します。

    ::

        (18^9) mod 83 = 24

5. Bob は ( ( (g^a) mod p)^b) mod p を計算します。

    ::

        (5^21) mod 83 = 24

- g^(ab) = g^(ba) であるため、Alice と Bob は同じ値 (24) を算出します。
- この値が共有秘密協定になります。
- Alice と Bob はこの値を使用して、
  メッセージを暗号化するときに AES アルゴリズムで使用されるキーマテリアルを派生させます。


.. _jwa.key_derivation:

Key Derivation
-------------------

- KDF(キー派生関数)に、入力キーと入力データを与えるとキーマテリアルを派生させることができます。
- この派生されたキーマテリアルを暗号化アルゴリズムで使う事ができます。
- ここで、入力キーを「キー派生キー」(Key Derivation Key)といいます。
- ２つの方法で生成します

    1. 承認された暗号化ランダムビットジェネレータ
    2. 承認されたキー確立プロセス(Key Establishment Process)

- 派生されたキーマテリアルを分割したそれぞれが暗号キーとして使う事ができます。
- ある派生キーマテリアルから同じキーを取得した物同志かどうかを判定するには、
  KDFを採用している暗号化スキームがそれを異なるキーに変換する方法を決めて
  おく必要がある。
- 例えば、128ビットキーマテリアルが派生されたら、
  最初の64ビットをMACのキーとして使い、
  後の64ビットを指定された暗号化アルゴリズムの暗号キーとしてつかうとか。
- キーマテリアルは複数のキーに分割する事ができる。
- 派生されるキーマテリアルの長さに応じて、KDFは擬似乱数関数(PRF)を複数呼び出す必要がある。
- あるキー派生キーから派生されたキーマテリアルは、
  別のキー派生キーとしても使う事ができる。
- よって、キー階層を作る事ができる。
-  


.. _jwa.key_wrap:

Key Wrap
-------------

.. note::
    - https://en.wikipedia.org/wiki/Key_Wrap

- キーラップ生成(Key Wrap Construction)とは、共通鍵暗号(Symetric Encryption)アルゴリズムです。
- 暗号キーマテリアルをカプセル化(暗号化)するために使われます。
- 用途

    (a) まだ信頼関係を結んでいない間にキーを保護する

    (b) 信頼できないネットワーク中でキーを転送する

- キーラップをキーのカプセル化アルゴリズムと考えてもいいですが、
  非対称(公開鍵) :term:`キーアプセル化アルゴリズム<KEM>` と混同すべきではない。
- ラップされたキーは短期間の使用に限定する。
- ラップに使うキーは長期で使える物を使用する。

