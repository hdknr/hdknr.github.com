3.4.  Digital Signature with ECDSA
----------------------------------------------------

The Elliptic Curve Digital Signature Algorithm (ECDSA) [DSS] 
provides for the use of Elliptic Curve cryptography, 
which is able to provide equivalent security 
to RSA cryptography 
but using shorter key sizes and with greater processing speed.  

.. note::
    - ECDSAの方がRSAと同等の強度の場合、キーが短くて速い

This means that ECDSA digital signatures 
will be substantially smaller 
in terms of length than equivalently strong RSA digital signatures.

This specification defines 
the use of ECDSA with the P-256 curve and
the SHA-256 cryptographic hash function, 
ECDSA with the P-384 curve and the SHA-384 hash function, 
and ECDSA with the P-521 curve and the SHA-512 hash function.  

The P-256, P-384, and P-521 curves are defined in :term:`[DSS]`.

The ECDSA P-256 SHA-256 digital signature is generated as follows:

    1.  Generate a digital signature of the JWS Signing Input 
        using ECDSA P-256 SHA-256 with the desired private key.  

        The output will be the pair (R, S), 
        where R and S are 256 bit unsigned integers.
    
    2.  Turn R and S into octet sequences in :term:`big endian order`, 
        with each array being be 32 octets long.  

        The octet sequence representations MUST NOT be shortened 
        to omit any leading zero octets contained in the values.
    

    3.  Concatenate the two octet sequences in the order R and then S.
        (Note that many ECDSA implementations will directly produce this
        concatenation as their output.)
    
    4.  The resulting 64 octet sequence is the JWS Signature value.

The following "alg" (algorithm) Header Parameter values 
are used to indicate that the JWS Signature is a digital signature value 
computed using the corresponding algorithm:

       +---------------------+-------------------------------+
       | alg Parameter Value | Digital Signature Algorithm   |
       +---------------------+-------------------------------+
       | ES256               | ECDSA using P-256 and SHA-256 |
       +---------------------+-------------------------------+
       | ES384               | ECDSA using P-384 and SHA-384 |
       +---------------------+-------------------------------+
       | ES512               | ECDSA using P-521 and SHA-512 |
       +---------------------+-------------------------------+

The ECDSA P-256 SHA-256 digital signature for a JWS is validated as
follows:

    1.  The JWS Signature value MUST be a 64 octet sequence.  

        If it is not a 64 octet sequence, the validation has failed.
    
    2.  Split the 64 octet sequence into two 32 octet sequences.  

        The first array will be R and the second S 
        (with both being in big endian octet order).
    
    3.  Submit the JWS Signing Input R, S and the public key (x, y) to
        the ECDSA P-256 SHA-256 validator.

Signing and validation with the ECDSA P-384 SHA-384 
and ECDSA P-521 SHA-512 algorithms is performed 
identically to the procedure for ECDSA P-256 SHA-256 -- 
just using the corresponding hash algorithms
with correspondingly larger result values.  

For ECDSA P-384 SHA-384, 
R and S will be 384 bits each, resulting in a 96 octet sequence.  

For ECDSA P-521 SHA-512, 
R and S will be 521 bits each, resulting in a 132 octet sequence.

Examples using these algorithms are shown in Appendices A.3 and A.4
of [JWS].


(draft20)
(https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-20#section-3.4)
