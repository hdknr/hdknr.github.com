4.6.2. Key Derivation for ECDH Key Agreement
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. note::
    - シェアードシークレットから派生させて、
      agreed upon key を作ります。
    - Concat KDF で派生させます
    - ダイジェストは SHA-256にします

The :term:`key derivation process` derives the :ref:`agreed upon key` 
from the shared secret :term:`Z` established 
through the ECDH algorithm, 
per :ref:`Section 6.2.2.2 <nist-sp800-56a.6.2.2.2>` of :term:`[NIST.800-56A]`.

.. note::
    -  :ref:`nist-sp800-56a.6.2.2.2` 

Key derivation is performed 
using the :term:`Concat KDF`, 
as defined in :ref:`Section 5.8.1 <nist-sp800-56a.5.8.1>` of :term:`[NIST.800-56A]`, 
where the :term:`Digest Method` is :term:`SHA-256`.  

.. note::
    -  :ref:`nist-sp800-56a.5.8.1`

The :term:`Concat KDF` parameters are set as follows:

.. glossary::

    Z  
        This is set to the representation of the shared secret Z 
        as an octet sequence.

        (共有シークレットのバイト列)

    keydatalen  

        This is set to the number of bits 
        in the desired output key.  

        (キーのビット数)

        For "ECDH-ES", 
        this is length of the key used by the "enc" algorithm.  

        For "ECDH-ES+A128KW", "ECDH-ES+A192KW", and
        "ECDH-ES+A256KW", 
        this is 128, 192, and 256, respectively.


        +-------------------+-----------+
        | enc               | ビット数  |
        +-------------------+-----------+
        | ECDH-ES+A128KW    | 128       |
        +-------------------+-----------+
        | ECDH-ES+A192KW    | 192       |
        +-------------------+-----------+
        | ECDH-ES+A256KW    | 256       |
        +-------------------+-----------+

    AlgorithmID  
        The AlgorithmID value is of the form Datalen || Data,
        where Data is a variable-length string of zero or more octets, 
        and
        Datalen is a fixed-length, big endian 32 bit counter that
        indicates the length (in octets) of Data.  

        In the :term:`Direct Key Agreement` case, 
        Data is set to the octets of the UTF-8
        representation of the "enc" Header Parameter value.  

        In the :term:`Key Agreement with Key Wrapping` case, 
        Data is set to the octets of the
        UTF-8 representation of the "alg" Header Parameter value.

    PartyUInfo  
        The PartyUInfo value is of the form Datalen || Data,
        where Data is a variable-length string of zero or more octets, 
        and
        Datalen is a fixed-length, big endian 32 bit counter that
        indicates the length (in octets) of Data.  

        If an ":term:`apu`" (agreement PartyUInfo) Header Parameter is present, 
        Data is set to the result of base64url decoding the "apu" value 
        and Datalen is set to the number of octets in Data.  

        Otherwise, Datalen is set to 0 and Data
        is set to the empty octet sequence.

    PartyVInfo  
        The PartyVInfo value is of the form Datalen || Data,
        where Data is a variable-length string of zero or more octets, 
        and
        Datalen is a fixed-length, big endian 32 bit counter that
        indicates the length (in octets) of Data.  

        If an ":term:`apv`" (agreement PartyVInfo) Header Parameter is present, 
        Data is set to the result of base64url decoding the "apv" value 
        and Datalen is set to the number of octets in Data.  
        
        Otherwise, Datalen is set to 0 and Data
        is set to the empty octet sequence.


    SuppPubInfo  
        This is set to the keydatalen 
        represented as a 32 bit big endian integer.

        (キーデータ長)

    SuppPrivInfo  
        This is set to the empty octet sequence.

Applications need to specify how the "apu" and "apv" parameters are
used for that application.  

The "apu" and "apv" values MUST be distinct, when used.  

Applications wishing to conform to [NIST.800-56A] 
need to provide values that meet the requirements of
that document, e.g., 
by using values that identify the sender and recipient.  

Alternatively, 
applications MAY conduct key derivation in
a manner similar to The Diffie-Hellman Key Agreement Method
[RFC2631]: 
In that case, 
the "apu" field MAY either be omitted or represent a random 512-bit value 
(analogous to PartyAInfo in Ephemeral-Static mode in [RFC2631]) 
and the "apv" field should not be present.

See :ref:`Appendix C <jwa.appendix.c>` for an example key agreement computation 
using this method.

(draft21)
(https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-21#section-4.6.2)
