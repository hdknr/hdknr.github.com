2.1.2.  Authorization Request
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Section :ref:`4.1.1 <oauth_4_1_1>` and :ref:`4.2.1 <oauth_4_2_1>`  
of OAuth 2.0 [:term:`OAuth2.0`] 
defines the OAuth :term:`Authorization Request` parameters. 
In this specification, 
the values to the parameters are defined as follows.

.. note::
    - :term:`Authorization Code` : :ref:`4.1.1 <oauth_4_1_1>` 
    - :term:`Implicit` : :ref:`4.2.1 <oauth_4_2_1>`  

.. glossary::

    response_type
        A **space delimited**, **case sensitive** list of ASCII string values. 
        Acceptable values include :term:`code`, :term:`token`, and :term:`id_token`. 
        The value MUST include :term:`code` for requesting an :term:`Authorization Code`, 
        :term:`token` for requesting an :term:`Access Token`, and :term:`id_token` for requesting an :term:`ID Token`. 

    scope
        A **space delimited**, 
        **case sensitive** list of ASCII string values. 
        The values specify an additive list of :term:`Claims` 
        that are returned by the :term:`UserInfo Endpoint`. The following values are defined:

            openid
                REQUIRED. 
                Informs the :term:`Authorization Server` that 
                the :term:`Client` is making an OpenID Connect request. 
                If the :term:`openid` scope is not present, 
                the request **MUST NOT be treated as an OpenID Connect request**. 
                The :term:`openid` value also requests that the :term:`ID Token` 
                associated with the authentication session be returned. 
                If the :term:`response_type` includes :term:`token`, 
                the :term:`ID Token` is returned in the :term:`Authorization Response` 
                along with the :term:`Access Token`. 
                If the :term:`response_type` includes :term:`code`, 
                the :term:`ID Token` is returned as part of the :term:`Token Endpoint response`. 
                This scope requests access to the :term:`user_id` Claim at the :term:`UserInfo Endpoint`. 

            profile
                OPTIONAL. 
                This requests that access to the End-User's profile Claims 
                excluding the address and email Claims at the UserInfo Endpoint be granted by the issued Access Token. 

            address
                OPTIONAL. 
                This requests that access to address Claim at the UserInfo Endpoint be granted by the issued Access Token. 

            email
                OPTIONAL. 
                This requests that access to the email and verified Claims 
                at the UserInfo Endpoint be granted by the issued Access Token. 

Other REQUIRED OAuth 2.0 parameters in the request include:

.. glossary::

    client_id
        The OAuth 2.0 Client Identifier. 

    redirect_uri
        A redirection URI where the response will be sent. 

The request MAY contain the following OAuth 2.0 parameters:

.. glossary::

    state
        RECOMMENDED. 
        An opaque value used to maintain state between the request and the callback; 
        it can serve as a protection against :term:`XSRF attacks`, among other uses. 

The following extension parameters are also defined:

.. glossary::

    nonce
        REQUIRED. 
        A random, unique string value used to mitigate :term:`replay attacks`. 

    display
        OPTIONAL. 
        An ASCII string value that specifies 
        how the :term:`Authorization Server` displays the authentication 
        and consent user interface pages to the End-User.

            page
                The :term:`Authorization Server` SHOULD display authentication 
                and consent UI consistent with a full user-agent page view. 
                If the display parameter is not specified this is the default display mode. 

            popup
                The Authorization Server SHOULD display authentication 
                and consent UI consistent with a popup user-agent window. 
                The popup user-agent window SHOULD be 450 pixels wide and 500 pixels tall. 

            touch
                The Authorization Server SHOULD display authentication and 
                consent UI consistent with a device that leverages a touch interface. 
                The Authorization Server MAY attempt to detect the touch device 
                and further customize the interface. 

            wap
                The :term:`Authorization Server` SHOULD display authentication 
                and consent UI consistent with a "feature phone" type display. 

            embedded
                The Authorization Server SHOULD display authentication  
                and consent UI consistent with the limitations of an embedded user-agent. 

    prompt
        OPTIONAL. 
        A space delimited, 
        case sensitive list of ASCII string values that specifies 
        whether the Authorization Server prompts the End-User 
        for reauthentication and consent. The possible values are:

            none
                The Authorization Server MUST NOT display any authentication or 
                consent user interface pages. An error is returned 
                if the End-User is not already authenticated 
                or the Client does not have pre-configured consent for the requested scopes. 
                This can be used as a method to check for existing authentication and/or consent. 

            login
                The Authorization Server MUST prompt the End-User for reauthentication. 

            consent
                The Authorization Server MUST prompt the End-User for consent before returning information to the Client. 

            select_account
                The Authorization Server MUST prompt the End-User to select a user account. 
                This allows a user who has multiple accounts 
                at the Authorization Server to select amongst the multiple accounts 
                that they may have current sessions for. 

        The prompt parameter can be used by the Client 
        to make sure that the End-User is still present for the current session 
        or to bring attention to the request. 
        If this parameter contains "none" with any other value, an error is returned. 

    request
        OPTIONAL. 
        A JWT [JWT] encoded OpenID Request Object. 

    request_uri
        OPTIONAL. 
        An URL that points to an OpenID Request Object. This is used to pass an OpenID Request Object by reference. 

(draft 07)
