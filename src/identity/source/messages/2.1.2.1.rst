:orphan:

2.1.2.1.  ID Token
~~~~~~~~~~~~~~~~~~~~~~~~

.. note::
    - 認証イベントに関するクレームを含んでいます
    
        - iss (:term:`Server` )
        - sub (:term:`End User` )
        - aud  (:term:`Client`, :term:`client_id` in :doc:`oauth` ) 

    - リプレーされないようになっています

        - :term:`nonce`

    - access_tokenとしても使えます

        - :term:`azp`

The ID Token is a :term:`security token` 
that contains Claims about the **authentication event** and other requested Claims. 
The ID Token is represented as a JSON Web Token (JWT) :term:`[JWT]`.

The ID Token is used to manage the authentication event and user identifier 
and is scoped to a **particular Client** via the :term:`aud` (:term:`audience`) 
and :term:`nonce` Claims.

The following Claims are REQUIRED and OPTIONAL within the ID Token:

.. glossary::

    iss
        REQUIRED. 

        Issuer Identifier for the Issuer of the response. 

    sub
        REQUIRED. 

        Subject identifier. 

        A locally unique and never reassigned identifier within the Issuer for the End-User, 
        which is intended to be consumed by the Client. 
        e.g. 24400320 or AItOawmwtWwcT0k51BayewNvutrJUqsvl6qs7A4. 


        It MUST NOT exceed 255 ASCII characters in length. 

    aud
        REQUIRED. 

        Audience that this ID Token is intended for. 

        It MUST contain the OAuth 2.0 client_id of the Client. 

    azp
        OPTIONAL. 

        Authorized Party. 

        This member identifies an OAuth 2.0 client authorized 
        to use this ID Token as an OAuth access token, 
        if different than the Client that requested the ID Token. 

        It MUST contain the client_id of the authorized party. 

    exp
        REQUIRED. 

        Expiration time on or after which the ID Token MUST NOT be accepted for processing. 

        The processing of this parameter requires that the current date/time 
        MUST be before the expiration date/time listed in the value. 

        Implementers MAY provide for some small leeway, 
        usually no more than a few minutes, to account for clock skew. 
        The value is the number of seconds from 1970-01-01T0:0:0Z as measured in UTC 
        until the desired date/time. 

        See RFC 3339 [RFC3339] for details regarding date/times in general and UTC in particular. 

    iat
        REQUIRED. 

        Time at which the JWT was issued. 
        The value is the number of seconds from 1970-01-01T0:0:0Z as measured in UTC 
        until the desired date/time. 

        See RFC 3339 [RFC3339] for details regarding date/times in general and UTC in particular. 

    acr
        OPTIONAL. 

        Authentication Context Class Reference. 

        String specifying an Authentication Context Class Reference value. 

        The values "1", "2", "3", and "4" map to the ITU-T X.1254 | ISO/IEC 29115 [ISO29115] 
        entity authentication assurance level of the authentication performed. 

        The value "0" indicates the End-User authentication did not meet the requirements 
        of ISO/IEC 29115 level 1. 

        Authentication using a long-lived browser cookie, for instance, 
        is one example where the use of "level 0" is appropriate. 

        Authentications with level 0 should never be used to authorize access 
        to any resource of any monetary value. 

        (This corresponds to the OpenID 2.0 PAPE [OpenID.PAPE] nist_auth_level 0.) 
        An absolute URI or a registered name [RFC6711] MAY be used as an acr value. 

    nonce
        String value used to associate a Client session with an ID Token, 
        and to mitigate replay attacks. 

        The value is passed through unmodified from the Authorization Request to the ID Token. 
        If present in the ID Token, 
        clients MUST verify that the nonce Claim value is equal to the value of the nonce parameter 
        sent in the Authorization Request. 

        If present in the Authorization Request, 
        Authorization Servers MUST include a nonce Claim in the ID Token with the Claim value 
        being the nonce value sent in the Authorization Request. 

        Use of the nonce is REQUIRED for all requests where an ID Token is returned directly 
        from the Authorization Endpoint. 

        It is OPTIONAL if the ID Token is returned from the Token Endpoint. 

    auth_time
        OPTIONAL. Time when the End-User authentication occurred, specified as the number of seconds from 1970-01-01T0:0:0Z as measured in UTC. If the id_token member of the OpenID Request Object contains the Claim request auth_time with a parameter of {"essential": true}, then this Claim is REQUIRED. (The auth_time Claim semantically corresponds to the OpenID 2.0 PAPE [OpenID.PAPE] auth_time response parameter.) 

    at_hash
        OPTIONAL. 

        Access Token hash value. 

        If the ID Token is issued from the Authorization endpoint with an access_token, 
        this is REQUIRED. 

        This is OPTIONAL if the ID Token is issued from the Token Endpoint. 

        The value is produced by base64url encoding the left-most half of the hash 
        created by hashing the access_token with the hash algorithm specified in JWS [JWA] 
        for the alg parameter in the JWS [JWS] header. 

        For instance, if the alg is RS256, 
        hash access_token with SHA-256
        , then take the left-most 128 bits and base64url encode them. 

    c_hash
        OPTIONAL. 

        Code hash value. 

        If the ID Token is issued from the Authorization endpoint with a code, 
        this is REQUIRED. 

        This is OPTIONAL if the ID Token is issued from the Token Endpoint. 

        The value is produced by base64url encoding the left-most half of the hash 
        created by hashing the code with the hash algorithm specified in JWS [JWA] 
        for the alg parameter in the JWS [JWS] header. 

        For instance, 
        if the alg is HS512, 
        hash code with SHA-512, 
        then take the left-most 256 bits and base64url encode them. 

    sub_jwk
        OPTIONAL. 

        Public key value used to check the signature of an ID Token 
        issued by a self-issued OpenID Provider, 
        as specified in Section 5 of OpenID Connect Standard 1.0 [OpenID.Standard]. 

        The key is in JWK format. 

        Use of the sub_jwk Claim is REQUIRED 
        when the OP is a self-issued OP and is NOT RECOMMENDED when the OP is not self-issued. 

ID Tokens MUST be signed using JWS [JWS] and OPTIONALLY both signed and encrypted using JWS [JWS] and JWE [JWE] respectively, thereby providing authentication, integrity, non-repudiation, and optionally, confidentiality.

Clients MUST directly validate the ID Token per ID Token Validation.

The following is a non-normative example of a base64url decoded ID Token (with line wraps for display purposes only):

.. code-block:: javascript

  {
   "iss": "https://server.example.com",
   "sub": "24400320",
   "aud": "s6BhdRkqt3",
   "nonce": "n-0S6_WzA2Mj",
   "exp": 1311281970,
   "iat": 1311280970,
   "auth_time": 1311280969,
   "acr": "2",
   "at_hash": "MTIzNDU2Nzg5MDEyMzQ1Ng"
  }


(draft 15)
