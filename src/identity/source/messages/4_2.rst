4.2.  Keys
-------------------------

The :term:`Server` advertises its supported signing and encryption algorithms 
in its discovery document. The related elements are:

The Provider provides its public Keys during Discovery in the following elements:

.. glossary::

    jwk_url
        URL of the OP's JSON Web Key [:term:`JWK`] document that 
        contains the Server's signing key that is used for :term:`JWS` signing the :term:`JWT`. 
        It MAY also be used by the :term:`Client` to JWE encrypt the JWT to the Server 
        if :term:`x509_encryption_url` or :term:`jwk_encryption_url` is not specified, 
        but this is discouraged. 
        A separate encryption key SHOULD be used. 

    jwk_encryption_url
        URL of the OP's JSON Web Key [:term:`JWK`] document 
        that contains the Server's encryption key that is used by the :term:`Client` to JWE encrypt the JWT to the Server. 
        If it is not present, its value is the same as the URL provided by :term:`jwk_url`. 

    x509_url
        URL of the OP's X.509 certificates in :term:`PEM` format that are used by the :term:`Server` for Signing the JWT. 
        It MAY also be used by the :term:`Client` to JWE Encrypt the JWT to the Server 
        if :term:`x509_encryption_url` is not specified and the key usage includes :term:`keyEncipherment`. 

    x509_encryption_url
        URL of the OP's X.509 certificates in :term:`PEM` format 
        that contains the Server's encryption key that is used by the Client to JWE encrypt the JWT to the Server. 
        If it is not present, 
        the URL provided by the :term:`x509_url` is used instead. 
        The certificate MUST include :term:`keyEncipherment` in the key usage. 

.. todo::

    :term:`keyEncipherment` seems to be abrupt here. X.509 Key Usage for Connect should be described somewhere.

The :term:`Client` provides its public Keys during Registration, 
in the following elements:

.. glossary::

    jwk_url
        OPTIONAL. URL for the Client's JSON Web Key [JWK] document that is used for JWS [JWS] signing of the Request Objects. If jwk_encryption_url is not provided, it is also used by the Server for JWE [JWE] encryption of JWT [JWT] to the Client. 

    jwk_encryption_url
        OPTIONAL. URL for the Client's JSON Web Key [JWK]. It is used by the Server for JWE [JWE] encryption of the response objects. 


    x509_url
        OPTIONAL. URL for the Client's PEM encoded X.509 Certificate or Certificate chain. It is used by the Client for JWS [JWS] signing of the request objects. If x509_encryption_url is not present, it is also used for JWE [JWE] encryption of the JWT [JWT] to the Client if the key usage includes keyEncipherment. 

    x509_encryption_url
        OPTIONAL. URL for the Client's PEM encoded X.509 Certificate or Certificate chain, used for JWE [JWE] encryption of JWT [JWT] to the Client. 

If keys are specified in both x509 and jwk, they MUST be the same keys.

Key algorithms like Elliptic Curve signing and key agreement require separate keys for signing and encryption for security. For RSA a single key MAY be used for both, but it is good practice to separate them.

(draft 07: http://openid.bitbucket.org/openid-connect-messages-1_0.html#sigenc.key )
