2.4.2.  UserInfo Response
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

If the requested schema is :term:`openid`, 
the response MUST return a JSON object 
that contains the full set or a subset of the Claims that are defined below. 
Additional Claims (not specified below) MAY also be returned.

If a Claim is not returned, 
that Claim Name SHOULD be omitted from the JSON object representing the Claims; 
it SHOULD NOT be present with a null or empty string value.

The members MAY be represented in multiple languages and scripts. 
To specify the languages and scripts, 
BCP47 [:term:`RFC5646`] language tags MUST be added to each member names delimited by a #, 
e.g., familyName#ja-Kana-JP for expressing Family Name in Katakana in Japanese, 
which is commonly used to index 
and represent the phonetics of the Kanji representation of the same represented as familyName#ja-Hani-JP. 


.. _messages_table_1:

.. table:: Table 1: Reserved Member Definitions 

    ======  ====    ===========
    Member  Type    Description
    ======  ====    ===========

.. glossary::

    user_id     
        string  

        REQUIRED Identifier for the End-User at the Issuer.

    name    
        string  

        End-User's full name in displayable form including all name parts, ordered according to End-User's locale and preferences.

    given_name  
        string  

        Given name or first name of the End-User.


    family_name     
        string  
    
        Surname or last name of the End-User.

    middle_name     
        string  

        Middle name of the End-User.

    nickname    
        string  

        Casual name of the End-User that MAY or MAY not be the same as the given_name. 
        For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.

    profile     
        string  

        URL of End-User's profile page.

    picture     
        string  

        URL of the End-User's profile picture.

    website     
        string  

        URL of End-User's web page or blog.

    email   
        string  

        The End-User's preferred e-mail address.

    verified    
        boolean     

        True if the End-User's e-mail address has been verified; otherwise false.

    gender  
        string  

        The End-User's gender: Values defined by this specification are female and male. Other values MAY be used when neither of the defined values are applicable.

    birthday    
        string  

        The End-User's birthday, represented as a date string in MM/DD/YYYY format. The year MAY be 0000, indicating that it is omitted.

    zoneinfo    
        string  

        String from zoneinfo [zoneinfo] time zone database. For example, Europe/Paris or America/Los_Angeles.

    locale  
        string  

        The End-User's locale, 
        represented as a BCP47 [:term:`RFC5646`] language tag. 
        This is typically an ISO 639-1 Alpha-2 [:term:`ISO639‑1`] language code 
        in lowercase and an ISO 3166-1 Alpha-2 [:term:`ISO3166‑1`] country code in uppercase, 
        separated by a dash. 
        For example, en-US or fr-CA. 
        As a compatibility note, 
        some implementations have used an underscore as the separator rather than a dash, 
        for example, en_US; Implementations MAY choose to accept this locale syntax as well.

    phone_number    
        string  

        The End-User's preferred telephone number. 
        E.164 [:term:`E.164`] is RECOMMENDED as the format of this claim. 
        For example, +1 (425) 555-1212 or +56 (2) 687 2400.

    address     
        JSON object     

        The End-User's preferred address. 
        The value of the address member is a JSON [:term:`RFC4627`] structure containing some 
        or all of the members defined in :ref:`Section 2.4.2.1 <messages_2_4_2_1>`.

    updated_time    
        string  

        Time the End-User's information was last updated, 
        represented as a RFC 3339 [:term:`RFC3339`] datetime. 
        For example, 2011-01-03T23:58:42+0000.


For privacy reasons, 
:term:`OpenID Providers` MAY elect to not provide values for some schema elements as part of the :term:`openid` scope.

The :term:`user_id` claim in the :term:`UserInfo Endpoint` response MUST exactly match 
the :term:`user_id` claim in the :term:`ID Token`, before using additional :term:`UserInfo Endpoint` claims.

The :term:`UserInfo Endpoint` MUST return Claims in JSON format 
unless a different format was specified during OpenID Connect Dynamic Client Registration 1.0 [:term:`OpenID.Registration`]. 
The :term:`UserInfo Endpoint` MAY return Claims in :term:`JWT` format, 
which can be signed and/or encrypted. 
The :term:`UserInfo Endpoint` MUST return a content-type header 
to indicate the format that is being returned. 
The following are accepted content types: 

.. table:: Accepted Content Types for UserInfo Endpoint response


    ================    =======================
    Content-Type        Format Returned
    ================    =======================
    application/json    plain text JSON object
    application/jwt     A JWT
    ================    =======================


The following is a non-normative example of such a response:

.. code-block:: javascript

    {
     "user_id": "248289761001",
     "name": "Jane Doe",
     "given_name": "Jane",
     "family_name": "Doe",
     "email": "janedoe@example.com",
     "picture": "http://example.com/janedoe/me.jpg"
    }

(draft 07 : http://openid.bitbucket.org/openid-connect-messages-1_0.html#anchor14 )

