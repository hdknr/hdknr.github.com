2.  Messages
==================

In OpenID Connect protocols, in abstract, 
the process proceeds by the :term:`Client` interacting with endpoints. 
There are a number of endpoints involved.

    1.  :term:`Authorization Endpoint`: 

        The :term:`Client` sends a request to the :term:`Authorization Server` at the :term:`Authorization Endpoint`. 
        The :term:`Authorization Server` then authenticates the :term:`End-User` to find out 
        if he is eligible [#]_ to make the authorization. 
        Then, 
        upon the authorization action of the :term:`End-User`, 
        the :term:`Authorization Server` returns an :term:`Authorization Response` 
        that includes :term:`Authorization Code`, :term:`code`. 
        For some :term:`Clients`, :term:`Implicit Grant` may be used to obtain :term:`access_token` 
        without using :term:`code`. 
        In this case, :term:`response_type` MUST be set to token.

    2.  :term:`Token Endpoint`: 

        The :term:`Client` sends the :term:`Access Token Request` to the :term:`Token Endpoint` 
        to obtain an :term:`Access Token Response` which includes an :term:`access_token`.

    3.  :term:`UserInfo Endpoint`: 

        The :term:`access_token` MAY be sent to the :term:`UserInfo Endpoint` to obtain :term:`Claims` about the :term:`End-User`.

    4.  :term:`Check ID Endpoint`: 

        An :term:`ID Token` MAY be sent to the :term:`Check ID Endpoint` to obtain information about the authentication event.

    5.  :term:`Session Management Endpoints`: 

        The :term:`ID Token` MAY be sent to these endpoints to manage the :term:`session`.

.. [#] Qualified or entitled to be chosen: eligible to run for office; eligible for retirement. (TheFreeDictionary)

(draft 07)
