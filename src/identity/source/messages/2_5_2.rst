2.5.2.  Aggregated and Distributed Claims
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Aggregated and distributed Claims are represented by using special _claim_names and _claim_sources members of the JSON object containing the Claims.

.. glossary::

    _claim_names
        This value is a JSON object 
        whose member names are the Claim Names for the Aggregated and Distributed Claims. 
        The member values are references to the member names 
        in the :term:`_claim_sources` member from which the actual Claim Values can be retrieved. 

    _claim_sources
        This value is a JSON object 
        whose member names are referenced by the member values of the :term:`_claim_names member`. 
        The member values contain sets of :term:`Aggregated Claims` or reference locations for :term:`Distributed Claims`. 
        The member values can have one of the following formats 
        depending on whether it is providing Aggregated or Distributed Claims:

            Aggregated Claims
                A JSON object that MUST contain the "JWT" member 
                whose value is a JWT [:term:`JWT`] that MUST contain all the Claims 
                in the :term:`_claim_names` object 
                that references the corresponding :term:`_claim_sources` member. 
                Other members MAY be present if they are understood by both parties.

                    JWT
                        REQUIRED. JWT Value. 

            Distributed Claims
                A JSON object that contains the following members and values:

                    endpoint
                        REQUIRED. 
                        The value is the OAuth 2.0 resource endpoint from which the associated Claim can be retrieved. 
                        The endpoint URL MUST return the Claim as a JWT. 

                    access_token
                        OPTIONAL. 
                        :term:`Access Token` enabling retrieval of the Claims from the endpoint URL 
                        by using the OAuth 2.0 Bearer [:term:`OAuth.Bearer`] scheme. 
                        Claims SHOULD be requested using the :term:`Authorization Request` header field 
                        and :term:`Claims Sources` MUST support this method. 
                        If the :term:`Access Token` is not available, 
                        Clients MAY need to retrieve the :term:`Access Token` out of band 
                        or use an a priori :term:`Access Token` that was negotiated 
                        between the :term:`Claim Source` and :term:`Client`, 
                        or the :term:`Claim Source` MAY reauthenticate the :term:`End-User` 
                        and/or reauthorize the :term:`Client`. 

        Other members MAY be present, if understood by both parties. 

The following is a non-normative response with :term:`Aggregated Claims`:

.. code-block:: javascript

    Claims Provider A contains the following Claims for Jane Doe:
    {
     "address": {
       "street_address": "1234 Hollywood Blvd.",
       "locality": "Los Angeles",
       "region": "CA",
       "postal_code": "90210",
       "country": "US"},
     "phone_number": "+1 (310) 123-4567"
    }

Claims Provider A signs the JSON Claims, resulting in a signed JWT:

::

    jwt_header.jwt_part2.jwt_part3

:term:`Authorization Server` returns Jane Doe's :term:`aggregated Claims` from :term:`Claims Provider` A:

.. code-block:: javascript

    {
     "name": "Jane Doe",
     "given_name": "Jane",
     "family_name": "Doe",
     "birthday": "01/01/2001",
     "eye_color": "blue",
     "email": "janedoe@example.com",

     "_claim_names": {
      "address": "src1",
      "phone_number": "src1"
     },

     "_claim_sources": {
      "src1": {"JWT": "jwt_header.jwt_part2.jwt_part3"}
     }
    }

The following is a non-normative response with :term:`Distributed Claims`:

:term:`Claims Provider` A (Jane Doe's Bank) contains the following Claims for Jane Doe:

.. code-block:: javascript

    {
     "shipping_address": {
       "street_address": "1234 Hollywood Blvd.",
       "locality": "Los Angeles",
       "region": "CA",
       "postal_code": "90210",
       "country": "US"},
     "payment_info": "Some_Card 1234 5678 90123 4562",
     "phone_number": "+1 (310) 123-4567"
    }
    
A Claims Provider B (Credit Agency) contains the following Claims for Jane Doe:

.. code-block:: javascript

    {
     "credit_score": "650"
    }
    

:term:`Authorization Server` returns Jane Doe's Claims along 
with the :term:`Distributed Claims` 
from :term:`Claims Provider` A and B 
by sending the :term:`Access Tokens` and URL locations where the Claims may be retrieved:

.. code-block:: javascript

    {
     "name": "Jane Doe",
     "given_name": "Jane",
     "family_name": "Doe",
     "email": "janedoe@example.com",
     "birthday": "01/01/2001",
     "eye_color": "blue",

     "_claim_names": 
     {
      "payment_info": "src1",
      "shipping_address": "src1",
      "credit_score": "src2"
     },

     "_claim_sources": {
      "src1": {"endpoint": "https://bank.example.com/claimsource"},
      "src2": {"endpoint": "https://creditagency.example.com/claimshere", "access_token": "ksj3n283dke"}
     }

    }


.. note::
    A single endpoint("src1") can return multiple type of claim set("payment_info" and "shipping_address").
    

(draft 07 : http://openid.bitbucket.org/openid-connect-messages-1_0.html#anchor18 )
