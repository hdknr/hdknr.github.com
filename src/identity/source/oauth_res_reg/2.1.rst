:orphan:

2.1. Scope Type Descriptions
------------------------------------

A :term:`scope type` is a **bounded extent of access** 
that is possible to perform on a :term:`resource set`.  
A scope type description is a JSON document with the following properties:

.. glossary::

   name  
      REQUIRED.  

      A human-readable string describing some scope
      (extent) of access.  This name is intended for ultimate use in the
      authorization server's user interface to assist the user in
      setting policies for protected resource sets that have this
      available scope.

   icon_uri  
      OPTIONAL.  

      A URI for a graphic icon representing the scope.
      The referenced icon is intended for ultimate use in the
      authorization server's user interface to assist the user in
      setting policies for protected resource sets that have this
      available scope.

For example, 
this description characterizes a scope type that
involves reading or viewing resources 
(vs. creating them or editing them in some fashion):

.. code-block:: javascript

   {
     "name": "View",
     "icon_uri": "http://www.example.com/icons/reading-glasses"
   }

Scope type descriptions MAY contain extension properties 
that are not defined in this specification.  
Extension names that are unprotected from collisions are 
outside the scope of the current specification.

A resource server MUST list a resource set's available scopes 
using URI references (as defined in :ref:`Section 2.2 <oauth_res_reg>`).  

The scope types available for use at any one resource server MUST have 
unique URI references so that 
the resource server's scope descriptions are uniquely distinguishable.  

A scope type URI reference MAY include a fragment identifier.  
Scope type descriptions MAY reside anywhere.
The resource server is not required to self-host scope type descriptions 
and may wish to point to standardized scope type descriptions residing elsewhere.  
Scope type description documents MUST be accessible to authorization servers 
through GET calls made to these URI references.

See :ref:`Section 8 <oauth_res_reg.8>` for a long-form example of scope types used 
in resource set registration.

(draft 00, http://tools.ietf.org/html/draft-hardjono-oauth-resource-reg-00#section-2.1 )
