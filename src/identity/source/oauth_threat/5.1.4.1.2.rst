5.1.4.1.2.  Standard :term:`SQL Injection` Countermeasures
############################################################

If a :term:`client identifier <client_id>` or 
other authentication component is queried or compared 
against a SQL Database it may become possible for an :term:`injection` attack to occur 
if parameters received are not validated before submission to the database.

   -  Ensure that server code is using the **minimum database privileges**
      possible to reduce the "surface" of possible attacks.

   -  **Avoid dynamic SQL** using concatenated input.  
      If possible, use static SQL.

   -  When using dynamic SQL, parameterize queries using **bind arguments**.
      Bind arguments eliminate possibility of SQL injections.

   -  **Filter and sanitize** the input.  
      For example, if an identifier has a known format, 
      ensure that the supplied value matches the identifier syntax rules.


.. note::

    - :ref:`oauth_threat.4.3.2`
    - :ref:`oauth_threat.4.4.1.2`
