4.6.6.  Threat: Leak of confidential data in HTTP-Proxies
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The HTTP Authorization scheme (OAuth HTTP Authorization Scheme) is optional.  
However, [RFC2616](Fielding, R., Gettys, J., Mogul, J.,
Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, "Hypertext
Transfer Protocol -- HTTP/1.1," .) 
relies on the :term:`Authorization <Authorization Header>` and
:term:`WWW-Authenticate headers <WWW=Authenticate Header>` 
to distinguish authenticated content 
so that it can be protected.  

Proxies and caches, in particular, may fail to adequately protect requests 
not using these headers.  
For example, private authenticated content may be stored in 
(and thus retrievable from) publicly-accessible caches.

Countermeasures:

   -  Resource servers not using the HTTP Authorization scheme (OAuth
      HTTP Authorization Scheme - see :ref:`Section 5.4.1 <oauth_threat.5.4.1>`) 
      should take care to
      use other mechanisms, such as the :term:`Cache-Control` header, to ensure
      that authenticated content is protected.

   -  Reducing :term:`scope` (see :ref:`Section 5.1.5.1 <oauth_threat.5.1.5.1>` ) 
      and :term:`expiry time` (:ref:`Section 5.1.5.3 <oauth_threat.5.1.5.3>`) 
      for access tokens can be used to reduce the damage in case of leaks.
