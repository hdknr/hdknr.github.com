4.4.2.4.  Threat: Manipulation of scripts
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A hostile party could act as the :term:`client` web server and 
replace or modify the actual implementation of the client (script).  
This could be achieved using DNS or ARP spoofing.  
This applies to clients implemented 
within the Web Browser in a scripting language.

Impact: 
The attacker could obtain user credential information and 
assume the full identity of the user.

Countermeasures:

   -  The :term:`authorization server` must authenticate the server from which
      scripts are obtained (see :ref:`Section 5.1.2 <oauth_threat.5.1.2>`).

   -  The client must ensure that scripts obtained have not been altered in transport 
      (see :ref:`Section 5.1.1 <oauth_threat.5.1.1>`).

   -  Introduce **one time per-use secrets** (e.g. :term:`client_secret`) values
      that can only be used by scripts in a small time window once loaded from a server.  
      The intention would be to reduce the effectiveness of 
      copying client-side scripts for re-use in an attackers modified code. 
      [[pending discussion]]



