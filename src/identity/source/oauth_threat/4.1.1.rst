4.1.1.  Threat: Obtain Client Secrets
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The attacker could try to get access to the secret of a particular :term:`client` in order to:

    -   replay its :term:`refresh tokens <refresh token>`  and :term:`authorization codes <authoization code>`, or

    -   obtain tokens on behalf of the attacked client with the privileges of that client.

The resulting impact would be:

    -   Client authentication of access to :term:`authorization server` can be bypassed

    -   Stolen refresh tokens or authorization codes can be replayed

Depending on the client category, 
the following attacks could be utilized to obtain the client secret.

*Attack: Obtain Secret From Source Code or Binary.* 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This applies for all client profiles.  
For open source projects, secrets can be extracted directly from source code in their public repositories.
Secrets can be extracted from application binaries just as easily when published source is not available to the attacker.  
Even if an application takes significant measures to obfuscate secrets in their application distribution one should consider 
that the secret can still be reverse-engineered by anyone with access to a complete functioning application bundle or binary.

_Countermeasures:_

    -   Don't issue secrets to public clients or clients with inappropriate security policy - :ref:`Section 5.2.3.1 <oauth_threat.5.2.3.1>`

    -   Public clients require user consent - :ref:`Section 5.2.3.2 <oauth_threat.5.2.3.2>`

    -   Use deployment-specific client secrets - :ref:`Section 5.2.3.4 <oauth_threat.5.2.3.4>`

    -   Client secret revocation - :ref:`Section 5.2.3.6 <oauth_threat.5.2.3.6>`


*Attack: Obtain a Deployment-Specific Secret.* 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

An attacker may try to obtain the secret from a client installation, 
either from a web site (web server) or a particular devices (native application).

_Countermeasures:_

    -   Web server: apply standard web server protection measures 
        (for config files and databases) - :ref:`Section 5.3.2 <oauth_threat.5.3.2>`

    -   Native applications: Store secrets in a secure local storage - :ref:`Section 5.3.3 <oauth_threat.5.3.3>`

    -   Client secret revocation - :ref:`Section 5.2.3.6 <oauth_threat.5.2.3.6>`

