4.4.1.6.  Threat: User session impersonation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A hostile party could impersonate the client site and 
impersonate the user's :term:`session` [#]_ on this client.  
This could be achieved using DNS or ARP spoofing.  

This applies to clients, which are :ref:`web applications`,
thus the :ref:`redirect URI` is not local to the host 
where the user's browser is running.

.. [#] Session key ? 

Impact: 
An attacker who intercepts the :ref:`authorization code` 
as it is sent by the browser to the callback endpoint can gain access to :term:`protected resources` 
by submitting the authorization code to the :ref:`client`.  
The client will exchange the authorization code for an :term:`access token`
and use the access token to access :term:`protected resources`
for the benefit of the attacker, 
delivering protected resources to the attacker, 
or modifying protected resources as directed by the attacker.  
If :doc:`OAuth <oauth>` is used by the client to delegate authentication to a social site 
(e.g. as in the implementation of the "Facebook Login" button), 
the attacker can use the intercepted authorization code to log in to the client as the user.

Note:
Authenticating the client during authorization code exchange will not help 
to detect such an attack as it is the legitimate client that obtains the tokens.

Countermeasures:

   -  In order to prevent an attacker from impersonating the end-users session, 
      the :ref:`redirection URI` of the client MUST point to a HTTPS protected endpoint 
      and the browser shall be utilized to authenticate this redirection URI 
      using server authentication (see :ref:`Section 5.1.2 <oauth_threat.5.1.2>`)
