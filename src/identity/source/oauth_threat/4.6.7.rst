4.6.7.  Threat: Token leakage via logfiles and HTTP referrers
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

If :term:`access tokens` are sent via :term:`URI query parameters`, 
such tokens may leak to log files and :term:`HTTP referrers`.

Countermeasures:

   -  Use :term:`authorization headers` or POST parameters instead of URI
      request parameters (see :ref:`Section 5.4.1 <oauth_threat.5.4.1>`).

   -  Set logging configuration appropriately

   -  Prevent unauthorized persons from access to system log files 
      (see :ref:`Section 5.1.4.1.1 <oauth_threat.5.1.4.1.1>` )

   -  HTTP referrers can be prevented by reloading the target page again
      without URI parameters

   -  Abuse of leaked access tokens can be prevented by enforcing
      authenticated requests (see :ref:`Section 5.4.2 <oauth_threat.5.4.2>`).

   -  The impact of token leakage may be reduced by limiting :term:`scope` 
      (see :ref:`Section 5.1.5.1 <oauth_threat.5.1.5.1>`) 
      and :term:`duration` (see :ref:`Section 5.1.5.3 <oauth_threat.5.1.5.3>`) 
      and enforcing **one time token** usage (see :ref:`Section 5.1.5.4 <oauth_threat.5.1.5.4>`).

