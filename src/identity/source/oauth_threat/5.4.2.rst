5.4.2.  Authenticated requests
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

An :term:`authorization server` may bind tokens to a certain :term:`client identitiy <client_id>`
and encourage :term:`resource servers` to validate that binding.  
This will require the :term:`resource server` to authenticate 
the originator of a request as the legitimate owner of a particular token.  
There are a couple of options to implement this countermeasure:

    -   The authorization server may associate the distinguished name of
        the client with the token (either internally or in the payload of an self-contained token).  
        The client then uses client certificate-based HTTP authentication 
        on the resource server's endpoint to authenticate its identity 
        and the resource server validates the name with the name referenced by the token.

    -   same as before, but the client uses his private key to sign the request 
        to the resource server 
        (public key is either contained in the token or sent along with the request)

    -   Alternatively, the authorization server may issue a token-bound secret, 
        which the client uses to sign the request.  
        The resource server obtains the secret either directly from the authorization server 
        or it is contained in an encrypted section of the token.
        That way the resource server does not "know" the client 
        but is able to validate whether the authorization server issued the token to that client

This mechanisms is a countermeasure against abuse of tokens by counterfeit resource servers.


.. note::

    - :ref:`oauth_threat.4.6.1`
    - :ref:`oauth_threat.4.6.7`
