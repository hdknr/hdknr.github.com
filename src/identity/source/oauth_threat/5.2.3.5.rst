5.2.3.5.  Validation of pre-registered redirect_uri
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

An :term:`authorization server` SHOULD require all clients 
to register their :term:`redirect_uri` 
and the redirect_uri should be the full URI as defined in [I-D.ietf-oauth-v2].  

The way this registration is performed is out of scope of this document.  
Every actual redirection URI sent with the respective :term:`client_id` to :term:`the end-user` authorization endpoint
must match the registered redirection URI.  
Where it does not match, 
the authorization server must assume the inbound GET request has been sent by an attacker and refuse it.  

Note: 
the authorization server MUST NOT redirect the user agent 
back to the redirection URI of such an authorization request.

   o  Authorization code leakage through counterfeit web site: 
      allows to detect attack attempts already after first redirect to end-user authorization endpoint 
      (:ref:`Section 4.4.1.7 <oauth_threat.4.4.1.7>`).

   o  For clients with validated properties, 
      this measure also helps to detect malicious applications early in the end-user authorization process.  
      This reduces the need for a interactive validation by the user 
      (:ref:`Section 4.4.1.4 <oauth_threat.4.4.1.4>`, :ref:`Section 4.4.2.3 <oauth_threat.4.4.2.3>`).

   o  Open Redirector attack via client redirection endpoint. ( :ref:`Section 4.1.5 <oauth_threat.4.1.5>`. )

   o  Open Redirector phishing attack via authorization server redirection endpoint ( :ref:`Section 4.2.4 <oauth_threat.4.2.4>`)

The underlying assumption of this measure is that 
an attacker must use another redirection URI in order to get access to the authorization code.  
Deployments might consider the possibility of an attacker using spoofing attacks to a victims device to circumvent this security measure.

Note: 
Pre-registering clients might not scale in some deployments (manual process) 
or require dynamic client registration (not specified yet).  
With the lack of dynamic client registration, 
it only works for clients bound to certain deployments at development/ configuration time.  
As soon as dynamic resource server discovery gets involved, that's no longer feasible.


.. note::
   - :ref:`oauth_threat.4.2.3`
   - :ref:`oauth_threat.4.2.4`
   - :ref:`oauth_threat.4.4.1.4`
   - :ref:`oauth_threat.4.4.1.7`
