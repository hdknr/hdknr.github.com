4.4.1.8.  Threat: CSRF attack against redirect-uri
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Cross-Site Request Forgery (:term:`CSRF`) is a web-based attack 
whereby HTTP requests are transmitted from a user 
that the website trusts or has authenticated 
(e.g., via HTTP redirects or HTML forms).  

CSRF attacks on :doc:`OAuth <oauth>` approvals can allow an attacker 
to obtain authorization to OAuth :term:`protected resources` 
without the consent of the User.

This attack works against the :term:`redirection URI` 
used in the :term:`authorization code` flow.  
An attacker could authorize an authorization code 
to their own :term:`protected resources` on an :term:`authorization server`.  
He then aborts the redirect flow back to the client on his device 
and tricks the victim into executing the redirect back to the client.  
The client receives the redirect, fetches the token(s) 
from the :term:`authorization server` 
and associates the victim's client session with the resources accessible 
using the token.

Impact: 
The user accesses resources on behalf of the attacker.  
The effective impact depends on the type of resource accessed.  
For example, the user may upload private items to an attacker's resources.  
Or when using OAuth in 3rd party login scenarios, 
the user may associate his client account with the attacker's identity 
at the external identity provider.  
This way the attacker could easily access the victim's data 
at the client by logging in from another device 
with his credentials at the external identity provider.

Countermeasures:

   -  The :term:`state` parameter should be used to link the authorization request
      with the :term:`redirection URI` used to deliver the :term:`access token`.
      :ref:`Section 5.3.6 <oauth_threat.5.3.6>`

   -  Client developers and end-user can be educated **not follow untrusted URLs**.


.. note::

    - :ref:`oauth_threat.5.3.6`
