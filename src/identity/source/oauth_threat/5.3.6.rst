5.3.6.  Link :term:`state` parameter to user agent session
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The :term:`state` parameter is used to link client requests 
and prevent :term:`CSRF` attacks, for example against the :term:`redirection URI`.  

An attacker could inject their own :term:`authorization code` or :term:`access token` [#], 
which can result in the client using an access token 
associated with the attacker's protected resources rather than the victim's 
(e.g. 
save the victim's bank account information to a :term:`protected resource` i
controlled by the attacker).

.. [#] Why access token CSRF to redirection URL ? Authorization Code can be CSRF-ed to redirect URL.

The :term:`client` SHOULD utilize the "**state**" request parameter 
to send the :term:`authorization server` a value 
that binds the request to the user-agent's authenticated state 
(e.g. a hash of the session cookie used to authenticate the user-agent) 
when making an authorization request.

Once authorization has been obtained from the end-user, 
the :term:`authorization server` redirects the end-user's user-agent 
back to the :term:`client` with the required binding value contained in the "state" parameter.

The binding value enables the client to verify the validity of the request 
by matching the binding value to the user-agent's authenticated state.


.. note::

    - :ref:`oauth_threat.4.4.1.8`

