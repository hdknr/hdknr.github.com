.. _scorm_cam.sco:

2.1.2. Sharable Content Object (SCO)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

A :term:`SCO` is a **collection** of one or more :term:`assets` 
that represent a single launchable :term:`learning resource` 
that uses the SCORM :term:`RTE` to communicate with an :term:`LMS`. 

A SCO represents the lowest level of granularity of a learning resource 
that is tracked by an LMS 
using the SCORM Run-Time Environment Data Model. 

The only difference between a SCO and an asset is that 
the SCO communicates with an LMS 
using the Institute for Electrical and Electronics Engineers 
(IEEE) ECMAScript Application Programming Interface 
for Content to Runtime Services Communication standard [1]. 

Figure 2.1.2a below shows an example of a SCO composed of several assets.

To improve reusability, 
a SCO should be independent of its learning context. 

For example, 
a SCO could be reused in different learning experiences 
to fulfill different learning objectives. 

In addition, 
an :term:`activity` may aggregate more than one SCO resource (and/or asset resource) 
to form a higher-level unit of instruction 
or training that fulfills higher level learning objectives.

SCOs are intended to be subjectively small units, 
such that potential reuse across multiple learning contexts is feasible. 

SCORM does not impose any particular constraints on the exact size of a SCO. 

During content design and authoring activities, 
when determining the size of a SCO, 
thought should be given to the smallest logical size of content to be tracked 
by an LMS at run-time. 

Reuse requirements for an organization will impact decisions 
about the size of SCOs. 

Other factors that may impact the decisions about the size of SCOs include 
how much information is required to achieve a learning outcome 
and the point where a branching decision is required for sequencing.

A SCO can be described with metadata 
(refer to the SCO Metadata definition below) 
to allow for search and discovery within repositories, 
thereby enabling opportunities for reuse.


.. image:: scorm_cam/fig.2.1.2a.png


A SCO is required to adhere to the requirements 
defined in the :doc:`SCORM RTE book <scorm_rte>` [2]. 

This implies that it must have a means 
to locate an LMS provided API Instance 
and must invoke the minimum API methods
(Initialize(“”)andTerminate(“”)). 

There is no obligation to invoke any of the other API methods 
as those are optional and depend upon the nature of the content.

The requirement that a SCO must utilize the SCORM RTE yields the following benefits:

• Any LMS that supports the SCORM RTE can launch SCOs and track them, 
  regardless of who generated them.

• Any LMS that supports the SCORM RTE can track any SCO 
  and know when it has been started and when it has ended.

• Any LMS that supports the SCORM RTE can launch any SCO in the same way.
